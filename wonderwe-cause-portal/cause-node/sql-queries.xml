<!DOCTYPE sql-queries [
<!ELEMENT sql-queries (sql-query)*>
<!ELEMENT sql-query (#PCDATA)>
<!ATTLIST sql-query id CDATA #REQUIRED>
]>
<sql-queries>
    <sql-query id="checkemail">
        <![CDATA[SELECT * FROM user_tbl WHERE email =? order by id desc]]>
    </sql-query>
    <sql-query id="registration">
        <![CDATA[INSERT INTO user_tbl(date_created,name,email,password,password_salt,verification_key,active) values(?,?,?,?,?,?,'yes')]]>
    </sql-query>
    <sql-query id="getUserEmailForMentions">
        <![CDATA[select ut.email,up.timezone_id
        from entity_tbl et
        inner join user_tbl ut on ut.id=et.entity_id
        inner join user_profile_tbl up
        on up.user_id=ut.id
        where et.entity_id=? and entity_type='user'
        union all
        SELECT ut.email,up.timezone_id FROM user_tbl ut inner join user_profile_tbl up
        on ut.id=up.user_id
        inner join charity_admin_tbl cat ON ut.id = cat.user_id
        inner join code_tbl ct ON (cat.charity_id=ct.charity_id and default_value=1)
        WHERE ct.id=?
        union all
        SELECT ut.email,up.timezone_id FROM user_tbl ut inner join user_profile_tbl up
        on ut.id=up.user_id
        inner join charity_admin_tbl cat ON ut.id = cat.user_id
        WHERE cat.charity_id = ? and default_value=1
        union all
        select ut.email,up.timeZone_id from user_tbl ut
        inner join user_profile_tbl up on up.user_id=ut.id
        inner join code_tbl ct on ct.user_id=ut.id where ct.id=?
        ]]>
    </sql-query>
    <sql-query id="getOriginalmeg">
        <![CDATA[select sut.*,upt.profile_pic_url,ut.name,ut.id,ut.email,et.entity_type,et.slug,
        COALESCE(uparent.name,oparent.title ) as parent_creator_name,
        COALESCE(upparent.profile_pic_url,oparent.profile_pic_url) as parent_creator_pic,
        COALESCE(uparent.id,cparent.id) as parent_creator_id,
        COALESCE(etparent.entity_type) as parent_type,
        mt.metadata as metadata,
        mt.code_json as code_tmpl
        from status_update_tbl sut
        inner Join entity_tbl et on et.id=sut.entity_id
        inner join user_tbl ut on ut.id=et.entity_id and et.entity_type ='user'
        inner join user_profile_tbl upt on upt.user_id=ut.id
        left outer join metadata_tbl mt on mt.post_id = sut.id
        left outer join entity_tbl etparent ON sut.original_entity_id = etparent.id and sut.status_type='share' and sut.date_deleted is null
        left outer join user_tbl uparent ON uparent.id = etparent.entity_id and etparent.entity_type ='user'
        left outer join user_profile_tbl upparent ON uparent.id = upparent.user_id
        left outer join charity_tbl cparent ON cparent.id=etparent.entity_id and etparent.entity_type ='charity'
        left outer join organization_tbl oparent ON oparent.id = cparent.organization_id
        where sut.id=?
        union all
        select sut.*,o.profile_pic_url,o.title,c.id,ut.email,et.entity_type,et.slug,
        COALESCE(uparent.name,oparent.title ) as parent_creator_name,
        COALESCE(upparent.profile_pic_url,oparent.profile_pic_url) as parent_creator_pic,
        COALESCE(uparent.id,cparent.id) as parent_creator_id,
        COALESCE(etparent.entity_type) as parent_type,
        mt.metadata as metadata,
        mt.code_json as code_tmpl
        from status_update_tbl sut
        inner Join entity_tbl et on et.id=sut.entity_id
        inner Join charity_tbl c ON c.id = et.entity_id and et.entity_type ='charity'
        inner Join charity_admin_tbl cat ON cat.charity_id = c.id
        inner Join user_tbl ut ON ut.id = cat.user_id
        inner Join organization_tbl o ON o.id = c.organization_id
        left outer join metadata_tbl mt on mt.post_id = sut.id
        left outer join entity_tbl etparent ON sut.original_entity_id = etparent.id and sut.status_type='share' and sut.date_deleted is null
        left outer join user_tbl uparent ON uparent.id = etparent.entity_id and etparent.entity_type ='user'
        left outer join user_profile_tbl upparent ON uparent.id = upparent.user_id
        left outer join charity_tbl cparent ON cparent.id=etparent.entity_id and etparent.entity_type ='charity'
        left outer join organization_tbl oparent ON oparent.id = cparent.organization_id
        where sut.id=?]]>
    </sql-query>
    <sql-query id="updateDonorDetails">
        <![CDATA[UPDATE user_tbl SET name=?,password=?,password_salt=?,verification_key=?,active='yes' WHERE id=?]]>
    </sql-query>
    <sql-query id="checkemailact">
        <![CDATA[SELECT * FROM user_tbl WHERE id =?]]>
    </sql-query>
    <sql-query id="checkemailactteam">
        <![CDATA[SELECT *,(SELECT count(*) FROM team_invitees_tbl WHERE team_id=?) AS invitations_count  FROM user_tbl WHERE id =?]]>
    </sql-query>
    <sql-query id="checkAdminEmail">
        <![CDATA[SELECT * FROM user_tbl WHERE email =?]]>
    </sql-query>
    <sql-query id="checkAdminEmailInCharity">
        <![CDATA[SELECT * FROM charity_admin_tbl WHERE charity_id =? and user_id=? and date_deleted is null]]>
    </sql-query>
    <sql-query id="login_sql">
        <![CDATA[SELECT u.*,ca.*,up.*, u.id as 'user_id',
        et.id as entity_id ,et.slug as userSlug,
        cct.country_code,
         cunt.currency_code,
         cunt.currency_symbol
            FROM user_tbl u
            INNER JOIN user_profile_tbl up ON up.user_id = u.id
            LEFT JOIN charity_admin_tbl ca ON ca.user_id = u.id
            left outer join countries_tbl cct on cct.id= up.country
            left outer join countries_currency cunt on cunt.country_id = up.country
            Inner join entity_tbl et on et.entity_id = u.id
            WHERE u.email =? and password=? and et.entity_type = 'user']]>
    </sql-query>
    <sql-query id="autoLoginSql">
        <![CDATA[SELECT u.*,ca.*,up.*, u.id as 'user_id', et.id as entity_id ,et.slug as userSlug FROM user_tbl u INNER JOIN user_profile_tbl up ON up.user_id = u.id
        LEFT JOIN charity_admin_tbl ca ON ca.user_id = u.id
        Inner join entity_tbl et on et.entity_id = u.id
        WHERE u.id =? and et.entity_type = 'user']]>
    </sql-query>
    <sql-query id="donor_default_login">
        <![CDATA[SELECT u.*,ca.*,up.*, u.id as 'user_id', et.id as entity_id ,et.slug as userSlug FROM user_tbl u
        inner join user_profile_tbl up ON up.user_id = u.id
        left outer join charity_admin_tbl ca ON ca.user_id = u.id
        inner join entity_tbl et on et.entity_id = u.id
        WHERE u.id=? and et.entity_type = 'user']]>
    </sql-query>
    <sql-query id="login_sqlcheck">
        <![CDATA[SELECT * FROM user_tbl WHERE email =? order by id asc]]>
    </sql-query>
    <sql-query id="postFeed">
        <![CDATA[INSERT INTO status_update_tbl (in_reply_id,entity_id,date_posted,ip_address,hostname,city,state,content,status_type,image_url,headline,original_entity_id) VALUES (?,?,?,?,?,?,?,?,?,?,?,?)]]>
    </sql-query>
    <sql-query id="deleteFeed">
        <![CDATA[UPDATE status_update_tbl SET date_deleted=now() WHERE id=? or (in_reply_id=? and status_type!='share')]]>
    </sql-query>
    <sql-query id="getDeleteFeeds">
        <![CDATA[select entity_id,status_type from status_update_tbl WHERE id=?]]>
    </sql-query>
    <sql-query id="feedList">
        <![CDATA[SELECT  sut.*,sut.id 'post_id', sut.date_posted 'date_post', et.id 'entity_id', et.entity_id 'charity_id',
        ct.name_tmp 'charity_name',ot.profile_pic_url 'profile_pic', sut.content 'charity_feed', sut.image_url 'image'
        FROM status_update_tbl sut
        INNER JOIN entity_tbl et ON sut.entity_id = et.id
        INNER JOIN charity_tbl ct ON et.entity_id = ct.id and et.entity_type='charity'
        INNER JOIN organization_tbl ot ON ct.organization_id = ot.id
        WHERE et.entity_id = ? and sut.status_type='post' and sut.date_deleted is null
        ORDER BY sut.date_posted DESC
        LIMIT 10 OFFSET ?]]>
    </sql-query>
    <sql-query id="teamdata">
        <![CDATA[select tt.*,ut.name as team_creator_name,et.slug as team_slug,ut.email as creator_email,ct.code_text as main_campaign_slug,ct.title as main_campaign_name from teams_tbl tt inner join user_tbl ut
on ut.id=tt.tc_user_id and tt.id=?
left outer join code_tbl ct on ct.id=tt.code_id
inner join entity_tbl et on et.entity_id=tt.id and et.entity_type='team';]]>
    </sql-query>
    <sql-query id="denyTeamRecord">
        <![CDATA[delete from teams_tbl where id=?]]>
    </sql-query>
    <sql-query id="getStatusUpdate">
        <![CDATA[update teams_tbl set status="published",approved_by=?,approved_date=? where id=?]]>
    </sql-query>
    <sql-query id="getTeamApprove">
        <![CDATA[select * from team_invitees_tbl where team_id=?]]>
    </sql-query>
    <sql-query id="getTeamUser">
        <![CDATA[select * from user_tbl where id in (?)]]>
    </sql-query>
    <sql-query id="retriveCharityFollowers">
        <![CDATA[SELECT entity_tbl.entity_id as charity_id,
        entity_tbl.id as entity_id,
        follow_tbl.user_id as url,
        user_tbl.name as display_name,
        user_tbl.id as user_id,
        user_profile_tbl.profile_pic_thumb_url as profile_pic_thumb_url,
        user_profile_tbl.city as city,
        user_profile_tbl.state as state,
        user_profile_tbl.about_me as description
        FROM  entity_tbl, follow_tbl, user_tbl, user_profile_tbl
        WHERE entity_tbl.entity_id=?
        AND entity_tbl.entity_type='charity'
        AND follow_tbl.entity_id=entity_tbl.id
        AND user_tbl.id=follow_tbl.user_id
        AND user_profile_tbl.user_id=user_tbl.id
        ORDER BY user_tbl.name ASC]]>
    </sql-query>
    <sql-query id="getCharityAdminUserName">
        <![CDATA[SELECT name,id AS admin_id FROM user_tbl WHERE id=?]]>
    </sql-query>
    <!-- charityDetails and charityObj data used in causeportal -->
    <sql-query id="getCharityAdminUserPermissions">
        <![CDATA[SELECT charity_admin_tbl.id as id,
        charity_admin_tbl.can_post as can_post,
        charity_admin_tbl.can_update_financial as can_update_financial,
        charity_admin_tbl.can_request_withdrawal as can_request_withdrawal,
        charity_admin_tbl.can_view_reports as can_view_reports,
        charity_admin_tbl.can_code as can_code,
        charity_admin_tbl.can_manage_followers as can_manage_followers,
        charity_admin_tbl.can_admin as can_admin,
        charity_tbl.organization_id as organization_id,
        charity_tbl.charity_from as charity_from,
        charity_tbl.wepay_account_state as wepay_account_state,
        charity_tbl.country as country,
        charity_tbl.state as State,
        charity_tbl.city as city,
        states_tbl.name as state,
        user_tbl.name as name,
        user_tbl.id as admin_id,
        organization_tbl.date_created as date_created,
        organization_tbl.web_url as web_url,
        organization_tbl.title as title,
        organization_tbl.profile_pic_url as profile_pic_url,
        entity_tbl.id as entity_id,
        entity_tbl.slug as userSlug,
        countries_currency.currency_code,
        countries_currency.currency_symbol,
        countries_tbl.country_code
        from charity_admin_tbl
        inner join charity_tbl on charity_tbl.id = charity_admin_tbl.charity_id
        inner join organization_tbl on organization_tbl.id = charity_tbl.organization_id
        inner join entity_tbl on entity_tbl.entity_id = charity_tbl.id and entity_tbl.entity_type ='charity'
        inner join user_tbl on user_tbl.id = charity_admin_tbl.user_id
        left outer join states_tbl on states_tbl.id = charity_tbl.state
        left outer join countries_currency on countries_currency.country_id = charity_tbl.country
        left outer join countries_tbl on countries_tbl.id = charity_tbl.country
        where charity_admin_tbl.charity_id=? and charity_admin_tbl.user_id=? and charity_admin_tbl.date_deleted IS NULL]]>
    </sql-query>
    <sql-query id="adminUsersByCharity">
        <![CDATA[SELECT charity_admin_tbl.id AS id,charity_admin_tbl.can_post AS can_post,
        charity_admin_tbl.can_update_financial AS can_update_financial,
        charity_admin_tbl.can_code AS can_code,
        charity_admin_tbl.can_manage_followers AS can_manage_followers,
        charity_admin_tbl.can_admin AS can_admin,
        charity_admin_tbl.can_view_reports AS can_view_reports,
        charity_admin_tbl.user_id AS user_id,
        charity_admin_tbl.default_value AS default_value,
        user_tbl.name AS name,
        user_profile_tbl.profile_pic_url
        FROM charity_admin_tbl, user_tbl,user_profile_tbl
        WHERE charity_admin_tbl.charity_id=?
        AND charity_admin_tbl.date_deleted IS NULL
        AND user_tbl.id=charity_admin_tbl.user_id
        AND user_tbl.id=user_profile_tbl.user_id
        AND charity_admin_tbl.user_id!=?
        ORDER BY user_tbl.name ASC]]>
    </sql-query>
    <sql-query id="addCharityAdmin">
        <![CDATA[INSERT INTO charity_admin_tbl (charity_id, user_id, can_post, can_update_financial, can_request_withdrawal,can_view_reports, can_code, can_manage_followers, can_admin,default_value) VALUES (?,?,?,?,?,?,?,?,?,?)]]>
    </sql-query>
    <sql-query id="removeAdminUserByCharity">
        <![CDATA[UPDATE charity_admin_tbl SET date_deleted=? WHERE user_id=? and charity_id=?]]>
    </sql-query>
    <sql-query id="getCharitydefault">
        <![CDATA[select * from charity_admin_tbl where charity_id=? and default_value=?]]>
    </sql-query>
    <sql-query id="updatedefaultusermain">
        <![CDATA[UPDATE charity_admin_tbl SET default_value=0 WHERE user_id=?]]>
    </sql-query>
    <sql-query id="updatedefaultuserset">
        <![CDATA[UPDATE charity_admin_tbl SET default_value=1 WHERE user_id=?]]>
    </sql-query>
    <sql-query id="addNewAdmin">
        <![CDATA[INSERT INTO user_tbl (email,name,verification_key) VALUES (?,?,?)]]>
    </sql-query>
    <sql-query id="addProfilePic">
        <![CDATA[INSERT INTO user_profile_tbl (user_id) VALUES (?)]]>
    </sql-query>
    <sql-query id="updateCharityAdmin">
        <![CDATA[UPDATE charity_admin_tbl
        SET can_post=?,can_update_financial=?,can_request_withdrawal=?,can_view_reports=?,can_code=?,can_manage_followers=?,can_admin=? WHERE charity_id=? AND user_id=?]]>
    </sql-query>
    <!--<sql-query id="login_sql">
    <![CDATA[SELECT * FROM user_tbl u INNER JOIN user_profile_tbl up ON up.user_id = u.id
    INNER JOIN charity_admin_tbl ca ON ca.user_id = u.id
    INNER JOIN charity_tbl c ON c.id = ca.charity_id
    WHERE u.email =? and u.password=?]]>
    </sql-query> -->
    <sql-query id="charity_stats">
        <![CDATA[INSERT INTO news]]>
    </sql-query>
    <sql-query id="codeCategoryByCharity">
        <![CDATA[SELECT * FROM code_category_tbl WHERE charity_id=? ORDER BY title ASC]]>
    </sql-query>
    <sql-query id="codeCategoryInsert">
        <![CDATA[INSERT INTO code_category_tbl(charity_id,title) VALUES(?,?)]]>
    </sql-query>
    <sql-query id="followerByCharity">
        <!-- Complete details for follower cards on organization profile pages -->
        <![CDATA[SELECT COALESCE(iq.user_id,false) as is_following,e.entity_id as charity_id,
        e.entity_id as id,
        e.id as entity_id,
        f.user_id as user_id,
        u.name as display_name,
        up.profile_pic_url as profile_pic_url,
        up.background_pic_url,
        up.city as city,
        stl.name as state,
        (select eee.following_users + eee.following_charities + eee.following_codes from entity_tbl eee
        where eee.entity_id=u.id and eee.entity_type='user') as following,
        (select nooffollowers from entity_tbl eee where eee.entity_id=u.id and eee.entity_type='user') as nooffollowers,
        (select count(*) from code_tbl c where c.user_id =u.id and c.individual is not null and c.status!='draft') as campaigns,
        up.about_me as description,
        (select slug as userSlug from entity_tbl eee where eee.entity_id=u.id and eee.entity_type='user') as userSlug
        FROM entity_tbl e inner join follow_tbl f on f.entity_id=e.id AND e.entity_type='charity'
        inner join user_tbl u on u.id=f.user_id and u.date_deleted is NULL
        inner join user_profile_tbl up on up.user_id=u.id
        left outer join (select ff.user_id,ee.entity_id from follow_tbl ff inner join entity_tbl ee  on ff.user_id=? and ff.entity_id=ee.id and ee.entity_type='user') iq on iq.entity_id=u.id
        left outer join states_tbl stl on stl.id = up.state
        WHERE e.entity_id=?
        ORDER BY u.name ASC]]>
    </sql-query>
    <sql-query id="followerByCharityNoStatus">
        <![CDATA[SELECT e.entity_id as charity_id,
        e.id as entity_id,
        et.nooffollowers as 'followers',
        et.noofposts as 'post',
        et.slug as 'slug',
        (et.following_users+et.following_charities+et.following_codes) as 'following',
        (select count(*) as count from code_tbl c where c.user_id=u.id and c.status='published' and c.date_deleted is NULL and c.end_date >= CURDATE()) as campaigns,
        f.user_id as user_id,
        u.name as display_name,
        up.profile_pic_url as profile_pic_url,
        up.background_pic_url,
        up.city as city,
        st.name as state,
        up.about_me as description
        FROM entity_tbl e
        inner join follow_tbl f on f.entity_id=e.id AND e.entity_type='charity'
        inner join user_tbl u on u.id=f.user_id and u.date_deleted is NULL
        inner join entity_tbl et on u.id=et.entity_id AND et.entity_type='user'
        inner join user_profile_tbl up on up.user_id=u.id
        left outer join states_tbl st on st.id = up.state
        WHERE e.entity_id=?
        ORDER BY u.name ASC]]>
    </sql-query>
    <sql-query id="followerByCharityStatus">
        <![CDATA[SELECT e.entity_id as charity_id,
        e.id as entity_id,e.entity_type as entity_type,
       et.nooffollowers as 'followers',
       et.noofposts as 'post',
       et.slug as slug,
       (et.following_users+et.following_charities+et.following_codes) as 'following',
       (select count(*) from code_tbl c where c.user_id =u.id and c.individual is not null and c.status!='draft') as campaigns,
        f.user_id as user_id,
        u.name as display_name,
        up.profile_pic_url as profile_pic_url,
        up.background_pic_url,
        up.city as city,
        st.name as state,
        up.about_me as description,
        COALESCE(null,'user') as entity_type
        FROM entity_tbl e
       inner join follow_tbl f on f.entity_id=e.id AND e.entity_type='charity'
       inner join user_tbl u on u.id=f.user_id
       inner join entity_tbl et on u.id=et.entity_id AND et.entity_type='user'
       inner join user_profile_tbl up on up.user_id=u.id
       left outer join states_tbl st on st.id = up.state
       WHERE e.entity_id=? and u.name like ?
        ORDER BY u.name ASC]]>
    </sql-query>
    <sql-query id="codeCategoryDelete">
        <![CDATA[DELETE FROM code_category_tbl WHERE id = ?]]>
    </sql-query>
    <sql-query id="codeInsert">
        <![CDATA[INSERT INTO code_tbl(parent_code_id, charity_id, category_id, user_id, date_created, date_deleted, code_text, type, start_date, end_date, suggested_donation, title, description, goal, goal_notified, match_amount, match_name, city, state, beneficiary, country, campaign_zip, address_2, address_1, code_picture_url, code_slug, charity_default, short_name, code_video_url, status, last_modified_date, thank_message, fundraise, individual, parent_id, team_campaign, parent_user_id, payment_gateway_id, show_in_search,progress_notifications,can_mailing_required,group_admin,
        last_change_user,donation_alert_required,p2p_approval_required,p2p_offlinedonation_deny,donotallow_p2p_campaigns,published_date,team_approve,team_offline_deny,donotallow_team_campaigns,app_fee) VALUES(?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?,?,?,?,?,?,?)]]>
    </sql-query>
    <!-- Create a new campaign (also includes peer-to-peer campaigns) -->
    <sql-query id="defaultCodeInsert">
        <![CDATA[INSERT INTO code_tbl SET ?]]>
    </sql-query>
    <sql-query id="codesOfCharity">
        <![CDATA[SELECT id, code_text FROM code_tbl WHERE charity_id=? ORDER BY code_text ASC]]>
    </sql-query>
    <sql-query id="codeUrls">
        <![CDATA[SELECT code_text,title,user_id,parent_user_id FROM code_tbl WHERE id=?]]>
    </sql-query>
    <sql-query id="profileByCharity">
        <![CDATA[SELECT charity_tbl.organization_id as organization_id,
        charity_tbl.email as email,
        charity_tbl.phone as phone,
        charity_tbl.reach as reach,
        charity_tbl.ein as tax_id,
        charity_tbl.address_1 as address_1,
        charity_tbl.address_2 as address_2,
        charity_tbl.city as city,
        charity_tbl.state as state,
        charity_tbl.country,
        charity_tbl.postal_code as postal_code,
        charity_tbl.ntee_code as code_registry,
        charity_tbl.charity_from,
        organization_tbl.title as title,
        organization_tbl.full_description as full_description,
        organization_tbl.web_url as web_url,
        organization_tbl.profile_pic_thumb_url as profile_pic_thumb_url,
        organization_tbl.profile_pic_url as profile_pic_url,
        organization_tbl.background_pic_url as background_pic_url,
        organization_tbl.timezone_id as timezone_id,
        et.slug
        FROM charity_tbl
        inner join organization_tbl on organization_tbl.id = charity_tbl.organization_id
        inner join entity_tbl et on charity_tbl.id = et.entity_id and et.entity_type ='charity'
        WHERE charity_tbl.id=?
        ORDER BY organization_tbl.title ASC]]>
    </sql-query>
    <sql-query id="updateCharityProfile">
        <![CDATA[UPDATE charity_tbl SET  reach=?,ein=?, ntee_code=? WHERE id=?]]>
    </sql-query>
    <sql-query id="updateAppFee">
        <![CDATA[UPDATE code_tbl SET  app_fee=? WHERE id=?]]>
    </sql-query>
    <sql-query id="charityInfoUpdate">
        <![CDATA[UPDATE charity_tbl SET email=?,address_1=?,address_2=?,city=?,country=?,state=?,postal_code=?,phone=? WHERE id=?]]>
    </sql-query>
    <sql-query id="charitytable">
        <![CDATA[SELECT organization_id FROM charity_tbl WHERE id=?]]>
    </sql-query>
    <sql-query id="updateCharityProfileInOrg">
        <![CDATA[UPDATE organization_tbl SET title=?,full_description=?,web_url=?,profile_pic_url=?,background_pic_url=?,timezone_id=? WHERE id=?]]>
    </sql-query>
    <sql-query id="profilePicUrlUpdate">
        <![CDATA[UPDATE organization_tbl SET profile_pic_url=?,profile_pic_thumb_url=? WHERE id=?]]>
    </sql-query>
    <sql-query id="charityCodes">
        <![CDATA[SELECT * FROM code_tbl WHERE charity_id=? ORDER BY title ASC]]>
    </sql-query>
    <sql-query id="charityCodeData">
        <![CDATA[SELECT c.*,e.slug,cc.currency_code,cc.currency_symbol,cat.category_id FROM code_tbl c
        inner join entity_tbl e on e.entity_id= c.id and e.entity_type='code'
        inner join charity_tbl ct on ct.id= c.charity_id
        inner join ww_code_category_tbl cat on cat.code_id= c.id
        left outer join countries_currency cc on cc.country_id = ct.country
        WHERE c.id=?]]>
    </sql-query>
    <sql-query id="updateCharityCodeData">
        <![CDATA[UPDATE code_tbl SET code_text=?,end_date=?,suggested_donation=?,title=?,code_picture_url=?, code_video_url=?, description=?, type=?, goal=?, match_amount=?, match_name=?, category_id=?, city=?, state=?, campaign_zip=?,address_1=?,address_2=?,short_name=?,country=?,thank_message=?,beneficiary=?,category_id=?,last_change_user=?,last_modified_date=?,can_mailing_required=?,p2p_approval_required=?,donation_alert_required=?,p2p_offlinedonation_deny=? WHERE id=?]]>
    </sql-query>
    <sql-query id="charityTransactions">
        <![CDATA[SELECT transaction_tbl.id as transaction_id,
        UNIX_TIMESTAMP(transaction_tbl.transaction_date) AS transaction_date,
        transaction_tbl.amount as amount,
        transaction_tbl.code_id as code_id,
        transaction_tbl.source as source,
        transaction_tbl.user_id as user_id,
        transaction_tbl.type as transaction_type,
        transaction_tbl.processing_fee as processing_fee,
        transaction_tbl.wonderwe_fee as wonderwe_fee,
        transaction_tbl.refunded_date as refunded_date,
        transaction_tbl.refunded_amount as refunded_amount,
        user_tbl.name as name,
        user_tbl.id as user_id
        FROM transaction_tbl, user_tbl
        WHERE transaction_tbl.charity_id=?
        AND transaction_tbl.transaction_date >= ?
        AND transaction_tbl.transaction_date <= ?
        AND user_tbl.id=transaction_tbl.user_id
        ORDER BY transaction_tbl.transaction_date DESC]]>
    </sql-query>
    <sql-query id="charityCodeTransactions">
        <![CDATA[SELECT transaction_tbl.id as transaction_id,
        UNIX_TIMESTAMP(transaction_tbl.transaction_date) AS transaction_date,
        transaction_tbl.amount as amount,
        transaction_tbl.code_id as code_id,
        transaction_tbl.source as source,
        transaction_tbl.user_id as user_id,
        transaction_tbl.type as transaction_type,
        transaction_tbl.processing_fee as processing_fee,
        transaction_tbl.wonderwe_fee as wonderwe_fee,
        transaction_tbl.refunded_date as refunded_date,
        transaction_tbl.refunded_amount as refunded_amount,
        code_tbl.code_text as code_text,
        user_tbl.name as name,
        user_tbl.id as user_id
        FROM transaction_tbl, code_tbl, user_tbl
        WHERE transaction_tbl.charity_id=?
        AND transaction_tbl.transaction_date >= ?
        AND transaction_tbl.transaction_date <= ?
        AND transaction_tbl.type='code'
        AND code_tbl.id=transaction_tbl.code_id
        AND user_tbl.id=transaction_tbl.user_id
        ORDER BY transaction_tbl.transaction_date DESC]]>
    </sql-query>
    <sql-query id="charityStatistics">
        <![CDATA[SELECT DATE(tt.transaction_date) 'date', cdt.title 'campaign', tt.amount 'amount', ut.name 'donor'
        FROM transaction_tbl tt, user_tbl ut, code_tbl cdt
        WHERE tt.charity_id=?
        AND tt.user_id = ut.id
        AND tt.code_id = cdt.id
union all
SELECT DATE(tt.transaction_date) 'date', cht.name_tmp 'campaign', tt.amount 'amount', ut.name 'donor'
 FROM transaction_tbl tt
inner join charity_tbl cht on cht.id=tt.charity_id and tt.code_id is null
inner join user_tbl ut on ut.id=tt.user_id where tt.charity_id=? order by date desc
]]>
    </sql-query>
    <sql-query id="selectCharityCategories">
        <![CDATA[SELECT category_id, charity_id FROM ww_charity_category_tbl WHERE charity_id=?]]>
    </sql-query>
    <sql-query id="getCategoryTitle">
        <![CDATA[SELECT title FROM charity_category_tbl WHERE id=?]]>
    </sql-query>
    <!-- update organization categories from organization profile settings page -->
    <sql-query id="addSelectCategorys">
        <![CDATA[INSERT INTO ww_charity_category_tbl (category_id,charity_id) VALUES (?,?)]]>
    </sql-query>
    <!-- Load existing member data in member portal settings page -->
    <sql-query id="profileinfo">
        <![CDATA[select u.*,up.*,e.slug from user_tbl u
                          INNER JOIN user_profile_tbl up on up.user_id =u.id
                          inner join entity_tbl e on e.entity_id = u.id and e.entity_type ='user'
                          where u.id=?]]>
    </sql-query>
    <sql-query id="profileinfoWithEmail">
        <![CDATA[select * from user_tbl u INNER JOIN user_profile_tbl up on up.user_id =u.id where u.email=?]]>
    </sql-query>
    <sql-query id="orgname">
        <![CDATA[SELECT title,web_url FROM organization_tbl WHERE id=?]]>
    </sql-query>
    <sql-query id="updatemail">
        <![CDATA[UPDATE user_tbl SET email=? WHERE id=?]]>
    </sql-query>
    <sql-query id="charity_count">
        <![CDATA[SELECT charity_admin_tbl.charity_id AS id
        FROM charity_admin_tbl
        WHERE charity_admin_tbl.user_id=?
        AND charity_admin_tbl.date_deleted IS NULL]]>
    </sql-query>
    <sql-query id="transFilterByDates">
        <![CDATA[SELECT   tt.transaction_date, SUM(tt.amount) 'Total_Filter_AS'
        FROM     transaction_tbl tt
        WHERE    tt.charity_id = ?
        AND (tt.transaction_date BETWEEN ? and ?)
        ##AND YEAR(tt.transaction_date)=2015
        GROUP BY YEAR(tt.transaction_date)
        ORDER BY YEAR(transaction_date) DESC]]>
    </sql-query>
    <sql-query id="transFilterByYear">
        <![CDATA[SELECT  SUM(tt.amount) 'as_donations_yearly',
        COUNT(DISTINCT(tt.user_id)) 'as_donors_yearly'
        FROM transaction_tbl tt
        WHERE tt.charity_id = ?
        AND tt.transaction_date BETWEEN CURDATE() - INTERVAL 1 YEAR AND CURDATE()
        GROUP BY DATE_FORMAT(tt.transaction_date,'%y')
        ORDER BY DATE_FORMAT(tt.transaction_date,'%y') DESC]]>
    </sql-query>
    <sql-query id="transFilterByMonth">
        <![CDATA[SELECT  SUM(tt.amount) 'as_donations_montly',
        COUNT(DISTINCT(tt.user_id)) 'as_donors_montly'
        FROM transaction_tbl tt
        WHERE tt.charity_id = ?
        AND tt.transaction_date BETWEEN CURDATE() - INTERVAL 2 MONTH AND CURDATE()
        GROUP BY DATE_FORMAT(tt.transaction_date,'%y%m')
        ORDER BY DATE_FORMAT(tt.transaction_date,'%y%m') DESC
        ]]>
    </sql-query>
    <sql-query id="transFilterByWeek">
        <![CDATA[SELECT SUM(tt.amount) 'as_donations_weekly',
        COUNT(DISTINCT(tt.user_id)) 'as_donors_weekly'
        FROM transaction_tbl tt
        WHERE tt.charity_id = 1500337
        AND tt.transaction_date BETWEEN CURDATE() - INTERVAL 1 WEEK AND CURDATE()
        GROUP BY WEEK(tt.transaction_date)
        ORDER BY WEEK(tt.transaction_date) DESC
        ]]>
    </sql-query>
    <sql-query id="transFilterByToday">
        <![CDATA[SELECT  SUM(tt.amount) 'as_donations_day',
        COUNT(DISTINCT(tt.user_id)) 'as_donors_day'
        FROM transaction_tbl tt
        WHERE tt.charity_id = ?
        AND tt.transaction_date BETWEEN CURDATE() - INTERVAL 1 DAY AND CURDATE() + INTERVAL 1 DAY
        GROUP BY DATE_FORMAT(tt.transaction_date,'%y%m%d')
        ORDER BY DATE_FORMAT(tt.transaction_date,'%y%m%d') DESC
        ]]>
    </sql-query>
    <sql-query id="getNewFollowersByDates">
        <![CDATA[SELECT YEAR(follow_tbl.date_followed), COUNT(distinct(follow_tbl.user_id)) New_Followers_By_Year
        FROM entity_tbl, follow_tbl, user_tbl, charity_tbl
        WHERE charity_tbl.id=?
        AND (follow_tbl.date_followed BETWEEN ? and ?)
        AND entity_tbl.entity_id=charity_tbl.id
        AND follow_tbl.entity_id=entity_tbl.id
        GROUP BY YEAR(follow_tbl.date_followed)
        ORDER BY YEAR(follow_tbl.date_followed)]]>
    </sql-query>
    <sql-query id="getNewFollowersByYear">
        <![CDATA[SELECT     COUNT(DISTINCT(ft.user_id)) 'AS_New_Followers_Yearly'
        FROM entity_tbl et, follow_tbl ft, user_tbl ut, charity_tbl ct
        WHERE ct.id=?
        AND ft.date_followed BETWEEN CURDATE() - INTERVAL 1 YEAR AND CURDATE()
        AND et.entity_id=ct.id
        AND ft.entity_id=et.id
        GROUP BY DATE_FORMAT(ft.date_followed,'%y')
        ORDER BY DATE_FORMAT(ft.date_followed,'%y') DESC]]>
    </sql-query>
    <sql-query id="getNewFollowersByMonth">
        <![CDATA[SELECT COUNT(DISTINCT(ft.user_id)) 'AS_New_Followers_Montly'
        FROM entity_tbl et, follow_tbl ft, user_tbl ut, charity_tbl ct
        WHERE ct.id=?
        AND ft.date_followed BETWEEN CURDATE() - INTERVAL 1 MONTH AND CURDATE()
        AND et.entity_id=ct.id
        AND ft.entity_id=et.id
        GROUP BY DATE_FORMAT(ft.date_followed,'%y%m')
        ORDER BY DATE_FORMAT(ft.date_followed,'%y%m') DESC]]>
    </sql-query>
    <sql-query id="getNewFollowersByWeek">
        <![CDATA[SELECT     COUNT(DISTINCT(ft.user_id)) 'AS_New_Followers_Weekly'
        FROM entity_tbl et, follow_tbl ft, user_tbl ut, charity_tbl ct
        WHERE ct.id=?
        AND ft.date_followed BETWEEN CURDATE() - INTERVAL 1 WEEK AND CURDATE()
        AND et.entity_id=ct.id
        AND ft.entity_id=et.id
        GROUP BY DATE_FORMAT(ft.date_followed,'%y%m%w')
        ORDER BY DATE_FORMAT(ft.date_followed,'%y%m%w') ASC]]>
    </sql-query>
    <sql-query id="getNewFollowersToday">
        <![CDATA[SELECT COUNT(DISTINCT(ft.user_id)) 'AS_New_Followers_Day'
        FROM entity_tbl et, follow_tbl ft, user_tbl ut, charity_tbl ct
        WHERE ct.id=?
        AND ft.date_followed BETWEEN CURDATE() - INTERVAL 1 DAY AND CURDATE()
        AND et.entity_id=ct.id
        AND ft.entity_id=et.id
        GROUP BY DATE_FORMAT(ft.date_followed,'%y%m%d')
        ORDER BY DATE_FORMAT(ft.date_followed,'%y%m%d') DESC]]>
    </sql-query>
    <sql-query id="donorFilterByDates">
        <![CDATA[SELECT COUNT(DISTINCT(user_id)) 'Total_Donors_Filter'
        FROM transaction_tbl tt, charity_tbl ct
        where tt.charity_id=?
        AND (tt.transaction_date BETWEEN ? AND ?)]]>
    </sql-query>
    <sql-query id="donorFilterByYear">
        <![CDATA[SELECT YEAR(tt.transaction_date) 'Year', COUNT(DISTINCT(user_id)) 'Total_Donors_Yearly'
        FROM transaction_tbl tt, charity_tbl ct
        where tt.charity_id=?
        AND YEAR(tt.transaction_date)=?
        GROUP BY YEAR(tt.transaction_date) DESC]]>
    </sql-query>
    <sql-query id="donorFilterByMonth">
        <![CDATA[SELECT MONTH(tt.transaction_date) 'Monthly', COUNT(DISTINCT(user_id)) 'Total_Donors_Monthly'
        FROM transaction_tbl tt, charity_tbl ct
        where tt.charity_id=?
        AND YEAR(tt.transaction_date)=?
        GROUP BY MONTH(tt.transaction_date)
        ORDER BY MONTH(tt.transaction_date) DESC]]>
    </sql-query>
    <sql-query id="donorFilterByWeek">
        <![CDATA[SELECT WEEK(tt.transaction_date) 'Week', COUNT(DISTINCT(user_id)) 'Total_Donors_Week'
        FROM transaction_tbl tt, charity_tbl ct
        where tt.charity_id=?
        AND YEAR(tt.transaction_date)=?
        GROUP BY WEEK(tt.transaction_date)
        ORDER BY WEEK(tt.transaction_date) DESC]]>
    </sql-query>
    <sql-query id="donorFilterByToday">
        <![CDATA[SELECT tt.transaction_date 'tt_Date',DAY(tt.transaction_date) 'Day', COUNT(DISTINCT(user_id)) 'Total_Donors_day'
        FROM transaction_tbl tt, charity_tbl ct
        where tt.charity_id=?
        AND YEAR(tt.transaction_date)=?
        GROUP BY DAY(tt.transaction_date)
        ORDER BY DAY(tt.transaction_date) DESC]]>
    </sql-query>
    <sql-query id="getStates">
        <![CDATA[ SELECT * FROM states_tbl where country_id=? ORDER BY name]]>
    </sql-query>
    <sql-query id="getCountries">
        <![CDATA[ SELECT cct.*,cun.currency_symbol FROM countries_tbl cct inner join countries_currency cun on cun.country_id = cct.id where cct.data_status_code=1 ORDER BY name]]>
    </sql-query>
    <!-- Andrew's ww_categories_tbl query -->
    <sql-query id="getWwCategories">
        <![CDATA[ SELECT *
         FROM ww_categories_tbl
         ORDER BY name]]>
    </sql-query>
    <sql-query id="getDonationCountries">
        <![CDATA[ SELECT * FROM countries_tbl where country_code is not null ORDER BY name]]>
    </sql-query>
    <sql-query id="updateUserProfileInfo">
        <![CDATA[UPDATE user_profile_tbl SET about_me=?,address_1=?,address_2=?,home_phone=?,city=?,state=?,postal_code=?,gender=?,relationship=?,religious_affiliation=?,profile_pic_url=?,timezone_id=?,country=?,profile_completion=?,background_pic_url=? WHERE user_id=?]]>
    </sql-query>
    <sql-query id="updateUserInfo">
        <![CDATA[UPDATE user_tbl SET name=?,email=?,donoronboarding=? WHERE id=?]]>
    </sql-query>
    <sql-query id="password">
        <![CDATA[SELECT * FROM user_tbl WHERE id=?]]>
    </sql-query>
    <sql-query id="updatePassword">
        <![CDATA[UPDATE user_tbl SET password=? WHERE id=?]]>
    </sql-query>
    <sql-query id="selectedCharityDetails">
        <![CDATA[select c.*,o.title,ct.country_code from charity_tbl c
        inner join organization_tbl o on o.id=c.organization_id
        left outer join countries_tbl ct on ct.id = c.country where c.id=?]]>
    </sql-query>
    <sql-query id="getCharityPaymentGateWays">
        <![CDATA[select c.id, c.name_tmp,o.title,ct.country_code,
           pt.access_token, pt.account_id, pt.account_status as wepay_account_state, pt.account_status, pt.payment_gateway,
           pt.user_id,pt.id as pgid,
           pt.managed
         from charity_tbl c
        inner join organization_tbl o on o.id=c.organization_id
        left outer join payment_gateways_tbl pt on pt.charity_id = c.id
        left outer join countries_tbl ct on ct.id = c.country where c.id=?]]>
    </sql-query>
    <sql-query id="selectedCharityName">
        <![CDATA[select name_tmp from charity_tbl where id=?]]>
    </sql-query>
    <!-- the campaign cards on organization dashboard under 'campaigns' tab -->
    <sql-query id="charityCodesWithDonations">
        <![CDATA[select c.*,c.id as charity_code_id,
        (select COUNT(*) from code_tbl WHERE parent_id=c.id) AS no_of_p2p,
        (select count(*) from teams_tbl where code_id=c.id) AS no_of_team_fundraisers,
        ifnull(tctl.team_name, c.title) as title ,
        c.type as code_type,
        c.title as mainCampaignTitle,
        c.charity_id as code_charity_id,
        c.status as code_status,
        et.noof_donations as donation,
        TRUNCATE((et.noof_donations/c.goal)*100,2) as donation_progress,
        ot.background_pic_url,
        ot.title as organization_name,
        u.name as campaign_creator,
        et.slug, et.noof_donors,
        cct.currency_code,
        cct.currency_symbol,
        ifnull(tctl.code_picture_url ,c.code_picture_url) as code_picture_url
        from code_tbl c
        left join transaction_tbl tb on tb.code_id= c.id
        inner join entity_tbl et on et.entity_id =c.id and et.entity_type ='code'
        inner join charity_tbl ct on ct.id= c.charity_id
        inner join organization_tbl ot on ot.id = ct.organization_id
        left outer join user_tbl u on u.id= if(c.parent_user_id, c.parent_user_id, c.user_id)
        left outer join countries_currency cct on cct.country_id = ct.country
        left outer join team_campaigns_tbl tctl on tctl.team_code_id = c.id
        where c.charity_id=? and c.type in(?,?) and c.date_deleted is null
        GROUP BY c.id
        ORDER BY c.date_created desc]]>
    </sql-query>
    <sql-query id="activitySummeryYearly">
        <![CDATA[SELECT  SUM(tt.amount) 'AS_Donations_Yearly',
        COUNT(DISTINCT(tt.user_id)) 'AS_Donors_Yearly',
        (SELECT COUNT(DISTINCT(ft.user_id))
        FROM entity_tbl et, follow_tbl ft, user_tbl ut, charity_tbl ct
        WHERE ct.id=?
        AND YEAR(ft.date_followed)=?
        AND et.entity_id=ct.id
        AND ft.entity_id=et.id
        GROUP BY YEAR(ft.date_followed)
        ORDER BY YEAR(ft.date_followed)) 'AS_New_Followers_Yearly'
        FROM transaction_tbl tt
        WHERE tt.charity_id = ?
        AND YEAR(tt.transaction_date)=?
        GROUP BY YEAR(tt.transaction_date)
        ORDER BY YEAR(tt.transaction_date) DESC]]>
    </sql-query>
    <sql-query id="campainsBreakdownYear">
        <!-- Group Dashboard -->
        <![CDATA[SELECT sum(tt.amount) 'event_pie',
        (SELECT sum(tt.amount)
        FROM code_tbl cdt, transaction_tbl tt
        WHERE cdt.id = tt.code_id
        AND cdt.type = 'ongoing'
        AND cdt.charity_id = ?) 'ongoing_pie',
        (SELECT sum(tt.amount) FROM code_tbl cdt, transaction_tbl tt
        WHERE cdt.id = tt.code_id
        AND cdt.type = 'campaign'
        AND cdt.charity_id = ?) 'campaign_pie'
        FROM code_tbl cdt, transaction_tbl tt
        WHERE cdt.id = tt.code_id
        AND cdt.type = 'event'
        AND cdt.charity_id = ?]]>
    </sql-query>
    <sql-query id="summaryBreakdownYear">
        <!-- Group Dashboard -->
        <![CDATA[SELECT MONTH(tt.transaction_date) AS 'Month',
        count(distinct(tt.amount)) AS 'Donations',
        count(distinct(cdt.id)) AS 'Count_of_Codes'
        FROM code_tbl cdt, transaction_tbl tt
        WHERE tt.code_id = cdt.id
        AND cdt.charity_id=?
        AND YEAR(tt.transaction_date)=?
        ##AND (tt.transaction_date BETWEEN '2015-01-01' AND '2015-12-31')
        GROUP BY DATE_FORMAT(tt.transaction_date,'%y%m')
        ORDER BY DATE_FORMAT(tt.transaction_date,'%y%m')ASC]]>
    </sql-query>
    <sql-query id="totalsBreakdownYear">
        <!-- Group Dashboard -->
        <![CDATA[SELECT    SUM(tt.amount) 'Total_Donations',
        COUNT(DISTINCT(tt.user_id)) 'Total_Donors',
        ROUND (SUM(tt.amount)/COUNT(DISTINCT(tt.user_id))) 'Total_Avg'
        FROM transaction_tbl tt
        WHERE tt.charity_id=?
        GROUP BY tt.charity_id]]>
    </sql-query>
    <sql-query id="charity_details">
        <![CDATA[SELECT ct.id, ct.name_tmp,ct.city, ct.state FROM charity_tbl ct
        WHERE ct.id=?]]>
    </sql-query>
    <sql-query id="update_post">
        <![CDATA[UPDATE status_update_tbl SET content=? WHERE id=?]]>
    </sql-query>
    <sql-query id="getFollowersPostFollowing">
        <![CDATA[SELECT COUNT(DISTINCT sut.id) 'followers_post',
        (SELECT COUNT(DISTINCT ft.id)
        FROM user_tbl AS ut
        INNER JOIN entity_tbl AS et ON ut.id = et.entity_id
        LEFT JOIN follow_tbl AS ft ON et.id = ft.entity_id
        AND et.entity_type = 'user'
        WHERE ft.user_id = ?) 'followers_following',
        (SELECT COUNT(DISTINCT(ft.user_id))
        FROM entity_tbl AS et, follow_tbl AS ft
        WHERE et.id = ft.entity_id
        AND et.entity_id = ?)'followers_followers'
        FROM status_update_tbl AS sut
        LEFT JOIN entity_tbl AS et ON (sut.entity_id = et.id)
        LEFT JOIN follow_tbl AS ft ON (et.id = ft.entity_id)
        LEFT JOIN user_tbl AS ut ON ((ut.id = et.entity_id) AND (et.entity_type = 'user'))
        LEFT JOIN charity_tbl AS ct ON ((ct.id = et.entity_id) AND (et.entity_type = 'charity'))
        LEFT JOIN code_tbl AS cdt ON ((cdt.id = et.entity_id) AND (et.entity_type = 'code'))
        LEFT JOIN status_update_link_tbl AS sult ON (sut.id = sult.post_id)
        WHERE ((et.entity_id = ?) AND (et.entity_type = 'user')) and sut.date_deleted is null
        ORDER BY sut.date_posted DESC;]]>
    </sql-query>
    <sql-query id="verification">
        <![CDATA[SELECT * from user_tbl where verification_key=?]]>
    </sql-query>
    <sql-query id="activationUpdate">
        <![CDATA[UPDATE user_tbl SET date_verified=?,active=? WHERE verification_key=?]]>
    </sql-query>
    <sql-query id="browseCharitys">
        <![CDATA[SELECT * from charity_tbl]]>
    </sql-query>
    <sql-query id="charitySearch">
        <![CDATA[SELECT * FROM charity_tbl LIKE CONCAT('%',?,'%')]]>
    </sql-query>
    <sql-query id="forgotPasswordUpdate">
        <![CDATA[UPDATE user_tbl SET password=?,password_salt=?,provider=? WHERE id=?]]>
    </sql-query>
    <sql-query id="passwordUpdate">
        <![CDATA[UPDATE user_tbl SET password=?,password_salt=?,active=?,name=? WHERE id=?]]>
    </sql-query>
    <sql-query id="getCharityName">
        <![CDATA[SELECT ch.*,et.slug  FROM charity_tbl ch
        inner join entity_tbl et ON et.entity_id=ch.id  and et.entity_type ='charity'
        where ch.id=?]]>
    </sql-query>
    <sql-query id="getCharityNameSlug">
        <![CDATA[SELECT ch.*,et.slug  FROM charity_tbl ch
        inner join entity_tbl et ON et.entity_id=ch.id AND et.entity_type ='charity'
        where ch.id=?]]>
    </sql-query>
    <sql-query id="directactivation">
        <![CDATA[UPDATE user_tbl SET date_verified=?,active=? WHERE email=?]]>
    </sql-query>
    <sql-query id="getCharityMentions">
        <![CDATA[SELECT
        COALESCE(u.name,o.title ) as creator_name,
        COALESCE(up.profile_pic_url,o.profile_pic_url) as creator_pic,
        COALESCE(u.id,c.id) as creator_id,
        sut.id, sut.entity_id, et.entity_type,sut.content,sut.date_posted,
        sut.in_reply_id,sut.original_entity_id,sut.status_type,sut.retweets,sut.reply_count,sut.image_url,sut.headline,
         et.slug as commonSlug,
         etparent.slug as parentSlug,
        COALESCE(uparent.name,oparent.title ) as parent_creator_name,
        COALESCE(upparent.profile_pic_url,oparent.profile_pic_url) as parent_creator_pic,
        COALESCE(uparent.id,cparent.id) as parent_creator_id,
        COALESCE(etparent.entity_type) as parent_type,
        mt.metadata as metadata,
        mt.code_json as code_tmpl

        FROM status_update_link_tbl sult
        INNER JOIN status_update_tbl sut ON sut.id = sult.post_id and sut.date_deleted is null
        left outer join metadata_tbl mt on mt.post_id = sut.id
        INNER JOIN entity_tbl et ON sut.entity_id = et.id
        LEFT OUTER JOIN user_tbl u ON u.id = et.entity_id and et.entity_type ='user' and u.date_deleted is NULL
        left outer JOIN user_profile_tbl up ON u.id = up.user_id
        LEFT OUTER JOIN charity_tbl c ON c.id=et.entity_id and et.entity_type ='charity'
        left outer JOIN organization_tbl o ON o.id = c.organization_id
        LEFT OUTER JOIN entity_tbl etparent ON sut.original_entity_id = etparent.id and sut.status_type='share'
        LEFT OUTER JOIN user_tbl uparent ON uparent.id = etparent.entity_id and etparent.entity_type ='user'
        left outer JOIN user_profile_tbl upparent ON uparent.id = upparent.user_id
         LEFT OUTER JOIN charity_admin_tbl chatt ON chatt.charity_id=etparent.entity_id
        and chatt.date_deleted is NULL and etparent.entity_type ='charity'
        LEFT OUTER JOIN charity_tbl cparent ON cparent.id=chatt.charity_id
        left outer JOIN organization_tbl oparent ON oparent.id = cparent.organization_id

        where sult.linked_id in (
        select ? as id
        union all
        select id from code_tbl
         where charity_id=? ) and sult.linked_type!='user' ORDER BY sut.date_posted DESC
        ]]>
    </sql-query>
    <sql-query id="getCodeMentions">
        <![CDATA[(SELECT
        COALESCE(u.name,o.title ) as creator_name,
        COALESCE(up.profile_pic_url,o.profile_pic_url) as creator_pic,
        COALESCE(u.id,c.id) as creator_id,
        sut.id, sut.entity_id, et.entity_type,sut.content,sut.date_posted,
        sut.in_reply_id,sut.original_entity_id,sut.status_type,sut.retweets,sut.reply_count,sut.image_url,
        sut.headline,
        et.slug as commonSlug,
        etparent.slug as parentSlug,
        COALESCE(uparent.name,oparent.title ) as parent_creator_name,
        COALESCE(upparent.profile_pic_url,oparent.profile_pic_url) as parent_creator_pic,
        COALESCE(uparent.id,cparent.id) as parent_creator_id,
        COALESCE(etparent.entity_type) as parent_type,
        mt.metadata as metadata,
        mt.code_json as code_tmpl

        FROM status_update_link_tbl sult
        INNER JOIN status_update_tbl sut ON sut.id = sult.post_id and sut.date_deleted is null
        left outer join metadata_tbl mt on mt.post_id = sut.id
        INNER JOIN entity_tbl et ON sut.entity_id = et.id
        LEFT OUTER JOIN user_tbl u ON u.id = et.entity_id and et.entity_type ='user' and u.date_deleted is NULL
        left outer JOIN user_profile_tbl up ON u.id = up.user_id
        LEFT OUTER JOIN charity_tbl c ON c.id=et.entity_id and et.entity_type ='charity'
        left outer JOIN organization_tbl o ON o.id = c.organization_id

        LEFT OUTER JOIN entity_tbl etparent ON sut.original_entity_id = etparent.id and sut.status_type='share'
        LEFT OUTER JOIN user_tbl uparent ON uparent.id = etparent.entity_id and etparent.entity_type ='user'
        left outer JOIN user_profile_tbl upparent ON uparent.id = upparent.user_id
        LEFT OUTER JOIN charity_admin_tbl chatt ON chatt.charity_id=etparent.entity_id
        and chatt.date_deleted is NULL and etparent.entity_type ='charity'
        LEFT OUTER JOIN charity_tbl cparent ON cparent.id=chatt.charity_id

        left outer JOIN organization_tbl oparent ON oparent.id = cparent.organization_id

        where sult.linked_id = ? and sult.linked_type='code' )
        UNION ALL
        (SELECT
        COALESCE(u.name,o.title ) as creator_name,
        COALESCE(up.profile_pic_url,o.profile_pic_url) as creator_pic,
        COALESCE(u.id,c.id) as creator_id,
        sut.id, sut.entity_id, et.entity_type,sut.content,sut.date_posted,
        sut.in_reply_id,sut.original_entity_id,sut.status_type,sut.retweets,sut.reply_count,sut.image_url,
        sut.headline,
        et.slug as commonSlug,
        etparent.slug as parentSlug,
        COALESCE(uparent.name,oparent.title ) as parent_creator_name,
        COALESCE(upparent.profile_pic_url,oparent.profile_pic_url) as parent_creator_pic,
        COALESCE(uparent.id,cparent.id) as parent_creator_id,
        COALESCE(etparent.entity_type) as parent_type,
        mt.metadata as metadata,
        mt.code_json as code_tmpl

        FROM status_update_link_tbl sult
        INNER JOIN status_update_tbl sut ON sut.id = sult.post_id and sut.date_deleted is null
        left outer join metadata_tbl mt on mt.post_id = sut.id
        INNER JOIN entity_tbl et ON sut.entity_id = et.id
        LEFT OUTER JOIN user_tbl u ON u.id = et.entity_id and et.entity_type ='user' and u.date_deleted is NULL
        left outer JOIN user_profile_tbl up ON u.id = up.user_id
        LEFT OUTER JOIN charity_tbl c ON c.id=et.entity_id and et.entity_type ='charity'
        left outer JOIN organization_tbl o ON o.id = c.organization_id

        LEFT OUTER JOIN entity_tbl etparent ON sut.original_entity_id = etparent.id and sut.status_type='share'
        LEFT OUTER JOIN user_tbl uparent ON uparent.id = etparent.entity_id and etparent.entity_type ='user'
        left outer JOIN user_profile_tbl upparent ON uparent.id = upparent.user_id
        LEFT OUTER JOIN charity_admin_tbl chatt ON chatt.charity_id=etparent.entity_id
        and chatt.date_deleted is NULL and etparent.entity_type ='charity'
        LEFT OUTER JOIN charity_tbl cparent ON cparent.id=chatt.charity_id
        LEFT OUTER JOIN charity_admin_tbl chat ON chat.charity_id=cparent.id
        left outer JOIN organization_tbl oparent ON oparent.id = cparent.organization_id

        where sult.linked_id in (select team_code_id from team_campaigns_tbl where original_code_id=?) and sult.linked_type='code' )
ORDER BY date_posted DESC]]>
    </sql-query>
    <sql-query id="getUserMentions">
        <![CDATA[SELECT
        COALESCE(u.name,o.title ) as creator_name,
        COALESCE(up.profile_pic_url,o.profile_pic_url) as creator_pic,
        COALESCE(u.id,c.id) as creator_id,
        sut.id, sut.entity_id, et.entity_type,sut.content,sut.date_posted,
        sut.in_reply_id,sut.original_entity_id,sut.status_type,sut.retweets,sut.reply_count,sut.image_url,sut.headline,
        et.slug as commonSlug,

        etparent.slug as parentSlug,
        COALESCE(uparent.name,oparent.title ) as parent_creator_name,
        COALESCE(upparent.profile_pic_url,oparent.profile_pic_url) as parent_creator_pic,
        COALESCE(uparent.id,cparent.id) as parent_creator_id,
        COALESCE(etparent.entity_type) as parent_type,
        mt.metadata as metadata,
        mt.code_json as code_tmpl

        FROM status_update_link_tbl sult
        INNER JOIN status_update_tbl sut ON sut.id = sult.post_id and sut.date_deleted is null
        left outer join metadata_tbl mt on mt.post_id = sut.id
        INNER JOIN entity_tbl et ON sut.entity_id = et.id
        LEFT OUTER JOIN user_tbl u ON u.id = et.entity_id and et.entity_type ='user' and u.date_deleted is NULL
        left outer JOIN user_profile_tbl up ON u.id = up.user_id
        LEFT OUTER JOIN charity_tbl c ON c.id=et.entity_id and et.entity_type ='charity'
        left outer JOIN organization_tbl o ON o.id = c.organization_id

        LEFT OUTER JOIN entity_tbl etparent ON sut.original_entity_id = etparent.id and sut.status_type='share'
        LEFT OUTER JOIN user_tbl uparent ON uparent.id = etparent.entity_id and etparent.entity_type ='user' and uparent.date_deleted is NULL
        left outer JOIN user_profile_tbl upparent ON uparent.id = upparent.user_id
        LEFT OUTER JOIN charity_admin_tbl chatt ON chatt.charity_id=etparent.entity_id
        and chatt.date_deleted is NULL and etparent.entity_type ='charity'
        LEFT OUTER JOIN charity_tbl cparent ON cparent.id=chatt.charity_id
        left outer join organization_tbl oparent ON oparent.id = cparent.organization_id

        where sult.linked_id = ? and sult.linked_type='user' ORDER BY sut.date_posted DESC
        LIMIT 10 OFFSET ?
        ]]>
    </sql-query>
    <sql-query id="entityMentions">
        <![CDATA[SELECT
        COALESCE(u.name,o.title ) as creator_name,
        COALESCE(up.profile_pic_url,o.profile_pic_url) as creator_pic,
        COALESCE(u.id,c.id) as creator_id,
        sut.id, sut.entity_id, et.entity_type,sut.content,sut.date_posted,
        sut.in_reply_id,sut.original_entity_id,sut.status_type,sut.retweets,sut.reply_count,sut.image_url
        FROM status_update_link_tbl sult
        inner join status_update_tbl sut ON sut.id = sult.post_id and sut.date_deleted is null
        inner join entity_tbl et ON sut.entity_id = et.id
        left outer join user_tbl u ON u.id = et.entity_id and et.entity_type ='user'
        left outer join user_profile_tbl up ON u.id = up.user_id
        left outer join charity_tbl c ON c.id=et.entity_id and et.entity_type ='charity'
        left outer join organization_tbl o ON o.id = c.organization_id
        where sult.linked_id = ?
        ]]>
    </sql-query>
    <sql-query id="postsAndReplies">
        <![CDATA[SELECT
        COALESCE(u.name,o.title ) as creator_name,
        COALESCE(up.profile_pic_url,o.profile_pic_url) as creator_pic,
        COALESCE(u.id,c.id) as creator_id,
        sut.id, sut.entity_id,et.entity_type,sut.content,sut.date_posted,
        sut.in_reply_id,sut.original_entity_id,sut.status_type,
        sut.reply_count,sut.retweets,sut.image_url
        FROM status_update_tbl sut
        INNER JOIN entity_tbl et ON sut.entity_id = et.id
        LEFT OUTER JOIN user_tbl u ON u.id = et.entity_id and et.entity_type ='user'
        left outer JOIN user_profile_tbl up ON u.id = up.user_id
        LEFT OUTER JOIN charity_tbl c ON c.id=et.entity_id and et.entity_type ='charity'
        left outer JOIN organization_tbl o ON o.id = c.organization_id
        where sut.entity_id=? and sut.date_deleted is null
        ORDER BY sut.date_posted DESC
        ]]>
    </sql-query>
    <sql-query id="postsByEntity">
        <![CDATA[(SELECT
        o.title as creator_name,
        o.profile_pic_url as creator_pic,
        c.id as creator_id,
        sut.id, sut.entity_id,et.entity_type,sut.content,sut.date_posted,
        sut.in_reply_id,sut.original_entity_id,sut.status_type,sut.headline,
        sut.reply_count,sut.retweets,sut.image_url,
        et.slug as commonSlug,
        etparent.slug as parentSlug,
        COALESCE(oparent.title,uparent.name) as parent_creator_name,
        COALESCE(oparent.profile_pic_url,upparent.profile_pic_url) as parent_creator_pic,
        COALESCE(cparent.id,uparent.id) as parent_creator_id,
        COALESCE(etparent.entity_type) as parent_type,
        mt.metadata as metadata,
        mt.code_json as code_tmpl,
        pmt.metadata as pmetadata,
       pmt.code_json as pcode_tmpl


        FROM status_update_tbl sut
        INNER JOIN entity_tbl et ON sut.entity_id = et.id and et.entity_type="charity" and et.date_deleted is null
        Inner JOIN charity_tbl c ON c.id=et.entity_id
        Inner JOIN organization_tbl o ON o.id = c.organization_id
        left outer join metadata_tbl mt on mt.post_id = sut.id
        left outer join metadata_tbl pmt on pmt.post_id = sut.in_reply_id
        LEFT OUTER JOIN entity_tbl etparent ON sut.original_entity_id = etparent.id and sut.status_type='share'
        LEFT OUTER JOIN charity_tbl cparent ON cparent.id=etparent.entity_id and etparent.entity_type='charity'
        left outer JOIN organization_tbl oparent ON oparent.id = cparent.organization_id and etparent.entity_type='charity'
        left outer join user_tbl uparent ON uparent.id=etparent.entity_id and etparent.entity_type='user' and et.date_deleted is null
        left outer join user_profile_tbl upparent on  upparent.user_id=etparent.entity_id and etparent.entity_type='user'
        where sut.entity_id=? and sut.date_deleted is null and sut.status_type!='reply'
        ORDER BY sut.date_posted DESC
        LIMIT 10 OFFSET ?)
        union all
        (SELECT
        u.name as creator_name,
        up.profile_pic_url as creator_pic,
        u.id as creator_id,
        sut.id, sut.entity_id,et.entity_type,sut.content,sut.date_posted,
        sut.in_reply_id,sut.original_entity_id,sut.status_type,sut.headline,
        sut.reply_count,sut.retweets,sut.image_url,
        et.slug as commonSlug,

        etparent.slug as parentSlug,
        COALESCE(oparent.title,uparent.name) as parent_creator_name,
        COALESCE(oparent.profile_pic_url,upparent.profile_pic_url) as parent_creator_pic,
        COALESCE(cparent.id,uparent.id) as parent_creator_id,
        COALESCE(etparent.entity_type) as parent_type,
        mt.metadata as metadata,
        mt.code_json as code_tmpl,
       pmt.metadata as pmetadata,
        pmt.code_json as pcode_tmpl
        FROM status_update_tbl sut
        INNER JOIN entity_tbl et ON sut.entity_id = et.id and et.entity_type="user" and et.date_deleted is null
        Inner JOIN user_tbl u ON u.id = et.entity_id
        Inner JOIN user_profile_tbl up ON u.id = up.user_id
        left outer join metadata_tbl mt on mt.post_id = sut.id
        left outer join metadata_tbl pmt on pmt.post_id = sut.in_reply_id
        LEFT OUTER JOIN entity_tbl etparent ON sut.original_entity_id = etparent.id and sut.status_type='share'
        LEFT OUTER JOIN charity_tbl cparent ON cparent.id=etparent.entity_id and etparent.entity_type='charity'
        left outer JOIN organization_tbl oparent ON oparent.id = cparent.organization_id and etparent.entity_type='charity'
        LEFT OUTER JOIN user_tbl uparent ON uparent.id = etparent.entity_id and etparent.entity_type='user'
        left outer JOIN user_profile_tbl upparent ON uparent.id = upparent.user_id and etparent.entity_type='user'
        where sut.entity_id=? and sut.date_deleted is null and sut.status_type!='reply'
        ORDER BY sut.date_posted DESC
        LIMIT 10 OFFSET ?)]]>
    </sql-query>
    <sql-query id="postAndReplies">
        <![CDATA[ SELECT
        COALESCE(u.name,o.title ) as creator_name,
        COALESCE(up.profile_pic_url,o.profile_pic_url) as creator_pic,
        COALESCE(u.id,c.id) as creator_id,
        sut.id, sut.entity_id,et.entity_type,sut.content,sut.date_posted,
        sut.in_reply_id,sut.original_entity_id,sut.status_type,
        sut.reply_count,sut.retweets,sut.image_url,
        et.slug as commonSlug,
        mt.metadata as metadata,
        mt.code_json as code_tmpl

        FROM status_update_tbl sut
        INNER JOIN entity_tbl et ON sut.entity_id = et.id
        left outer join metadata_tbl mt on mt.post_id = sut.id
        LEFT OUTER JOIN user_tbl u ON u.id = et.entity_id and et.entity_type ='user'
        left outer JOIN user_profile_tbl up ON u.id = up.user_id
        LEFT OUTER JOIN charity_tbl c ON c.id=et.entity_id and et.entity_type ='charity'
        left outer JOIN organization_tbl o ON o.id = c.organization_id
        where (sut.id=? or (sut.in_reply_id=? and sut.status_type='reply')) and sut.date_deleted is null
        ORDER BY sut.date_posted
        ]]>
    </sql-query>
    <sql-query id="postAndReposts">
        <![CDATA[
        (SELECT
        COALESCE(u.name,o.title ) as creator_name,
        COALESCE(up.profile_pic_url,o.profile_pic_url) as creator_pic,
        COALESCE(u.id,c.id) as creator_id,
        sut.id, sut.entity_id,et.entity_type,sut.content,sut.date_posted,
        sut.in_reply_id,sut.original_entity_id,sut.status_type,sut.headline,
        sut.reply_count,sut.retweets,sut.image_url,et.slug as commonSlug,
        mt.metadata as metadata,
        mt.code_json as code_tmpl

        FROM status_update_tbl sut
        INNER JOIN entity_tbl et ON sut.entity_id = et.id
        left outer join metadata_tbl mt on mt.post_id = sut.id
        LEFT OUTER JOIN user_tbl u ON u.id = et.entity_id and et.entity_type ='user'
        left outer JOIN user_profile_tbl up ON u.id = up.user_id
        LEFT OUTER JOIN charity_tbl c ON c.id=et.entity_id and et.entity_type ='charity'
        left outer JOIN organization_tbl o ON o.id = c.organization_id
        where sut.id=? and sut.date_deleted is null
        )
        UNION ALL
        (SELECT
        COALESCE(u.name,o.title ) as creator_name,
        COALESCE(up.profile_pic_url,o.profile_pic_url) as creator_pic,
        COALESCE(u.id,c.id) as creator_id,
        sut.id, sut.entity_id,et.entity_type,sut.content,sut.date_posted,
        sut.in_reply_id,sut.original_entity_id,sut.status_type,sut.headline,
        sut.reply_count,sut.retweets,sut.image_url,et.slug as commonSlug,
        mt.metadata as metadata,
        mt.code_json as code_tmpl
        FROM status_update_tbl sut
        INNER JOIN entity_tbl et ON sut.entity_id = et.id
        left outer join metadata_tbl mt on mt.post_id = sut.id
        LEFT OUTER JOIN user_tbl u ON u.id = et.entity_id and et.entity_type ='user'
        left outer JOIN user_profile_tbl up ON u.id = up.user_id
        LEFT OUTER JOIN charity_tbl c ON c.id=et.entity_id and et.entity_type ='charity'
        left outer JOIN organization_tbl o ON o.id = c.organization_id
        where sut.in_reply_id=? and sut.date_deleted is null and sut.status_type='share')
        ORDER BY date_posted DESC
        ]]>
    </sql-query>
    <sql-query id="getPostById">
        <![CDATA[
SELECT
        COALESCE(u.name,o.title ) as creator_name,
        COALESCE(up.profile_pic_url,o.profile_pic_url) as creator_pic,
        COALESCE(u.id,c.id) as creator_id,
        sut.id, sut.entity_id,et.entity_type,sut.content,sut.date_posted,
        sut.in_reply_id,sut.original_entity_id,sut.status_type,
        sut.reply_count,sut.retweets,sut.image_url,sut.headline,et.slug as commonSlug,

        etparent.slug as parentSlug,
        COALESCE(uparent.name,oparent.title ) as parent_creator_name,
        COALESCE(upparent.profile_pic_url,oparent.profile_pic_url) as parent_creator_pic,
        COALESCE(uparent.id,cparent.id) as parent_creator_id,
        COALESCE(etparent.entity_type) as parent_type,
        mt.metadata as metadata,
        mt.code_json as code_tmpl,
        pmt.metadata as pmetadata,
        pmt.code_json as pcode_tmpl

        FROM status_update_tbl sut
        INNER JOIN entity_tbl et ON sut.entity_id = et.id
        left outer join metadata_tbl mt on mt.post_id = sut.id
        LEFT OUTER JOIN user_tbl u ON u.id = et.entity_id and et.entity_type ='user'
        left outer JOIN user_profile_tbl up ON u.id = up.user_id
        LEFT OUTER JOIN charity_tbl c ON c.id=et.entity_id and et.entity_type ='charity'
        left outer JOIN organization_tbl o ON o.id = c.organization_id
        left outer join metadata_tbl pmt on pmt.post_id = sut.in_reply_id

        LEFT OUTER JOIN entity_tbl etparent ON sut.original_entity_id = etparent.id and sut.status_type='share' and sut.date_deleted is null
        LEFT OUTER JOIN user_tbl uparent ON uparent.id = etparent.entity_id and etparent.entity_type ='user'
        left outer JOIN user_profile_tbl upparent ON uparent.id = upparent.user_id
        LEFT OUTER JOIN charity_tbl cparent ON cparent.id=etparent.entity_id and etparent.entity_type ='charity'
        left outer JOIN organization_tbl oparent ON oparent.id = cparent.organization_id


        where sut.id=? and sut.date_deleted is null
        ]]>
    </sql-query>
    <sql-query id="postsAndRepliesIncludingFollowers">
        <![CDATA[
        (SELECT
        COALESCE(u.name,o.title ) as creator_name,
        COALESCE(up.profile_pic_url,o.profile_pic_url) as creator_pic,
        COALESCE(u.id,c.id) as creator_id,
        sut.id, sut.entity_id,et.entity_type,sut.content,sut.date_posted,
        sut.in_reply_id,sut.original_entity_id,sut.status_type,
        sut.reply_count,sut.retweets,sut.image_url
        FROM status_update_tbl sut
        INNER JOIN entity_tbl et ON sut.entity_id = et.id
        LEFT OUTER JOIN user_tbl u ON u.id = et.entity_id and et.entity_type ='user'
        left outer JOIN user_profile_tbl up ON u.id = up.user_id
        LEFT OUTER JOIN charity_tbl c ON c.id=et.entity_id and et.entity_type ='charity'
        left outer JOIN organization_tbl o ON o.id = c.organization_id
        where sut.entity_id=? and sut.date_deleted is null)

        UNION ALL

        (SELECT
        COALESCE(u.name,o.title ) as creator_name,
        COALESCE(up.profile_pic_url,o.profile_pic_url) as creator_pic,
        COALESCE(u.id,c.id) as creator_id,
        sut.id, sut.entity_id,et.entity_type,sut.content,sut.date_posted,
        sut.in_reply_id,sut.original_entity_id,sut.status_type,
        sut.reply_count,sut.retweets,sut.image_url
        FROM status_update_tbl sut
        INNER JOIN entity_tbl et ON sut.entity_id = et.id
        INNER JOIN (select f.entity_id from follow_tbl f
            inner join entity_tbl e on f.user_id=e.entity_id
            inner join user_tbl u on u.id=f.user_id
            where e.id=? ) followers on followers.entity_id=et.id
        LEFT OUTER JOIN user_tbl u ON u.id = et.entity_id and et.entity_type ='user'
        left outer JOIN user_profile_tbl up ON u.id = up.user_id
        LEFT OUTER JOIN charity_tbl c ON c.id=et.entity_id and et.entity_type ='charity'
        left outer JOIN organization_tbl o ON o.id = c.organization_id
        where sut.date_deleted is null)
        order by date_posted desc

        ]]>
    </sql-query>
    <sql-query id="postsIncludingFollowers">
        <![CDATA[(SELECT
        COALESCE(u.name,o.title ) as creator_name,
        COALESCE(up.profile_pic_url,o.profile_pic_url) as creator_pic,
        COALESCE(u.id,c.id) as creator_id,
        sut.id, sut.entity_id,et.entity_type,sut.content,sut.date_posted,
        sut.in_reply_id,sut.original_entity_id,sut.status_type,sut.headline,
        sut.reply_count,sut.retweets,sut.image_url,
        et.slug as commonSlug,
        et.entity_type as entity_type,

        etparent.slug as parentSlug,
        COALESCE(uparent.name,oparent.title ) as parent_creator_name,
        COALESCE(upparent.profile_pic_url,oparent.profile_pic_url) as parent_creator_pic,
        COALESCE(uparent.id,cparent.id) as parent_creator_id,
        COALESCE(etparent.entity_type) as parent_type,
        mt.metadata as metadata,
        mt.code_json as code_tmpl,
        pmt.metadata as pmetadata,
        pmt.code_json as pcode_tmpl
        FROM status_update_tbl sut
        INNER JOIN entity_tbl et ON sut.entity_id = et.id and et.date_deleted is null
        left outer join metadata_tbl mt on mt.post_id = sut.id
        LEFT OUTER JOIN user_tbl u ON u.id = et.entity_id and et.entity_type ='user'
        left outer JOIN user_profile_tbl up ON u.id = up.user_id
        LEFT OUTER JOIN charity_tbl c ON c.id=et.entity_id and et.entity_type ='charity'
        left outer JOIN organization_tbl o ON o.id = c.organization_id
        left outer join metadata_tbl pmt on pmt.post_id = sut.in_reply_id
        LEFT OUTER JOIN entity_tbl etparent ON sut.original_entity_id = etparent.id and sut.status_type='share' and sut.date_deleted is null
        LEFT OUTER JOIN user_tbl uparent ON uparent.id = etparent.entity_id and etparent.entity_type ='user'
        left outer JOIN user_profile_tbl upparent ON uparent.id = upparent.user_id
        LEFT OUTER JOIN charity_tbl cparent ON cparent.id=etparent.entity_id and etparent.entity_type ='charity'
        left outer JOIN organization_tbl oparent ON oparent.id = cparent.organization_id

        where sut.entity_id=? and sut.date_deleted is null and sut.status_type!='reply')

        UNION ALL

        (SELECT
        COALESCE(u.name,o.title ) as creator_name,
        COALESCE(up.profile_pic_url,o.profile_pic_url) as creator_pic,
        COALESCE(u.id,c.id) as creator_id,
        sut.id, sut.entity_id,et.entity_type,sut.content,sut.date_posted,
        sut.in_reply_id,sut.original_entity_id,sut.status_type,sut.headline,
        sut.reply_count,sut.retweets,sut.image_url,
        et.slug as commonSlug,
        et.entity_type as entity_type,
        etparent.slug as parentSlug,
        COALESCE(uparent.name,oparent.title ) as parent_creator_name,
        COALESCE(upparent.profile_pic_url,oparent.profile_pic_url) as parent_creator_pic,
        COALESCE(uparent.id,cparent.id) as parent_creator_id,
        COALESCE(etparent.entity_type) as parent_type,
        mt.metadata as metadata,
        mt.code_json as code_tmpl,
        pmt.metadata as pmetadata,
        pmt.code_json as pcode_tmpl

        FROM status_update_tbl sut
        INNER JOIN entity_tbl et ON sut.entity_id = et.id and et.date_deleted is null
        left outer join metadata_tbl mt on mt.post_id = sut.id
        left outer join metadata_tbl pmt on pmt.post_id = sut.in_reply_id
        INNER JOIN (select f.entity_id from follow_tbl f
        inner join entity_tbl e on f.user_id=e.entity_id
        inner join user_tbl u on u.id=f.user_id
        where e.id=?) followers on followers.entity_id=et.id


        LEFT OUTER JOIN user_tbl u ON u.id = et.entity_id and et.entity_type ='user'
        left outer JOIN user_profile_tbl up ON u.id = up.user_id
        LEFT OUTER JOIN charity_tbl c ON c.id=et.entity_id and et.entity_type ='charity'
        left outer JOIN organization_tbl o ON o.id = c.organization_id

        LEFT OUTER JOIN entity_tbl etparent ON sut.original_entity_id = etparent.id and sut.status_type='share' and sut.date_deleted is null
        LEFT OUTER JOIN user_tbl uparent ON uparent.id = etparent.entity_id and etparent.entity_type ='user'
        left outer JOIN user_profile_tbl upparent ON uparent.id = upparent.user_id
        LEFT OUTER JOIN charity_tbl cparent ON cparent.id=etparent.entity_id and etparent.entity_type ='charity'
        left outer JOIN organization_tbl oparent ON oparent.id = cparent.organization_id

        where sut.date_deleted is null and sut.status_type!='reply')
        order by date_posted desc LIMIT 10 OFFSET ?]]>
    </sql-query>
    <sql-query id="useIdAddToUserProfile">
        <![CDATA[INSERT INTO user_profile_tbl(user_id,timezone_id) values(?,?)]]>
    </sql-query>
    <sql-query id="codeEntityInsert">
        <![CDATA[INSERT INTO entity_tbl SET ?]]>
    </sql-query>
    <sql-query id="vaidateCampaignCode">
        <![CDATA[select * from code_tbl where code_slug=?]]>
    </sql-query>
    <sql-query id="getAllRetweetsOrReplys">
        <![CDATA[SELECT ut.id as mention_id, ut.name as mention_name, upt.profile_pic_url, sut.id as post_id, sut.entity_id, et.entity_type, sut.content,sut.image_url
        FROM status_update_tbl sut
        INNER JOIN entity_tbl et ON sut.entity_id = et.id and et.entity_type ='user'
        INNER JOIN user_tbl ut ON ut.id = et.entity_id
        INNER JOIN user_profile_tbl upt ON ut.id = upt.user_id
        where sut.in_reply_id=? and sut.status_type=? and sut.date_deleted is null
        union all
        select c.id mention_id, o.title mention_name, o.profile_pic_url, sut.id, sut.entity_id, et.entity_type, sut.content,sut.image_url
        FROM status_update_tbl sut
        INNER JOIN entity_tbl et ON sut.entity_id = et.id and et.entity_type ='charity'
        INNER JOIN charity_tbl c ON c.id = et.entity_id
        INNER JOIN organization_tbl o ON o.id = c.organization_id
        where
        sut.in_reply_id=? and sut.status_type=? and sut.date_deleted is null]]>
    </sql-query>
    <sql-query id="userIdStoreInEntity">
        <![CDATA[INSERT INTO entity_tbl(entity_id,entity_type) values(?,?)]]>
    </sql-query>
    <!-- Delete organization categories from organization settings page -->
    <sql-query id="updateCategorys">
        <![CDATA[DELETE FROM ww_charity_category_tbl WHERE charity_id = ?]]>
    </sql-query>
    <sql-query id="verifyFollowStatus">
        <![CDATA[select * from follow_tbl where user_id=? and entity_id=?]]>
    </sql-query>
    <sql-query id="follow_insert">
        <![CDATA[INSERT INTO follow_tbl
        (user_id,
        entity_id,
        date_followed)
        VALUES
        (?,
        ?,
        ?)]]>
    </sql-query>
    <sql-query id="getEntity">
        <![CDATA[select e.* from entity_tbl as e
             where e.entity_id=? and e.entity_type=?]]>
    </sql-query>
    <sql-query id="getEntityById">
        <![CDATA[select * from entity_tbl where id=?]]>
    </sql-query>
    <sql-query id="unfollow">
        <![CDATA[delete from follow_tbl where entity_id=? and user_id=?]]>
    </sql-query>
    <sql-query id="getAccessToken">
        <![CDATA[select ch.*,cct.currency_code as currency from charity_tbl ch
                                left outer join countries_currency cct on cct.country_id= ch.country
                                where ch.id=?]]>
    </sql-query>
    <sql-query id="saveCreditCard">
        <![CDATA[insert into credit_card_tbl SET ?]]>
    </sql-query>
    <sql-query id="saveDonationTransaction">
        <![CDATA[insert into transaction_tbl SET ?]]>
    </sql-query>
    <sql-query id="charity_claim_insert">
        <![CDATA[INSERT INTO charity_claim_tbl
        (
        charity_id,
        first_name,
        last_name,
        title,
        email_address,
        phone_number,
        ein,
        date_created,
        payment_user_id
        )
        VALUES
        (
        ?,
        ?,
        ?,
        ?,
        ?,
        ?,
        ?,
        ?,
        ?);
        ]]>
    </sql-query>
    <sql-query id="getAllClaims">
        <![CDATA[select cc.id as claimid,c.id as charityid,o.profile_pic_url, o.title as charityname,cc.first_name,cc.last_name, cc.title,
        cc.email_address,cc.phone_number,cc.ein
        from charity_claim_tbl cc inner join charity_tbl c
        on cc.charity_id=c.id
        inner join organization_tbl o on c.organization_id=o.id
        inner join user_tbl u on u.email=cc.email_address and u.date_deleted is NULL
        where approval_date is null]]>
    </sql-query>

    <sql-query id="getAllApprovedClaims">
        <![CDATA[select u.id, ca.charity_id, u.name, c.name_tmp ,c.app_fee, c.phone, u.email from charity_admin_tbl ca inner join charity_tbl c on ca.charity_id =c.id inner join user_tbl u on ca.user_id = u.id ORDER BY ca.id DESC]]>
    </sql-query>

      <sql-query id="updateCharityAppFee">
        <![CDATA[update charity_tbl SET app_fee=? where id=?]]>
    </sql-query>


    <sql-query id="charityAdminEmails">
        <![CDATA[SELECT email from user_tbl where is_admin=1]]>
    </sql-query>
    <sql-query id="updateClaim">
        <![CDATA[update charity_claim_tbl set approval_date=?,approved_by=? where id=?]]>
    </sql-query>
    <sql-query id="charityClaimInsert">
        <![CDATA[insert into charity_claim_tbl set ?]]>
    </sql-query>
    <sql-query id="updateCharityStatus">
        <![CDATA[update charity_tbl
inner join charity_claim_tbl on charity_tbl.id=charity_claim_tbl.charity_id
set charity_tbl.charity_from='approved'
where charity_tbl.charity_from != 'guidestar' and charity_claim_tbl.id=?]]>
    </sql-query>
    <sql-query id="denyClaim">
        <![CDATA[delete from charity_claim_tbl where id=?]]>
    </sql-query>
    <sql-query id="getAllUsers">
        <![CDATA[select upt.profile_pic_url as image,ut.name as suggestedname,ut.id as suggestid, 'user' as type from user_tbl ut
        INNER JOIN user_profile_tbl upt ON ut.id = upt.user_id
        where ut.name like ?
        union all
        select ot.profile_pic_url as image,ot.background_ot.title as suggestedname,ot.id as suggestid, 'charity' as type from organization_tbl ot where ot.title like ?]]>
    </sql-query>
    <sql-query id="getPostsCount">
        <![CDATA[select noofposts as noofposts from entity_tbl e
        inner join user_tbl u on e.entity_id=u.id
        where u.id=? and e.entity_type="user"]]>
    </sql-query>
    <sql-query id="getFollowersCount">
        <![CDATA[select count(*) as nooffollowers from follow_tbl f inner join entity_tbl e
        on  f.entity_id=e.id
        inner join user_tbl u
        on e.entity_id=u.id and e.entity_type="user" and e.date_deleted is NULL
        where u.id=?]]>
    </sql-query>
    <sql-query id="getFollowingCount">
        <![CDATA[select (e.following_users + e.following_charities + e.following_codes) as nooffollowing
        from entity_tbl e
        inner join user_tbl u
        where e.entity_id= ? and e.entity_type='user'
        ]]>
    </sql-query>
    <sql-query id="getuserFollowingPeopleCount">
        <![CDATA[select count(*) as noofpeoplefollowing from follow_tbl as ft
        INNER join  entity_tbl et on et.id=ft.entity_id
        Inner join  user_tbl ut on et.entity_id = ut.id
        Left join user_profile_tbl up on ut.id=up.user_id
        where ft.user_id = ? and et.entity_type ="user"]]>
    </sql-query>
    <sql-query id="getuserFollowingOrgsCount">
        <![CDATA[select count(*) as nooforgsfollowing
        from entity_tbl e,follow_tbl f,charity_tbl c,organization_tbl o WHERE f.user_id=? AND e.id=f.entity_id AND c.id=e.entity_id AND o.id=c.organization_id]]>
    </sql-query>
    <sql-query id="getuserFollowingCamCount">
        <![CDATA[select count(*) as noofcamfollowing
        from follow_tbl ft
        INNER join  entity_tbl et on et.id=ft.entity_id
        Inner join  code_tbl ct on et.entity_id = ct.id
        Inner join charity_tbl ch on ch.id= ct.charity_id
        where ft.user_id = ? and et.entity_type ="code"
        order by ct.id]]>
    </sql-query>
    <sql-query id="getDonorPosts">
        <![CDATA[(select su.*,u.name as user_name,upt.profile_pic_url,upt.user_id as userId from status_update_tbl su
        inner join entity_tbl e on su.entity_id=e.id
        inner join user_tbl u on e.entity_id=u.id and e.entity_type ='user'
        inner join user_profile_tbl upt ON u.id = upt.user_id
        where u.id=? and su.date_deleted is null LIMIT 10)
        union all
        (select su.*,u.name as user_name,upt.profile_pic_url,upt.user_id as userId from status_update_tbl su
        inner join entity_tbl e on su.entity_id=e.id
        inner join follow_tbl f on f.entity_id=e.id
        inner join user_profile_tbl upt ON upt.user_id = e.entity_id
        inner join user_tbl u on e.entity_id=u.id
        where f.user_id=? and su.date_deleted is null and e.entity_type='user' LIMIT 10)
        union all
        (select su.*,o.title as user_name,o.profile_pic_url,c.id as userId from status_update_tbl su
        inner join entity_tbl e on su.entity_id=e.id
        inner join follow_tbl f on f.entity_id=e.id
        inner join charity_tbl c ON c.id = e.entity_id
        inner join organization_tbl o on o.id= c.organization_id
        where f.user_id=? and su.date_deleted is null and e.entity_type='charity' LIMIT 10)]]>
    </sql-query>
    <sql-query id="trendingCampains">
        <![CDATA[select c.id,c.title as name,c.code_text,c.team_campaign,e.entity_type,c.code_picture_url as profile_pic_url,
        c.short_name as short_name,
        coalesce(e.nooffollowers,0) as noof_donors,
        e.id as entityid,cct.name_tmp as charity_name,
        e.slug as uniqSlug
         from code_tbl c
        left outer join entity_tbl e on e.entity_id = c.id
        and e.entity_id not in(select entity_id from follow_tbl where user_id=?) and e.entity_type ='code'
        and c.goal>e.noof_donations and c.status='published' and c.end_date >= CURDATE()
        left outer join charity_tbl cct on cct.id = c.charity_id
        order by e.nooffollowers desc limit 5]]>
    </sql-query>
    <sql-query id="followersRecommendationsOrgs">
        <![CDATA[select c.id,o.title as name,e.entity_type,o.profile_pic_url,o.background_pic_url,c.city,stl.name as state,
        o.short_name as short_name,
        o.title as  short_title,
        e.entity_id as entityid, o.brief_description as description,
        e.slug as uniqSlug
        from charity_tbl c
        inner join entity_tbl e on c.id=e.entity_id and e.entity_type ='charity' and
        e.id not in (select entity_id from follow_tbl where user_id=?)
        inner join organization_tbl o on c.organization_id=o.id
        left outer join states_tbl stl on c.state = stl.id
        order by e.nooffollowers desc
        LIMIT 5 OFFSET ?]]>
    </sql-query>
    <sql-query id="followersRecommendations">
        <![CDATA[select u.id,u.name,topfolowedusers.entity_type,up.profile_pic_url,up.city,stl.name as state,
         u.name as short_name,
        topfolowedusers.entity_id as entityid,up.about_me as description,
        topfolowedusers.slug as uniqSlug
        from user_tbl u inner join
        (select count(f.entity_id) as total,f.entity_id,e.entity_id as userid,e.entity_type,e.slug from follow_tbl f
        inner join entity_tbl e on f.entity_id=e.id
        where f.entity_id not in (select entity_id from follow_tbl where user_id=? AND entity_id IS NOT NULL) and e.entity_type = 'user' and e.date_deleted is NULL
        group by f.entity_id
        order by  count(f.entity_id) desc) as topfolowedusers on u.id=topfolowedusers.userid
        inner join user_profile_tbl up on u.id=up.user_id
        left outer join states_tbl stl on up.state = stl.id
        where u.id!=? LIMIT ? OFFSET ?
        union all
        (select c.id,o.title as name,e.entity_type,o.profile_pic_url,c.city,stl.name as state,
        o.short_name as short_name,
        e.entity_id as entityid, o.brief_description as description,
        e.slug as uniqSlug
        from charity_tbl c
        inner join entity_tbl e on c.id=e.entity_id and e.entity_type ='charity' and c.account_id is not NULL and
        e.id not in (select entity_id from follow_tbl where user_id=?)
        inner join organization_tbl o on c.organization_id=o.id
        left outer join states_tbl stl on c.state = stl.id
        order by e.nooffollowers desc
        LIMIT ? OFFSET ?)]]>
    </sql-query>
    <sql-query id="followersRecommendationsUser">
        <![CDATA[select u.id,u.name,topfolowedusers.entity_type,up.profile_pic_url,up.city,stl.name as state,
         u.name as short_name,
        topfolowedusers.entity_id as entityid,up.about_me as description,
        topfolowedusers.slug as uniqSlug
        from user_tbl u inner join
        (select count(f.entity_id) as total,f.entity_id,e.entity_id as userid,e.entity_type,e.slug from follow_tbl f
        inner join entity_tbl e on f.entity_id=e.id
        where f.entity_id not in (select entity_id from follow_tbl where user_id=? AND entity_id IS NOT NULL) and e.entity_type = 'user' and e.date_deleted is NULL
        group by f.entity_id
        order by  count(f.entity_id) desc) as topfolowedusers on u.id=topfolowedusers.userid
        inner join user_profile_tbl up on u.id=up.user_id
        left outer join states_tbl stl on up.state = stl.id
        where u.id!=? LIMIT ? OFFSET ?
        ]]>
    </sql-query>
    <sql-query id="followRecommendationsOrg">
        <![CDATA[
        (select c.id,o.title as name,e.entity_type,o.profile_pic_url,c.city,stl.name as state,
        o.short_name as short_name,
        e.entity_id as entityid, o.brief_description as description,
        e.slug as uniqSlug
        from charity_tbl c
        inner join entity_tbl e on c.id=e.entity_id and e.entity_type ='charity' and c.account_id is not NULL and
        e.id not in (select entity_id from follow_tbl where user_id=?) and e.date_deleted is NULL
        inner join organization_tbl o on c.organization_id=o.id
        left outer join states_tbl stl on c.state = stl.id
        order by e.nooffollowers desc
        LIMIT ? OFFSET ?)]]>
    </sql-query>
    <sql-query id="popularWeCode">
        <![CDATA[select c.* from code_tbl c inner join
        (select t.code_id,count(t.code_id) as totalDonations,sum(amount) from transaction_tbl t
        group by t.code_id
        order by totalDonations desc LIMIT 10) as sq on c.id=sq.code_id LIMIT 10]]>
    </sql-query>
    <sql-query id="getCharitiesByUser">
        <![CDATA[select o.title,o.profile_pic_url,e.id as entity_id,c.id as charity_id
        from charity_admin_tbl ca
        inner join charity_tbl c on ca.charity_id=c.id
        inner join user_tbl u on ca.user_id=u.id
        inner join organization_tbl o on c.organization_id=o.id
        inner join entity_tbl e on e.entity_id=c.id and e.entity_type ='charity'
        where u.id=? AND ca.date_deleted IS NULL]]>
    </sql-query>
    <sql-query id="getClimedUser">
        <![CDATA[select c.name_tmp,c.organization_description,ogt.profile_pic_url,cc.* from charity_claim_tbl cc
           inner join charity_tbl c on cc.charity_id=c.id
           inner join organization_tbl ogt on ogt.id=c.organization_id where cc.id=?]]>
    </sql-query>
    <sql-query id="updateCharityAccountDetails">
        <![CDATA[update charity_tbl c, user_tbl u
                  set  c.account_id=?,c.access_token=?,c.wepay_account_state=?, u.access_token=?,c.payment_gateway =?
                  where c.id =? and u.id =?]]>
    </sql-query>
    <sql-query id="collectDonarCards">
        <![CDATA[select * from credit_card_tbl where user_id=? AND payment_gateway=?]]>
    </sql-query>
    <sql-query id="collectDonarWepayCards">
        <![CDATA[select * from credit_card_tbl where user_id=? AND wepay_token is not null]]>
    </sql-query>
    <sql-query id="collectDonarStripeCards">
        <![CDATA[select * from credit_card_tbl where user_id=? and customer_id is not null]]>
    </sql-query>
    <sql-query id="collectAllDonarCards">
        <![CDATA[select * from credit_card_tbl where user_id=? and payment_gateway in (?,?)]]>
    </sql-query>
    <sql-query id="sendMonthlyGift">
        <![CDATA[insert into recurring_gift_tbl SET ?]]>
    </sql-query>
    <sql-query id="updateTransactionGift">
        <![CDATA[update recurring_gift_tbl set date_deleted=? where id=?]]>
    </sql-query>
    <sql-query id="updateTransactionGiftAmount">
        <![CDATA[update recurring_gift_tbl set amount=? where id=?]]>
    </sql-query>
    <sql-query id="donorSubscriptions">
        <![CDATA[select rg.*, code.id as charity_code_id,code.charity_id as codecharityid,code.user_id as codeuserid,code.payment_gateway_id as paymentgatewayid,
        code.code_picture_url as code_picture_url, ifnull(code.title,ct.name_tmp) as code_title, org.title as charity_title,code.beneficiary as beneficiary,ifnull(code.title,ct.name_tmp) as short_name, card.card_name as cardName,
        cut.currency_symbol, cut.currency_code
         from recurring_gift_tbl rg
         inner join code_tbl code on rg.code_id = code.id
        left outer JOIN charity_tbl ct on ct.id = rg.charity_id
        left outer join organization_tbl org on org.id = ct.organization_id
        left outer join user_tbl ut on ut.id=rg.user_id
        left outer join user_profile_tbl upt on upt.user_id=ut.id
        left outer join countries_currency cut on cut.country_id = ifnull(code.country,ct.country)
        LEFT JOIN credit_card_tbl card ON rg.card_id = card.id
        where rg.user_id=? and rg.date_deleted IS NULL
union all
select rg.*, ct.id as charity_code_id,null as codecharityid,null as codeuserid,
pgt.id as paymentgatewayid,
        org.profile_pic_url as code_picture_url, ct.name_tmp as code_title, org.title as charity_title,null as beneficiary,ct.name_tmp as short_name, card.card_name as cardName,
        cut.currency_symbol, cut.currency_code
         from recurring_gift_tbl rg
        inner JOIN charity_tbl ct on ct.id = rg.charity_id and rg.code_id is null
        left outer join payment_gateways_tbl pgt on pgt.charity_id=rg.charity_id
        left outer join organization_tbl org on org.id = ct.organization_id
        left outer join user_tbl ut on ut.id=rg.user_id
        left outer join user_profile_tbl upt on upt.user_id=ut.id
        left outer join countries_currency cut on cut.country_id = ct.country
        LEFT JOIN credit_card_tbl card ON rg.card_id = card.id
        where rg.user_id=? and pgt.charity_id is not null and rg.date_deleted IS NULL]]>
    </sql-query>
    <sql-query id="donorUniqSubscription">
        <![CDATA[select rg.*, code.id as charity_code_id,
        code.code_picture_url as code_picture_url, ifnull(code.title,ct.name_tmp) as code_title, org.title as charity_title,code.short_name as short_name,cct.last_four,
        cut.currency_code,code.user_id as codeuserid,code.charity_id as codecharityid,
        cut.currency_symbol
         from recurring_gift_tbl rg
        left outer join code_tbl code on rg.code_id = code.id
        left outer JOIN charity_tbl ct on ct.id = rg.charity_id
        left outer JOIN user_tbl u on u.id=code.user_id
        left outer join countries_currency cut on cut.country_id = ifnull(code.country,ct.country)
        left outer join credit_card_tbl cct on rg.card_id = cct.id
        left outer join organization_tbl org on org.id = ct.organization_id
        where rg.id=?]]>
    </sql-query>
    <sql-query id="wecodesuggestions">
        <![CDATA[select c.code_picture_url as image,c.code_text as suggestedname,c.id as suggestid,'code' as type, et.slug as slug,et.id as entityId
        from code_tbl c
        inner join entity_tbl et ON et.entity_id = c.id and et.entity_type ='code'
        where c.code_text like ?]]>
    </sql-query>
    <sql-query id="mentionsuggestions">
        <![CDATA[select upt.profile_pic_url as image,ut.name as suggestedname,ut.id as suggestid, 'user' as type, et.slug as slug
        from user_tbl ut
        inner join user_profile_tbl upt ON ut.id = upt.user_id
        inner join entity_tbl et ON et.entity_id = ut.id and et.entity_type ='user'
        where ut.name like ?
        union all
        select ot.profile_pic_url as image,ot.title as suggestedname,c.id as suggestid, 'charity' as type,et.slug as slug
        from charity_tbl c
        inner join organization_tbl ot on c.organization_id=ot.id
        inner join entity_tbl et ON et.entity_id = c.id and et.entity_type ='charity'
        where ot.title like ?
        ]]>
    </sql-query>
    <sql-query id="hashcodesuggestions">
        <![CDATA[select distinct text from status_update_link_tbl where link_type='hashcode' and text like ?]]>
    </sql-query>
    <sql-query id="updateUserFollowersCount">
        <![CDATA[update entity_tbl set nooffollowers = nooffollowers +1 where id=?]]>
    </sql-query>
    <sql-query id="updateUserUnFollowersCount">
        <![CDATA[update entity_tbl set nooffollowers = nooffollowers -1 where id=? and nooffollowers > 0]]>
    </sql-query>
    <sql-query id="updateUserFollowingCount">
        <![CDATA[update entity_tbl set following_users=? where id=?]]>
    </sql-query>
    <sql-query id="updateUserCharityFollowingCount">
        <![CDATA[update entity_tbl set following_charities=? where id=?]]>
    </sql-query>
    <sql-query id="updateUserCodeFollowingCount">
        <![CDATA[update entity_tbl set following_codes=? where id=?]]>
    </sql-query>
    <sql-query id="getEntityUser">
        <![CDATA[select * from entity_tbl where entity_id=? AND entity_type=?]]>
    </sql-query>
    <sql-query id="getDonorUserPosts">
        <![CDATA[select su.*,u.name as user_name,upt.profile_pic_url from status_update_tbl su
        inner join entity_tbl e on su.entity_id=e.id
        inner join user_tbl u on e.entity_id=u.id and e.entity_type ='user'
        INNER JOIN user_profile_tbl upt ON u.id = upt.user_id
        where u.id=? and su.date_deleted is null LIMIT 20]]>
    </sql-query>
    <sql-query id="getCharityEntityImages">
        <![CDATA[(select image_url from entity_tbl e,status_update_tbl s
        WHERE e.entity_id=? AND e.id=s.entity_id AND e.entity_type='charity' AND s.image_url IS NOT NULL AND s.image_url !="" and s.date_deleted is null
        order by s.date_posted desc limit 25)
        union all
        (select sut.image_url from status_update_link_tbl sult
        INNER JOIN status_update_tbl sut ON sut.id = sult.post_id
        INNER JOIN code_tbl c ON c.id = sult.linked_id
        where sult.linked_id = ? and sult.linked_type='charity'and sut.image_url IS NOT NULL AND sut.image_url !="" and sut.date_deleted is null
        order by sut.date_posted desc limit 25)]]>
    </sql-query>
    <sql-query id="getCodeEntityImages">
        <![CDATA[select sut.image_url from status_update_link_tbl sult
        INNER JOIN status_update_tbl sut ON sut.id = sult.post_id
        INNER JOIN code_tbl c ON c.id = sult.linked_id
        where sult.linked_id = ? and sult.linked_type='code' and sut.image_url IS NOT NULL AND sut.image_url !="" and sut.date_deleted is null
        order by sut.date_posted desc limit 25]]>
    </sql-query>
    <sql-query id="getUserEntityImages">
        <![CDATA[select image_url from entity_tbl e,status_update_tbl s
        WHERE e.entity_id=? AND e.id=s.entity_id AND e.entity_type='user'
        AND s.image_url IS NOT NULL AND s.image_url !="" and s.date_deleted is null
        order by s.date_posted desc limit 25]]>
    </sql-query>
    <sql-query id="getUserFollowingOrgs">
        <!-- on User Profile Pages show the organization's user is following as cards -->
        <![CDATA[select COALESCE(ff.user_id,false) as is_following,o.title AS short_title,c.city,stl.name as state,o.background_pic_url,o.profile_pic_url,f.entity_id,c.id AS charity_id,
        CONCAT(LEFT(full_description, 100), IF(LENGTH(full_description)>100, "...", "")) AS
        short_desc,o.full_description,o.id AS organization_id,
        c.id AS id,
        e.entity_type as type,
        e.slug as charitySlug,
        c.payment_gateway,
        cct.currency_code,
        cct.currency_symbol,
        (select count(*) as count from code_tbl cot
                where cot.charity_id=c.id and cot.status='published' and cot.date_deleted is NULL) as campaigns,
        e.noofposts, e.nooffollowers
        from entity_tbl e inner join follow_tbl f
        on e.id=f.entity_id
        inner join charity_tbl c on c.id=e.entity_id and e.entity_type='charity'
        left outer join charity_admin_tbl  chat on chat.charity_id=c.id and chat.date_deleted is NULL and chat.user_id=?
        inner join organization_tbl o on  o.id=c.organization_id
        left outer join code_tbl ct on ct.charity_id= c.id and ct.charity_default='yes'
        left outer join states_tbl stl on stl.id = c.state
        left outer join follow_tbl ff on ff.user_id=? and ff.entity_id=e.id
        left outer join countries_currency cct on cct.country_id = c.country
        WHERE
        f.user_id=?]]>
    </sql-query>
    <sql-query id="updateCodeDonation">
        <![CDATA[update entity_tbl set noof_donations=noof_donations+? where id=?]]>
    </sql-query>
    <sql-query id="updateParentCodeDonation">
        <![CDATA[update entity_tbl set noof_donations=noof_donations+? where entity_type='code' and entity_id=(select parent_id from code_tbl where id=?)]]>
    </sql-query>
    <sql-query id="codeDonarsValidation">
        <![CDATA[select * from transaction_tbl where code_id=? AND user_id=?]]>
    </sql-query>
    <sql-query id="codeDonarsUpdate">
        <![CDATA[update entity_tbl set noof_donors = noof_donors + 1 where id= ?]]>
    </sql-query>
    <sql-query id="charityDonarsValidation">
        <![CDATA[select * from transaction_tbl where charity_id=? AND user_id=?]]>
    </sql-query>
    <sql-query id="status_update_link_tbl_insert">
        <![CDATA[INSERT INTO status_update_link_tbl
        (post_id,start_position,length,link_type,text,linked_type,linked_id)
        values(?,?,?,?,?,?,?)
        ]]>
    </sql-query>
    <sql-query id="updatePostCount">
        <![CDATA[update entity_tbl set noofposts = noofposts + 1 where id= ?]]>
    </sql-query>
    <sql-query id="getFollowResult">
        <![CDATA[select user_id from follow_tbl where entity_id=?]]>
    </sql-query>
    <sql-query id="decreasePostCount">
        <![CDATA[update entity_tbl set noofposts = noofposts - 1 where id= ? and noofposts > 0]]>
    </sql-query>
    <sql-query id="decreasePostCountShare">
        <![CDATA[update status_update_tbl set retweets = retweets - 1 where id= ? and retweets > 0]]>
    </sql-query>
    <sql-query id="updateReplyPostCount">
        <![CDATA[update status_update_tbl set  reply_count = reply_count + 1 where id= ?]]>
    </sql-query>
    <sql-query id="updateRetweetCount">
        <![CDATA[update status_update_tbl set  retweets = retweets + 1 where id= ?]]>
    </sql-query>
    <sql-query id="numOfCharityPosts">
        <![CDATA[ SELECT noofposts as count FROM entity_tbl et
        INNER JOIN charity_tbl ct ON et.entity_id = ct.id and et.entity_type ='charity'
        INNER JOIN organization_tbl ot ON ct.organization_id = ot.id
        WHERE et.entity_id = ?]]>
    </sql-query>
    <sql-query id="numOfCharityFollowers">
        <![CDATA[SELECT count(*) as count
        FROM entity_tbl, follow_tbl, user_tbl, user_profile_tbl
        WHERE entity_tbl.entity_id=?
        AND entity_tbl.entity_type='charity'
        AND follow_tbl.entity_id=entity_tbl.id
        AND user_tbl.id=follow_tbl.user_id
        AND user_profile_tbl.user_id=user_tbl.id AND user_tbl.date_deleted is null]]>
    </sql-query>
    <sql-query id="numOfCharityCampaigns">
        <![CDATA[select count(*) as count from code_tbl c where c.charity_id=? and c.status='published' and c.date_deleted is NULL]]>
    </sql-query>
    <!-- Campaign Cards on the organization page -->
    <sql-query id="charityCampaigns">
        <![CDATA[select COALESCE(f.user_id,false) as is_following,c.*,e.id as entityID, e.noof_donors,
        (select COUNT(*) from code_tbl WHERE parent_id=c.id) AS no_of_p2p,
        (select count(*) from teams_tbl where code_id=c.id) AS no_of_team_fundraisers,
        (select slug from entity_tbl eee where eee.entity_id=c.id and eee.entity_type='code') as campaignSlug,
        coalesce(sum(tb.amount),0) as donation,
        TRUNCATE((coalesce(sum(tb.amount),0)/c.goal)*100,2) as donation_progress,ch.name as campaign_creator,
        ct.payment_gateway,
        ct.name_tmp as organization_name,
        cct.currency_code,
        cct.currency_symbol
      #  cact.category_id,
      #  chct.group_title
        from code_tbl c
        left join transaction_tbl tb on tb.code_id= c.id
        inner join entity_tbl e on c.id=e.entity_id and e.entity_type='code'
      #  left outer join  category_charity_tbl cact on cact.charity_id = c.charity_id
    #    left outer join  charity_category_tbl chct on chct.id = cact.category_id
        inner join charity_tbl ct on ct.id= c.charity_id
        left join user_tbl ch on ch.id= c.user_id
        inner join organization_tbl ot on ot.id = ct.organization_id
        left outer join follow_tbl f on f.user_id=? and e.id=f.entity_id
        left outer join countries_currency cct on cct.country_id = ct.country
        where c.charity_id=? and c.status = 'published' and c.end_date >= CURDATE() and c.team_campaign != 'yes'
        Group by c.id
        order by c.title]]>
    </sql-query>
    <sql-query id="charityInformation">
        <![CDATA[
      select COALESCE(f.user_id,false) as is_following,c.*,o.full_description as full_description,o.background_pic_url,o.profile_pic_url,e.id as entityid,
        (select count(*) from transaction_tbl where charity_id=c.id and code_id is null) as noof_donors,
        o.web_url,o.date_created,
        stl.name as state,
        e.slug,
        ut.id as fundraiser_userid,
        pgt.payment_gateway,
        cct.currency_code,
        cct.currency_symbol
         from charity_tbl c
        inner join organization_tbl o on c.organization_id=o.id
        inner join entity_tbl e on c.id=e.entity_id and e.entity_type='charity'
        left outer join charity_claim_tbl cc on cc.charity_id=c.id
        left outer join user_tbl ut on ut.email=cc.email_address
        left outer join payment_gateways_tbl pgt on pgt.charity_id=c.id
        left outer join follow_tbl f on f.user_id=? and e.id=f.entity_id
        left outer join states_tbl stl on stl.id = c.state
        left outer join countries_currency cct on cct.country_id = c.country
        where c.id=?]]>
    </sql-query>
    <sql-query id="CampaignDonorDetails">
        <![CDATA[select u.name,u.date_verified,u.active,up.profile_pic_url,t.amount, t.transaction_date,t.created_date,t.anonymous, t.offline,t.hide_amount,et.slug,
        cct.currency_code, cct.currency_symbol
        from user_tbl u
        inner join transaction_tbl t on u.id = t.user_id
        inner join user_profile_tbl up on up.user_id = u.id
        inner join entity_tbl et on et.entity_id = u.id and et.entity_type="user"
        inner join charity_tbl ct on ct.id = t.charity_id
        left outer join countries_currency cct on cct.country_id= ct.country
        where t.code_id=?
        order by t.transaction_date desc
         LIMIT 5 OFFSET 0]]>
    </sql-query>
    <sql-query id="collectedAmountForCampaign">
        <![CDATA[select count(t.user_id) as count  from transaction_tbl t
        where t.code_id=?
        group by t.user_id]]>
    </sql-query>
    <sql-query id="mentionsForTheCampaigns">
        <![CDATA[SELECT c.id as mention_id, c.title as mention_name, c.code_picture_url, sult.post_id, sut.entity_id, sut.content
        FROM status_update_link_tbl sult
        INNER JOIN status_update_tbl sut ON sut.id = sult.post_id
        INNER JOIN code_tbl c ON c.id = sult.linked_id
        where sult.linked_id = ? and sut.date_deleted is null]]>
    </sql-query>
    <sql-query id="numOfCampaignFollowers">
        <!-- Followers count shown on campaign pages -->
        <![CDATA[select nooffollowers as count,e.slug,c.title from entity_tbl e
        inner join code_tbl c on e.entity_id=c.id and e.entity_type='code'
        left outer join user_tbl u on u.id=c.user_id
        where c.id=?]]>
    </sql-query>
    <sql-query id="campaignFollowerDetails">
        <!-- Complete details for followers cards on campaign pages -->
        <![CDATA[select COALESCE(iq.user_id,false) as is_following,u.*,u.id as user_id, e.id as entity_id, c.charity_id as charity_id,
        upt.profile_pic_url as profile_pic_url,upt.background_pic_url as background_pic_url,stl.name as state, upt.city as city, upt.about_me as full_description,
        (select eee.following_users + eee.following_charities + eee.following_codes from entity_tbl eee
        where eee.entity_id=u.id and eee.entity_type='user') as following,
        (select nooffollowers from entity_tbl eee where eee.entity_id=u.id and eee.entity_type='user') as nooffollowers,
        (select slug as userSlug from entity_tbl eee where eee.entity_id=u.id and eee.entity_type='user') as userSlug,
        (select count(*) from code_tbl c where c.user_id =u.id and c.individual is not null and c.status!='draft') as campaigns
        from user_tbl u
        inner join follow_tbl f on u.id=f.user_id
        inner join entity_tbl e on f.entity_id= e.id and e.entity_type ='code'
        Inner join user_profile_tbl upt on upt.user_id = u.id
        inner join code_tbl c on e.entity_id=c.id
        left outer join
        (select ff.user_id,ee.entity_id from follow_tbl ff inner join entity_tbl ee  on ff.user_id=? and ff.entity_id=ee.id
        and ee.entity_type='user')  iq on iq.entity_id=u.id
        left outer join states_tbl stl on stl.id = upt.state
        where c.id=? and u.date_deleted is NULL]]>
    </sql-query>
    <sql-query id="campainInformation">
        <![CDATA[select COALESCE(f.user_id,false) as is_following,
        c.*,
        e.id as entityid,
        e.nooffollowers,
        e.noofposts,
        e.following_users
        ,e.following_charities,
        e.following_codes,
        e.noof_donations,e.noof_donors,
        stl.name as state,
        ww_categories_tbl.name as category,
        e.slug as campaignSlug,
        pt.id as payment_gateway_id,
        cat.user_id as campaignAdmin,
        pt.payment_gateway,
        ctl.country_code as countrycode,
        IFNULL(c.city,IFNULL(cht.city,upt.city)) as city,
        IFNULL(u.name, uu.name ) as creator_name,
        IFNULL(u.email,uu.email) as campaign_creator_email
        from code_tbl c inner join entity_tbl e on c.id=e.entity_id and e.entity_type='code'
        left outer join user_tbl u on u.id= c.user_id
        left outer join ww_categories_tbl on ww_categories_tbl.id=c.category_id
        left outer join charity_admin_tbl adt on adt.charity_id = c.charity_id and adt.default_value = 1
        left outer join user_tbl uu on uu.id = adt.user_id
        left outer join charity_tbl cht on cht.id=c.charity_id
        left outer join user_profile_tbl upt on upt.user_id=c.user_id
        left outer join states_tbl stl on stl.id = IFNULL(c.state,IFNULL(cht.state,upt.state))
        left outer join countries_tbl ctl on ctl.id = IFNULL(c.country,IFNULL(cht.country,upt.country))
        left outer join payment_gateways_tbl pt on pt.id= c.payment_gateway_id
        left outer join code_admin_tbl cat on cat.code_id=c.id and cat.user_id=?
        left outer join follow_tbl f on f.user_id=? and e.id=f.entity_id where c.id=?]]>
    </sql-query>
    <sql-query id="campainCharityInformation">
        <![CDATA[select COALESCE(f.user_id,false) as
        is_following,co.charity_id,o.title,o.full_description,o.background_pic_url,o.profile_pic_url,en.id as entity_id, en.slug as charitySlug, ch.payment_gateway, cct.currency_code, cct.currency_symbol, cunt.name as country_name,cunc.currency_conversion,ch.charity_from,ch.verified
        from code_tbl co
        INNER JOIN charity_tbl ch on co.charity_id= ch.id
        Inner join organization_tbl o on o.id = ch.organization_id
        Inner join entity_tbl en on en.entity_id = ch.id and en.entity_type ='charity'
        left outer join follow_tbl f on f.user_id=? and f.entity_id=en.id
        left outer join countries_currency cct on cct.country_id= ch.country
        left outer join countries_tbl cunt on cunt.id = ch.country
        left outer join currency_conversion cunc on cunc.country_currency = cct.currency_code
        where co.id=?]]>
    </sql-query>
    <sql-query id="userTransactions">
        <!-- Shows the transactions on member/#!impact impact tab -->
        <![CDATA[select t.transaction_date,o.profile_pic_url,ct.code_text,ct.title,
        ct.team_campaign,c.id,c.name_tmp as
        charity_name,t.amount, cct.currency_code,cct.currency_symbol,t.wonderwe_fee,'no' as default_charity
         from transaction_tbl t
        inner join charity_tbl c on t.charity_id=c.id
        inner join organization_tbl o on o.id=c.organization_id
        inner join code_tbl ct on ct.id=t.code_id AND (ct.individual IS null OR ct.individual='no')
        left outer join countries_currency cct on cct.country_id = c.country
        where t.user_id=?
        union all
        select t.transaction_date,up.profile_pic_url,ct.code_text,ct.title,ct.team_campaign,u.id,u.name as
        charity_name,t.amount, cct.currency_code,cct.currency_symbol,t.wonderwe_fee,'no' as default_charity
         from transaction_tbl t
        inner join code_tbl ct on ct.id=t.code_id and ct.individual="yes"
        inner join user_profile_tbl up on up.user_id = IFNULL(ct.parent_user_id,ct.user_id)
        inner join user_tbl u on u.id=up.user_id
        left outer join countries_currency cct on cct.country_id = up.country
        where t.user_id=?
        union all
       select t.transaction_date,o.profile_pic_url,et.slug as code_text,c.name_tmp as title,
        'null' as team_campaign,c.id,c.name_tmp as
        charity_name,t.amount, cct.currency_code,cct.currency_symbol,t.wonderwe_fee,'yes' as default_charity
         from transaction_tbl t
        inner join charity_tbl c on t.charity_id=c.id and t.code_id is null
        inner join organization_tbl o on o.id=c.organization_id
        inner join entity_tbl et on et.entity_id=c.id and et.entity_type="charity"
        left outer join countries_currency cct on cct.country_id = c.country
        where t.user_id=?
        order by transaction_date desc
        ]]>
    </sql-query>
    <sql-query id="userTransactionsFund">
        <![CDATA[select t.transaction_date,up.profile_pic_url,ct.code_text,ct.title,u.id,u.name as
        charity_name,t.amount, cct.currency_code,cct.currency_symbol
         from transaction_tbl t
        inner join code_tbl ct on ct.id=t.code_id and ct.individual="yes"
        inner join user_profile_tbl up on ct.user_id=up.user_id
         inner join user_tbl u on u.id=up.user_id
        left outer join countries_currency cct on cct.country_id = up.country
        where t.user_id=?
        order by t.transaction_date desc
        ]]>
    </sql-query>
    <sql-query id="userDetails">
        <![CDATA[select COALESCE(f.user_id,false) as is_following,u.id,u.date_created,u.name,e.entity_type,up.profile_pic_url,up.background_pic_url,e.id as entityid,up.about_me as description, up.city as city,up.background_pic_url,stl.name as state,e.nooffollowers,e.slug as userSlug
        from user_tbl u inner join user_profile_tbl up on u.id=up.user_id
        inner join entity_tbl e on e.entity_id=u.id
        left outer join states_tbl stl on up.state = stl.id
        left outer join follow_tbl f on f.user_id=? and f.entity_id=e.id
        where u.id=? and e.entity_type='user']]>
    </sql-query>
    <sql-query id="discoverQuery">
        <!-- Discover Page member/#!discover -->
        <![CDATA[(select COALESCE(f.user_id,false) as is_following,u.id,u.name,u.id as code_text,e.entity_type,up.profile_pic_url,up.background_pic_url as background_pic_url,up.profile_pic_url as org_pic_url,up.city as city,stl.name as state,e.entity_id as entityid,up.about_me as description,e.nooffollowers,e.slug,
        up.id as organization_name,
        up.id as code_id,
        up.id as charity_id,
        '0' as suggested_donation,
        up.id as wecode,
        '0' as goal,
        '0' as donation,
        '0' as donation_progress
        from user_tbl u   inner join user_profile_tbl up on u.id=up.user_id
        inner join entity_tbl e on e.entity_id=u.id
        left outer join follow_tbl f on f.user_id=? and f.entity_id=e.id
        left outer join states_tbl stl on stl.id = up.state
        where u.name like ? and e.entity_type='user' LIMIT 10 OFFSET ?)
        union all
        (select COALESCE(f.user_id,false) as is_following,c.id,c.title as name,c.code_text as code_text,e.entity_type,c.code_picture_url as profile_pic_url,ot.background_pic_url as background_pic_url,ot.profile_pic_url as org_pic_url,
        c.city as city,
        stl.name as state,
        e.id as entityid,c.description,e.nooffollowers,e.slug,
        ot.title as organization_name,
        c.id as code_id,
        c.charity_id,
        c.goal,
        c.suggested_donation,
        c.code_text as wecode,
        coalesce(sum(tb.amount),0) as donation,
        TRUNCATE((coalesce(sum(tb.amount),0)/c.goal)*100,2) as donation_progress
        from code_tbl c inner join
        entity_tbl e on e.entity_id=c.id
        left outer join follow_tbl f on f.user_id=? and f.entity_id=e.id
        left outer join transaction_tbl tb on tb.code_id= c.id
        Inner join charity_tbl ch on ch.id= c.charity_id
        Inner join organization_tbl ot on ch.organization_id= ot.id
        left outer join states_tbl stl on stl.id = c.state
        where e.entity_type='code' and ch.charity_from != 'self' and c.code_text like ? group by c.id LIMIT 10 OFFSET ?)
        union all
        (select COALESCE(f.user_id,false) as is_following,c.id,o.title as name,o.id as code_text,e.entity_type,o.profile_pic_url,o.background_pic_url,o.profile_pic_url as org_pic_url,c.city as city,stl.name as state,
        e.entity_id as entityid,o.full_description as description,e.nooffollowers,e.slug,
        o.title as organization_name,
        ct.id as code_id,
        c.id as charity_id,
        '0' as goal,
        ct.suggested_donation,
        ct.code_text as wecode,
        coalesce(sum(tb.amount),0) as donation,
        '0' as donation_progress
        from charity_tbl c inner join entity_tbl e
        on c.id=e.entity_id
        left outer join follow_tbl f on f.user_id=? and f.entity_id=e.id
        left outer join transaction_tbl tb on tb.charity_id= c.id
        inner join organization_tbl o on c.organization_id=o.id
        inner join code_tbl ct on ct.charity_id = c.id and ct.charity_default='yes'
        left outer join states_tbl stl on stl.id = c.state
        where e.entity_type='charity' and o.title like ? and c.charity_from != 'self' group by c.id
        LIMIT 10 OFFSET ?)]]>
    </sql-query>
    <sql-query id="discoverUsers">
        <!-- Discover Page Users member/#!discover -->
        <![CDATA[ (select COALESCE(f.user_id,false) as is_following,u.id,u.name,u.id as code_text,
        e.entity_type,up.profile_pic_url,up.background_pic_url,up.city as city,stl.name as state,e.entity_id as entityid,up.about_me as description,e.nooffollowers,
        (select e.following_users + e.following_charities + e.following_codes from entity_tbl eee where eee.entity_id=u.id and eee.entity_type='user') as following,e.slug,
        (select count(*) from code_tbl c where c.user_id =u.id and c.individual is not null and c.status!='draft') as campaigns
        from user_tbl u
        inner join user_profile_tbl up on u.id=up.user_id
        inner join entity_tbl e on e.entity_id=u.id
        left outer join follow_tbl f on f.user_id=? and f.entity_id=e.id
        left outer join states_tbl stl on stl.id = up.state
        where u.name like ? and u.active="yes" and e.entity_type='user' LIMIT 10 OFFSET ?)
        ]]>
    </sql-query>
    <sql-query id="discoverCodes">
        <!-- Discover Page Campaigns member/#!discover -->
        <![CDATA[
        (select COALESCE(f.user_id,false) as is_following,c.id,c.title as name,o.profile_pic_url as org_pic_url,o.background_pic_url,o.title as organization_name,c.code_text as code_text,e.entity_type,c.code_picture_url as profile_pic_url,c.state as state,u.name as campaign_creator,
        c.city as city,
        c.charity_id,
        c.suggested_donation,
        c.code_text as wecode,
        c.goal as goal,
        c.end_date as end_date,
        c.type as type,
        e.entity_id as entityid,c.description,e.nooffollowers,e.noof_donors,e.slug,
        coalesce(sum(tb.amount),0) as donation,
        TRUNCATE((coalesce(sum(tb.amount),0)/c.goal)*100,2) as donation_progress,
                ch.payment_gateway,
                cct.currency_code,
                cct.currency_symbol
        from code_tbl c
        inner join entity_tbl e on e.entity_id=c.id
        left outer join transaction_tbl tb on tb.code_id= c.id
        left join user_tbl u on u.id= c.user_id
        inner join charity_tbl ch on ch.id= c.charity_id
        inner join organization_tbl o on o.id = ch.organization_id
        left outer join follow_tbl f on f.user_id=? and f.entity_id=e.id
        left outer join countries_currency cct on cct.country_id = ch.country
        where e.entity_type='code' and ch.charity_from != 'self' and c.status="published" and c.code_text like ? group by c.id LIMIT 5 OFFSET ? )
        ]]>
    </sql-query>
    <sql-query id="discoverCharities">
        <!-- Discover Page Groups member/#!discover -->
        <![CDATA[
        (select COALESCE(f.user_id,false) as is_following,c.id,o.title as name,o.background_pic_url,e.entity_type,o.profile_pic_url,stl.name as state,c.city as city,
        e.id as entityid,o.brief_description as description,e.nooffollowers,e.slug,
        ct.title as code_title,
        ct.suggested_donation,
        ct.code_text as wecode,
                c.payment_gateway,
                cct.currency_code,
                cct.currency_symbol,
                e.noof_donations,
                ct.id as code_id,
                e.id as entity_id,
                (select count(*) as count from code_tbl cot
                where cot.charity_id=c.id and cot.status='published' and cot.team_campaign="no" and cot.date_deleted is NULL) as campaigns,
        e.noofposts
        from charity_tbl c inner join entity_tbl e
        on c.id=e.entity_id
        left outer join follow_tbl f on f.user_id=? and f.entity_id=e.id
        inner join organization_tbl o on c.organization_id=o.id
        inner join code_tbl ct on ct.charity_id = c.id and ct.charity_default='yes'
        left outer join states_tbl stl on stl.id = c.state
                left outer join countries_currency cct on cct.country_id = c.country
        where e.entity_type='charity' and o.title like ? and c.charity_from = 'approved'
        LIMIT 10 OFFSET ?)]]>
    </sql-query>
    <sql-query id="codeWithDonations">
        <![CDATA[select u.name as username,u.email as useremail,upt.profile_pic_url,c.id as code_id,
        c.type as code_type,
        c.title as code_title,
        c.code_text  as code_text,
        c.code_picture_url as 'code_picture_url',
        c.description,
        c.goal,
        ot.profile_pic_url as 'charity_profile_url',
        ot.title as organization_name,
        c.suggested_donation as 'suggested_donation',
        c.charity_id as charity_id,
        ch.name_tmp as 'charity_title',
        coalesce(sum(tb.amount),0) as donation,
        TRUNCATE((coalesce(sum(tb.amount),0)/c.goal)*100,2) as donation_progress,
        et.slug as campaignSlug,
        et2.slug as userSlug,
        et2.id as entity_id
        from code_tbl c
        left join transaction_tbl tb on tb.code_id= c.id
        inner join charity_tbl ch on ch.id=c.charity_id
        inner join organization_tbl ot on ot.id = ch.organization_id
        inner join entity_tbl et on et.entity_id = c.id and et.entity_type ='code'
        inner join user_tbl u on u.id=?
        inner join user_profile_tbl upt on upt.user_id=u.id
        inner join entity_tbl et2 on et2.entity_id=u.id and et2.entity_type="user"
        where c.id=?]]>
    </sql-query>
    <sql-query id="charityCodeWithDonationsUniq">
        <!-- campaigns shown on the organization dashboard -->
        <![CDATA[select c.id as code_id,
        c.type as code_type,
        c.title as code_title,
        c.code_text  as code_text,
        c.code_picture_url as 'code_picture_url',
        c.description,
        c.goal,
        ot.profile_pic_url as 'charity_profile_url',
        c.suggested_donation as 'suggested_donation',
        c.charity_id as charity_id,
        ch.title as 'charity_title',
        coalesce(sum(tb.amount),0) as donation,
        TRUNCATE((coalesce(sum(tb.amount),0)/c.goal)*100,2) as donation_progress
        from code_tbl c
        left join transaction_tbl tb on tb.code_id= c.id
        inner join charity_tbl ch on ch.id= c.charity_id
        inner join organization_tbl ot on ot.id = ch.organization_id
        where c.charity_id=?]]>
    </sql-query>
    <sql-query id="userFollowingCampaigns">
        <!-- campaign cards shown on the user profile page -->
        <![CDATA[select COALESCE(f.user_id,false) as is_following,
        u.name as campaign_creator,
        ifnull(tctl.code_picture_url, ct.code_picture_url) as code_picture_url,
        ct.id as id,
        ct.id as code_id,
        ct.code_text as code_text,
        ct.beneficiary as beneficiary,
        ifnull(tctl.team_name, ct.title) as title,
        ct.description as description,
        ct.city as city,
        stl.name as state,
        ct.suggested_donation,
        ct.status as status,
        ct.type as code_type,
        et.entity_type as type,
        ct.charity_id as charity_id,
        o.background_pic_url,
        o.title as 'organization_name',
        et.noof_donations as 'donation',
        et.noof_donors as donors,
        ct.goal,
        ct.end_date,
        et.id as entity_id,
        TRUNCATE((et.noof_donations/ct.goal)*100,2) as donation_progress,
        et.slug as campaignSlug,
        ch.payment_gateway,
        ch.name_tmp as organization_name,
        cct.currency_code,
        tt.team_name,
        cct.currency_symbol
        #cact.category_id,
        #chct.group_title
        from follow_tbl ft
        INNER join  entity_tbl et on et.id=ft.entity_id
        Inner join  code_tbl ct on et.entity_id = ct.id and ct.status='published' and ct.end_date >= CURDATE() and ct.date_deleted is NULL
        #left outer join  category_charity_tbl cact on cact.charity_id = ct.charity_id
        #left outer join  charity_category_tbl chct on chct.id = cact.category_id
        left outer join team_campaigns_tbl tctl on tctl.team_code_id = ct.id
        left outer join teams_tbl tt on tt.id=ct.team_id
        left join user_tbl u on u.id= ct.user_id
        left outer join charity_tbl ch on ch.id= ct.charity_id
        left outer join countries_currency cct on cct.country_id = ch.country
        left outer join states_tbl stl on stl.id = ct.state
        left outer join organization_tbl o on o.id = ch.organization_id
        left outer join follow_tbl f on f.user_id=? and f.entity_id=et.id
        where ft.user_id = ? and et.entity_type ="code"
        order by ct.id]]>
    </sql-query>
    <sql-query id="userFollowingPeople">
        <![CDATA[select COALESCE(ff.user_id,false) as is_following,ft.*,up.city,stl.name as state,up.profile_pic_url,up.background_pic_url,ut.id,ut.name,up.about_me as 'description',et.slug as userSlug,
(select count(*) from code_tbl c where c.user_id =ut.id and c.individual is not null and c.status!='draft') as campaigns,
et.nooffollowers as nooffollowers,
(et.following_users+et.following_charities+et.following_codes) as 'following',
        et.entity_type as type from follow_tbl ft
        INNER join  entity_tbl et on et.id=ft.entity_id
        Inner join  user_tbl ut on et.entity_id = ut.id
        Left join user_profile_tbl up on ut.id=up.user_id
        left outer join follow_tbl ff on ff.user_id=? and ff.entity_id=et.id
        left outer join states_tbl stl on stl.id = up.state
        where ft.user_id = ? and et.entity_type ="user" and et.date_deleted is NULL]]>
    </sql-query>
    <sql-query id="userFollowersPeople">
        <!-- Information about each follower on a User Profile -->
        <![CDATA[select COALESCE(iq.user_id,false) as is_following,ut.id as 'user_id', upt.about_me as 'description',
            upt.profile_pic_url as 'profile_pic_url',upt.background_pic_url,
            upt.city as 'city',
            stl.name as 'state',
            ut.id as 'id',
            et.id as 'entity_id',
            et.entity_type as 'type',
            (select ee.following_users + ee.following_charities + ee.following_codes from entity_tbl ee
        where ee.entity_id=ut.id and ee.entity_type='user') as following,
        (select nooffollowers from entity_tbl eee where eee.entity_id=ut.id and eee.entity_type='user') as nooffollowers,

            (select count(*) from code_tbl c where c.user_id =ut.id and c.individual is not null and c.status!='draft') as campaigns,
            ut.name as 'name',
            (select slug from entity_tbl eee where eee.entity_id=ut.id and eee.entity_type='user') as userFollowerSlug
            from entity_tbl et
            Inner join follow_tbl ft on et.id=ft.entity_id
            Inner join user_tbl ut on ft.user_id =ut.id and ut.date_deleted is NULL
            Inner join user_profile_tbl upt on ut.id = upt.user_id
            left outer join (select ff.user_id,ee.entity_id from follow_tbl ff
            inner join entity_tbl ee  on ff.user_id=? and ff.entity_id=ee.id and ee.entity_type='user') iq on iq.entity_id=ut.id
            left outer join states_tbl stl on stl.id = upt.state
        where et.entity_id=? and et.entity_type='user']]>
    </sql-query>
    <sql-query id="alreadyManagedCharity">
        <![CDATA[select count(*) as noofadmins from charity_claim_tbl cc where cc.charity_id=?]]>
    </sql-query>
    <sql-query id="charityDonateCampaigns">
        <![CDATA[select c.id as code_id,
        c.type as code_type,
        c.title as code_title,
        c.code_text  as code_text,
        c.code_picture_url as 'code_picture_url',
        c.suggested_donation as 'suggested_donation',
        c.charity_id as charity_id,
        ch.name_tmp as 'charity_title',
        coalesce(sum(tb.amount),0) as donation,
        TRUNCATE((coalesce(sum(tb.amount),0)/c.goal)*100,2) as donation_progress
        from code_tbl c
        left join transaction_tbl tb on tb.code_id= c.id
        inner join charity_tbl ch on ch.id= c.charity_id
        where c.charity_id=? and c.charity_default ='yes'
        Group by c.id
        order by c.title]]>
    </sql-query>
    <sql-query id="update_default_super_admin">
        <![CDATA[UPDATE user_tbl SET is_admin=1 WHERE email=?]]>
    </sql-query>
    <sql-query id="getWepayAccessToken">
        <![CDATA[select * from charity_tbl where account_id=?]]>
    </sql-query>
    <sql-query id="getWepayFundraiserAccessToken">
        <![CDATA[select * from user_payment_tbl where account_id=?]]>
    </sql-query>
    <sql-query id="getWepayTransactionAccessToken">
        <![CDATA[select * from transaction_tbl where checkout_id=?]]>
    </sql-query>
    <sql-query id="updateWepayState">
        <![CDATA[UPDATE charity_tbl SET wepay_account_state=? WHERE id=?]]>
    </sql-query>
    <sql-query id="updateWepayFundraiserState">
        <![CDATA[UPDATE user_payment_tbl SET account_status=? WHERE id=?]]>
    </sql-query>
    <sql-query id="updateWepayTransationState">
        <![CDATA[UPDATE transaction_tbl SET checkout_state=? WHERE id=?]]>
    </sql-query>
    <sql-query id="getWepayRecurringAccessToken">
        <![CDATA[select * from recurring_gift_tbl where subscription_id=?]]>
    </sql-query>
    <sql-query id="updateWepayRecurringState">
        <![CDATA[UPDATE recurring_gift_tbl SET subscription_state=? WHERE id=?]]>
    </sql-query>
    <sql-query id="getCharityInformation">
        <![CDATA[SELECT ct.access_token,ct.id,ct.id as charity_id, ot.brief_description,ot.title FROM charity_tbl ct
        Inner join organization_tbl ot on ct.organization_id = ot.id where ct.id=?]]>
    </sql-query>
    <sql-query id="deleteDonorCard">
        <![CDATA[DELETE FROM credit_card_tbl WHERE id=?]]>
    </sql-query>
    <!-- Stats in the upper left hand corner of organization portal -->
    <sql-query id="charityCountStats">
        <![CDATA[select *, (select count(*) from code_tbl c where c.charity_id=? and c.individual is NULL and c.end_date >= CURDATE() and c.team_campaign != 'yes' and c.status='published' and c.date_deleted is NULL) as campainCount
        from entity_tbl
        where entity_id=? and entity_type ='charity']]>
    </sql-query>
    <sql-query id="wecodesearch">
        <![CDATA[SELECT  c.id,et.slug,et.id as entityId
          FROM code_tbl c
        inner join entity_tbl et on et.entity_id = c.id and et.entity_type ='code'
        WHERE LOWER(c.code_text) = LOWER(?) and c.status='published']]>
    </sql-query>
    <sql-query id="getCharity">
        <![CDATA[SELECT  c.*,cct.currency_code,cct.currency_symbol,stl.name as charityState,
        cut.name as countryName FROM charity_tbl c
        left outer join countries_currency cct on cct.country_id= c.country
        left outer join countries_tbl cut on cut.id = c.country
        left outer join states_tbl stl on stl.id = c.state
        WHERE c.id=?]]>
    </sql-query>
    <sql-query id="getUser">
        <![CDATA[SELECT  ut.*,up.*,stl.name as state FROM user_tbl ut
        inner join user_profile_tbl up on ut.id=up.user_id
        left outer join states_tbl stl on stl.id = up.state WHERE ut.id=?]]>
    </sql-query>
    <sql-query id="checkUser">
        <![CDATA[select password_salt,email,name from user_tbl where id=?]]>
    </sql-query>
    <sql-query id="checkCharityPresence">
        <![CDATA[select * from charity_tbl where ein IN (?,?)]]>
    </sql-query>
    <sql-query id="checkCharityClimeOrNot">
        <![CDATA[select * from charity_claim_tbl where ein IN (?,?)]]>
    </sql-query>
    <sql-query id="getClaimId">
        <![CDATA[select id from charity_claim_tbl where charity_id=?]]>
    </sql-query>
    <sql-query id="importdata">
        <![CDATA[INSERT INTO user_tbl(name,email,verification_key,date_created) values(?,?,?,?)]]>
    </sql-query>
    <sql-query id="userCategory">
        <![CDATA[INSERT INTO user_category_tbl(user_id,category_id) values(?,?)]]>
    </sql-query>
    <!--TODO New Charity Signup Query's -->
    <sql-query id="newOrganization">
        <![CDATA[INSERT INTO organization_tbl SET ?]]>
    </sql-query>
    <sql-query id="newCharity">
        <![CDATA[INSERT INTO charity_tbl SET ?]]>
    </sql-query>
    <sql-query id="newCode">
        <![CDATA[INSERT INTO code_tbl SET ?]]>
    </sql-query>
    <sql-query id="newUser">
        <![CDATA[INSERT INTO user_tbl SET ?]]>
    </sql-query>
    <sql-query id="newProfile">
        <![CDATA[INSERT INTO user_profile_tbl SET ?]]>
    </sql-query>
    <sql-query id="checkUserEmailPresence">
        <![CDATA[select * from user_tbl where email=?]]>
    </sql-query>
    <sql-query id="getCardDetails">
        <![CDATA[select * from credit_card_tbl where token=?]]>
    </sql-query>
    <sql-query id="userContacts">
        <![CDATA[INSERT INTO user_contacts_tbl(user_id,contactsjson) values(?,?)]]>
    </sql-query>
    <sql-query id="passwordUpdateNow">
        <![CDATA[UPDATE user_tbl SET password=?,password_salt=?,active=?,provider=? WHERE id=?]]>
    </sql-query>
    <sql-query id="updateCharityOnboard">
        <![CDATA[update charity_tbl set charityonboarding=? where id=?]]>
    </sql-query>
    <sql-query id="referral">
        <![CDATA[INSERT INTO referral_tbl(charity_id,invited_user_id,referral_user_id,invited_date,invited_from) values(?,?,?,?,?)]]>
    </sql-query>
    <sql-query id="referral_update">
        <![CDATA[update referral_tbl set created_date=? where id=?]]>
    </sql-query>
    <sql-query id="categoryCharitys">
        <![CDATA[select o.title as name,o.brief_description as description,c.id,o.profile_pic_url,e.entity_type
        from charity_tbl c
       inner join  category_charity_tbl cc on cc.charity_id = c.id
       inner join charity_category_tbl chc on chc.id = cc.category_id
       inner join user_category_tbl uc on uc.category_id = chc.group_code
       inner join organization_tbl o on o.id = c.organization_id
       inner join entity_tbl e on e.entity_id = c.id and e.entity_type ='charity'
       where uc.user_id =? and uc.category_id=?  group by c.id limit 5]]>
    </sql-query>
    <sql-query id="getCharityEin">
        <![CDATA[select ein from charity_tbl where id=?]]>
    </sql-query>
    <sql-query id="getCharityAddedOrgs">
        <![CDATA[select c.*,o.profile_pic_url from charity_tbl c inner join organization_tbl o on o.id= c.organization_id where parent_id=?]]>
    </sql-query>
    <sql-query id="validateEntitySlug">
        <![CDATA[select * from entity_tbl where slug =?]]>
    </sql-query>
    <sql-query id="updateEntitySlug">
        <![CDATA[update entity_tbl set slug =? where entity_id =? and entity_type =?]]>
    </sql-query>
    <sql-query id="allzones">
        <![CDATA[select zone_id,zone_name from zone_tbl where country_code in ('US','IN','UK','AU','CA')]]>
    </sql-query>
    <sql-query id="getZoneById">
        <![CDATA[select zone_id,zone_name from zone_tbl where zone_id=?]]>
    </sql-query>
    <sql-query id="getStateName">
        <![CDATA[select name from states_tbl where id=?]]>
    </sql-query>
    <sql-query id="updateCreditCardName">
        <![CDATA[update credit_card_tbl set card_name=? where id=?]]>
    </sql-query>
    <sql-query id="gethashtagdata">
        <![CDATA[SELECT
        COALESCE(u.name,o.title ) as creator_name,
        COALESCE(up.profile_pic_url,o.profile_pic_url) as creator_pic,
        COALESCE(u.id,c.id) as creator_id,
        sut.id, sut.entity_id, et.entity_type,sut.content,sut.date_posted,
        sut.in_reply_id,sut.original_entity_id,sut.status_type,sut.retweets,sut.reply_count,sut.image_url,sut.headline,
         et.slug as commonSlug,
         etparent.slug as parentSlug,
        COALESCE(uparent.name,oparent.title ) as parent_creator_name,
        COALESCE(upparent.profile_pic_url,oparent.profile_pic_url) as parent_creator_pic,
        COALESCE(uparent.id,cparent.id) as parent_creator_id,
        COALESCE(etparent.entity_type) as parent_type,
        mt.metadata as metadata,
        mt.code_json as code_tmpl
        FROM status_update_link_tbl sult
        INNER JOIN status_update_tbl sut ON sut.id = sult.post_id and sut.date_deleted is null
        INNER JOIN entity_tbl et ON sut.entity_id = et.id
        left outer join metadata_tbl mt on mt.post_id = sut.id
        LEFT OUTER JOIN user_tbl u ON u.id = et.entity_id
        left outer JOIN user_profile_tbl up ON u.id = up.user_id
        LEFT OUTER JOIN charity_tbl c ON c.id=et.entity_id
        left outer JOIN organization_tbl o ON o.id = c.organization_id
        LEFT OUTER JOIN entity_tbl etparent ON sut.original_entity_id = etparent.id and sult.link_type='hashcode'
        LEFT OUTER JOIN user_tbl uparent ON uparent.id = etparent.entity_id
        left outer JOIN user_profile_tbl upparent ON uparent.id = upparent.user_id
        LEFT OUTER JOIN charity_tbl cparent ON cparent.id=etparent.entity_id
        left outer JOIN organization_tbl oparent ON oparent.id = cparent.organization_id
        where sult.text=? and sut.in_reply_id is null
        union all
        SELECT
        COALESCE(u.name,o.title ) as creator_name,
        COALESCE(up.profile_pic_url,o.profile_pic_url) as creator_pic,
        COALESCE(u.id,c.id) as creator_id,
        sut.id, sut.entity_id, et.entity_type,sut.content,sut.date_posted,
        sut.in_reply_id,sut.original_entity_id,sut.status_type,sut.retweets,sut.reply_count,sut.image_url,sut.headline,
         et.slug as commonSlug,
         etparent.slug as parentSlug,
        COALESCE(uparent.name,oparent.title ) as parent_creator_name,
        COALESCE(upparent.profile_pic_url,oparent.profile_pic_url) as parent_creator_pic,
        COALESCE(uparent.id,cparent.id) as parent_creator_id,
        COALESCE(etparent.entity_type) as parent_type,
        mt.metadata as metadata,
        mt.code_json as code_tmpl
        FROM status_update_link_tbl sult
        INNER JOIN status_update_tbl sutt ON sutt.id = sult.post_id and sutt.date_deleted is null and sutt.in_reply_id is not null
        INNER JOIN status_update_tbl sut ON sut.id = sutt.in_reply_id and sut.date_deleted is null
        left outer join metadata_tbl mt on mt.post_id = sut.id
        INNER JOIN entity_tbl et ON sut.entity_id = et.id
        LEFT OUTER JOIN user_tbl u ON u.id = et.entity_id
        left outer JOIN user_profile_tbl up ON u.id = up.user_id
        LEFT OUTER JOIN charity_tbl c ON c.id=et.entity_id
        left outer JOIN organization_tbl o ON o.id = c.organization_id
        LEFT OUTER JOIN entity_tbl etparent ON sut.original_entity_id = etparent.id and sult.link_type='hashcode'
        LEFT OUTER JOIN user_tbl uparent ON uparent.id = etparent.entity_id
        left outer JOIN user_profile_tbl upparent ON uparent.id = upparent.user_id
        LEFT OUTER JOIN charity_tbl cparent ON cparent.id=etparent.entity_id
        left outer JOIN organization_tbl oparent ON oparent.id = cparent.organization_id
        where sult.text=?
        group by sut.id
        order by date_posted desc]]>
    </sql-query>
    <sql-query id="gethashtagaccounts">
        <![CDATA[select DISTINCT COALESCE(f.user_id,false) as is_following,u.id,u.name,u.id as code_text,et.entity_type,et.noof_donations,up.profile_pic_url,up.profile_pic_thumb_url as background_pic_url,up.profile_pic_url as org_pic_url,up.city as city,stl.name as state,et.entity_id as entityid,up.about_me as description,et.nooffollowers,et.slug,
            up.id as organization_name,
            up.id as code_id,
            up.id as charity_id,
            '0' as suggested_donation,
            up.id as wecode,
            '0' as donation,
            '0' as donation_progress,
            '0' as payment_gateway,
             '0' as currency_code,
            '0' as currency_symbol,
            '0' as noofposts,
            ( et.following_users + et.following_charities + et.following_codes)  as following,
            (select count(*) from code_tbl c where c.user_id =u.id and c.individual is not null and c.status!='draft') as campaigns
            from status_update_link_tbl sult
            inner join status_update_tbl sut on sult.post_id = sut.id or sult.post_id = sut.in_reply_id
            inner join entity_tbl et on et.id = sut.entity_id and et.entity_type ='user'
            inner join user_tbl u on et.entity_id = u.id
            inner join user_profile_tbl up on up.user_id = u.id
            left outer join states_tbl stl on stl.id = up.state
            left outer join follow_tbl f on f.user_id=? and f.entity_id=et.id
            where sult.text =? and sut.date_deleted is null
            union all
            select DISTINCT COALESCE(f.user_id,false) as is_following,c.id,o.title as name,o.id as code_text,et.entity_type,et.noof_donations,o.profile_pic_url,o.profile_pic_url as org_pic_url,o.background_pic_url,c.city as city,stl.name as state,
            et.entity_id as entityid,
            o.full_description as description,et.nooffollowers,et.slug,
            o.title as organization_name,
            ct.id as code_id,
            c.id as charity_id,
            ct.suggested_donation,
            ct.code_text as wecode,
            '0' as donation,
            '0' as donation_progress,

            c.payment_gateway,
            cct.currency_code,
            cct.currency_symbol,
            et.noofposts as noofposts,
            '0'  as following,
            (select count(*) from code_tbl co where co.charity_id=c.id and co.status='published' and co.date_deleted is NULL) as campaigns
            from status_update_link_tbl sult
            inner join status_update_tbl sut on sult.post_id = sut.id or sult.post_id = sut.in_reply_id
            inner join entity_tbl et on et.id = sut.entity_id and et.entity_type ='charity'
            inner join charity_tbl c on et.entity_id = c.id
            left outer join states_tbl stl on stl.id = c.state
            left outer join follow_tbl f on f.user_id=? and f.entity_id=et.id
            left outer join transaction_tbl tb on tb.charity_id= c.id
            inner join organization_tbl o on c.organization_id=o.id
            left outer join countries_currency cct on cct.country_id= c.country
            inner join code_tbl ct on ct.charity_id = c.id and ct.charity_default='yes'
            where sult.text =? and sut.date_deleted is null

            union all

        select DISTINCT COALESCE(f.user_id,false) as is_following,c.id,c.title as name,c.code_text as code_text,et.entity_type,et.noof_donations,c.code_picture_url as profile_pic_url,ot.background_pic_url as background_pic_url,ot.profile_pic_url as org_pic_url,
        c.city as city,
        stl.name as state,

        et.entity_id as entityid,c.description,et.nooffollowers,et.slug,
        ot.title as organization_name,
        c.id as code_id,
        c.charity_id,
        c.suggested_donation,
        c.code_text as wecode,
        coalesce(sum(tb.amount),0) as donation,
        TRUNCATE((coalesce(sum(tb.amount),0)/c.goal)*100,2) as donation_progress,
        ch.payment_gateway,
        cct.currency_code,
        cct.currency_symbol,
        '0'  as following,
        '0' as noofposts,

        c.id as campaigns
        from status_update_link_tbl sult
        inner join status_update_tbl sut on sult.post_id = sut.id or sult.post_id = sut.in_reply_id
        inner join entity_tbl et on et.id = sut.entity_id and et.entity_type ='code'
        inner join code_tbl c on et.entity_id = c.id
        left outer join follow_tbl f on f.user_id=? and f.entity_id=et.id
        left outer join transaction_tbl tb on tb.code_id= c.id
        Inner join charity_tbl ch on ch.id= c.charity_id
        Inner join organization_tbl ot on ch.organization_id= ot.id
        left outer join countries_currency cct on cct.country_id= ch.country
        left outer join states_tbl stl on stl.id = c.state
        where sult.text =? and sut.date_deleted is null]]>
    </sql-query>
    <sql-query id="gethashtagimages">
        <![CDATA[SELECT sut.id, sut.image_url
FROM status_update_link_tbl sult
INNER JOIN status_update_tbl sut ON sut.id = sult.post_id and sut.date_deleted is null OR sut.in_reply_id=sult.post_id and sut.date_deleted is null
where sult.text=? and sut.image_url is not null]]>
    </sql-query>
    <sql-query id="postpagequery">
        <![CDATA[SELECT
        COALESCE(u.name,o.title ) as creator_name,
        COALESCE(up.profile_pic_url,o.profile_pic_url) as creator_pic,
        COALESCE(u.id,c.id) as creator_id,
        sut.id, sut.entity_id,et.entity_type,sut.content,sut.date_posted,
        sut.in_reply_id,sut.original_entity_id,sut.status_type,sut.headline,
        sut.reply_count,sut.retweets,sut.image_url,
        et.slug as commonSlug,

        etparent.slug as parentSlug,
        COALESCE(uparent.name,oparent.title ) as parent_creator_name,
        COALESCE(upparent.profile_pic_url,oparent.profile_pic_url) as parent_creator_pic,
        COALESCE(uparent.id,cparent.id) as parent_creator_id,
        COALESCE(etparent.entity_type) as parent_type,
        mt.metadata as metadata,
        mt.code_json as code_tmpl

        FROM status_update_tbl sut
        INNER JOIN entity_tbl et ON sut.entity_id = et.id
        left outer join metadata_tbl mt on mt.post_id = sut.id
        left outer join user_tbl u ON u.id = et.entity_id and et.entity_type ='user'
        left outer join user_profile_tbl up ON u.id = up.user_id
        left outer join charity_tbl c ON c.id=et.entity_id and et.entity_type ='charity'
        left outer join organization_tbl o ON o.id = c.organization_id

        LEFT OUTER JOIN entity_tbl etparent ON sut.original_entity_id = etparent.id and sut.status_type='share'
        left outer join user_tbl uparent ON uparent.id = etparent.entity_id and etparent.entity_type ='user'
        left outer join user_profile_tbl upparent ON uparent.id = upparent.user_id
        left outer join charity_tbl cparent ON cparent.id=etparent.entity_id and etparent.entity_type ='charity'
        left outer join organization_tbl oparent ON oparent.id = cparent.organization_id

        where sut.id=? and sut.date_deleted is null and sut.status_type!='reply'
        ORDER BY sut.date_posted DESC
        LIMIT 10 OFFSET 0]]>
    </sql-query>
    <sql-query id="insertFollowNotification">
        <![CDATA[INSERT INTO user_notifications_tbl(entity_id,notification_type,link_id,status,date_notification,user_id) values(?,?,?,?,?,?)]]>
    </sql-query>
    <sql-query id="updateNotificationCount">
        <![CDATA[update entity_tbl set  notifications_count = notifications_count + 1 where id= ? and entity_type="user"]]>
    </sql-query>
    <sql-query id="resetNotificationsCount">
        <![CDATA[update entity_tbl set  notifications_count = 0 where id= ? and entity_type="user"]]>
    </sql-query>
    <sql-query id="getNotificationsCount">
        <![CDATA[select notifications_count from entity_tbl where id=? and entity_type="user"]]>
    </sql-query>
    <sql-query id="getnotifications">
        <![CDATA[select unt.id as id,unt.notification_type as type,unt.date_notification,et.slug,et.id as entity_id,ut.name as name,upt.profile_pic_url,upt.user_id as link_id,unt.status
from user_notifications_tbl unt
Inner Join entity_tbl et on et.entity_id=unt.link_id and et.entity_type='user'
Inner Join user_tbl ut on ut.id=et.entity_id
Inner Join user_profile_tbl upt on upt.user_id=ut.id
where unt.entity_id=? order by date_notification desc LIMIT 10 OFFSET ?]]>
    </sql-query>
    <sql-query id="verificationOfSlug">
        <![CDATA[select * from entity_tbl where slug=? and entity_type=? or slug=? and entity_type=?]]>
    </sql-query>
    <sql-query id="verificationOfWecodeSlug">
        <![CDATA[select e.*, c.title, c.code_text, c.code_picture_url from entity_tbl e
left outer join code_tbl c on c.id = e.entity_id
 where e.slug=? and e.entity_type=?]]>
    </sql-query>
    <sql-query id="getUserEmailForWrittenMentions">
        <![CDATA[select et.entity_type as type,ut.name as name,ut.email as email,ut.id as id
from entity_tbl as et
inner join user_tbl ut on ut.id=et.entity_id and et.entity_type='user'
where et.slug=?
union all
select et.entity_type as type,ct.name_tmp as name,ut.email as email,ct.id as id
from entity_tbl as et
inner join charity_tbl ct on ct.id=et.entity_id and et.entity_type='charity'
inner join charity_admin_tbl cat on cat.charity_id=ct.id
inner join user_tbl ut on ut.id=cat.user_id
where et.slug=?
union all
select et.entity_type as type, ct.name_tmp as name,ut.email as email,c.id as id
from entity_tbl  et
inner join code_tbl c on c.id=et.entity_id and et.entity_type='code'
inner join charity_tbl ct on ct.id=c.charity_id
inner join charity_admin_tbl cat on cat.charity_id=ct.id
inner join user_tbl ut on ut.id=cat.user_id
where et.slug=?]]>
    </sql-query>
    <sql-query id="champaigns-list">
        <![CDATA[select slug from entity_tbl ]]>
    </sql-query>
    <sql-query id="elastic-code-followstatus">
        <![CDATA[select COALESCE(f.user_id,false) as is_following,
        coalesce(sum(tb.amount),0) as donation,
        e.noof_donors AS donors,
        c.type as campaigntype,
        c.team_id as teamid,tt.team_name as teamname,
        TRUNCATE((coalesce(sum(tb.amount),0)/c.goal)*100,2) as donation_progress,
        c.beneficiary as beneficiary
        from code_tbl c inner join
        entity_tbl e on e.entity_id=c.id
        left outer join transaction_tbl tb on tb.code_id= c.id
        left outer join follow_tbl f on f.user_id=? and f.entity_id=e.id
        left outer join teams_tbl tt on tt.id=c.team_id
        where e.entity_type='code' and c.id=?]]>
    </sql-query>
    <sql-query id="elastic-charity-followstatus">
        <![CDATA[select COALESCE(f.user_id,false) as is_following,
    (select count(*) from code_tbl  where charity_id=c.id and status!='draft' and date_deleted is null AND team_campaign="no" and end_date >= CURDATE()) AS noof_campaigns,
        e.nooffollowers AS followers,
        e.noofposts AS posts
       from charity_tbl c inner join entity_tbl e
       on c.id=e.entity_id
       left outer join follow_tbl f on f.user_id=? and f.entity_id=e.id
       where e.entity_type='charity' and c.id =?]]>
    </sql-query>
    <sql-query id="elastic-donor-followstatus">
        <![CDATA[select COALESCE(f.user_id,false) as is_following,
    (select count(*) from code_tbl c where c.user_id =u.id and c.individual is not null and c.status!='draft' and date_deleted is null) as campaigns,
      e.nooffollowers AS followers,
      (e.following_users+e.following_charities+e.following_codes) AS following
       from user_tbl u   inner join user_profile_tbl up on u.id=up.user_id
       inner join entity_tbl e on e.entity_id=u.id
       left outer join follow_tbl f on f.user_id=? and f.entity_id=e.id
       where e.entity_type='user' and u.id =?]]>
    </sql-query>
    <sql-query id="getUsercategories">
        <![CDATA[select category_id from user_category_tbl where user_id=? GROUP BY category_id]]>
    </sql-query>
    <sql-query id="followerscategoryRecommendations">
        <![CDATA[(select ct.id as id,ot.title as name,et.entity_type,ot.profile_pic_url,ct.city,stl.name as state,
ot.short_name as short_name,et.entity_id as entityid,ot.brief_description as description,et.slug as uniqSlug
from user_category_tbl uct
inner join charity_category_tbl chct on chct.group_code=uct.category_id
inner join category_charity_tbl cact on cact.category_id=chct.id
inner join charity_tbl ct on ct.id=cact.charity_id
inner join organization_tbl ot on ot.id=ct.organization_id
inner join entity_tbl et on et.entity_id=ct.id and et.entity_type ='charity'
left outer join states_tbl stl on ct.state = stl.id
where uct.category_id in ({SQL_IN})
GROUP BY ct.id
LIMIT 5 OFFSET ?)
union all
(select uct.user_id as id,ut.name,et.entity_type,upt.profile_pic_url,upt.city,
stl.name as state,ut.name as short_name,et.id as entityid,upt.about_me as description, et.slug as uniqSlug
from user_category_tbl uct
inner join user_tbl ut on ut.id=uct.user_id
inner join entity_tbl et on et.entity_id=ut.id and et.entity_type ='user'
inner join user_profile_tbl upt on upt.user_id=ut.id
left outer join states_tbl stl on upt.state = stl.id
where category_id in ({SQL_IN}) and ut.id!=?
GROUP BY ut.id
LIMIT 5 OFFSET ?)]]>
    </sql-query>
    <sql-query id="codeStatusUpdate">
        <![CDATA[UPDATE code_tbl SET status='published',show_in_search=?,published_date=? where id =?]]>
    </sql-query>
    <sql-query id="codeStatusUnpublishedUpdate">
        <![CDATA[UPDATE code_tbl SET status='draft',show_in_search=? where id =?]]>
    </sql-query>
    <sql-query id="getDefaultCharityData">
        <![CDATA[select c.*,e.slug,cct.currency_symbol,cct.currency_code from code_tbl c
        inner join entity_tbl e on e.entity_id = c.id and e.entity_type = 'code'
        inner join charity_tbl ch on ch.id= c.charity_id
        left outer join countries_currency cct on cct.country_id = ch.country
        where charity_id=? and charity_default='yes']]>
    </sql-query>
    <sql-query id="updateActivation">
        <![CDATA[UPDATE user_tbl SET active=? WHERE id=?]]>
    </sql-query>
    <sql-query id="updateCharityName">
        <![CDATA[update charity_tbl set name_tmp =? where id=?]]>
    </sql-query>
    <sql-query id="commentuserinfo">
        <![CDATA[ select u.*,up.*,e.slug from entity_tbl e
                          INNER JOIN user_profile_tbl up on up.user_id =e.entity_id
                          inner join user_tbl u on e.entity_id = u.id and e.entity_type ='user'
                          where e.id=?]]>
    </sql-query>
    <sql-query id="deleteCampaign">
        <![CDATA[delete  f.* from entity_tbl e
inner join code_tbl c on e.entity_id = c.id and e.entity_type ='code'
left outer join transaction_tbl t on t.code_id = c.id
left outer join follow_tbl f on f.entity_id = e.id
where e.slug = ?]]>
    </sql-query>
    <sql-query id="updatedeleteCampaign">
        <![CDATA[delete  e.*,f.* from entity_tbl e
            inner join code_tbl c on e.entity_id = c.id and e.entity_type ='code'
            left outer join transaction_tbl t on t.code_id = c.id
            left outer join follow_tbl f on f.entity_id = e.id
            where e.slug = ?]]>
    </sql-query>
    <sql-query id="getcharityanalytics">
        <![CDATA[SELECT SUM(tt.amount) 'totaldonations',
            COUNT(DISTINCT(tt.user_id)) 'totaldonors',
            (sum(CASE WHEN YEAR(tt.transaction_date) = YEAR(CURRENT_DATE - INTERVAL 1 MONTH)
            AND MONTH(tt.transaction_date) = MONTH(CURRENT_DATE - INTERVAL 1 MONTH) THEN tt.amount END)) as 'lastmonth',
            (sum(CASE WHEN MONTH(tt.transaction_date) = MONTH(CURDATE()) THEN tt.amount END)) as 'currentmonth',
            (count(distinct(CASE WHEN MONTH(tt.transaction_date) = MONTH(CURDATE()) THEN (tt.user_id) END))) as 'currentmonthdonors',
            round(((sum(CASE WHEN MONTH(tt.transaction_date) = MONTH(CURDATE()) THEN tt.amount END))
            -
            (sum(CASE WHEN YEAR(tt.transaction_date) = YEAR(CURRENT_DATE - INTERVAL 1 MONTH)
            AND MONTH(tt.transaction_date) = MONTH(CURRENT_DATE - INTERVAL 1 MONTH) THEN tt.amount END)))
            /
            (sum(CASE WHEN MONTH(tt.transaction_date) = MONTH(CURDATE()) THEN tt.amount END))
            *100) 'growthbymonth'
            FROM transaction_tbl tt
            where tt.charity_id=?]]>
    </sql-query>
    <sql-query id="getCharityUserDetails">
        <![CDATA[select c.access_token, c.account_id, c.id as charityId,
                        u.id as user_id, u.email,u.name, c.name_tmp as title, cut.country_code  from charity_tbl c
                        inner join charity_admin_tbl ca on ca.charity_id = c.id and ca.user_id =?
                        inner join user_tbl u on u.id = ca.user_id
                        left outer join countries_tbl cut on cut.id = c.country
                        where c.id =?]]>
    </sql-query>
    <sql-query id="public_verificaton_token">
        <![CDATA[SELECT u.*,ca.*,up.*, u.id as 'user_id', et.id as entity_id ,et.slug as userSlug,cct.country_code, cunt.currency_code,cunt.currency_symbol
            FROM user_tbl u
            INNER JOIN user_profile_tbl up ON up.user_id = u.id
            left outer join countries_tbl cct on cct.id= up.country
            left outer join countries_currency cunt on cunt.country_id = up.country
            LEFT JOIN charity_admin_tbl ca ON ca.user_id = u.id
            Inner join entity_tbl et on et.entity_id = u.id
            WHERE u.id =? and et.entity_type = 'user']]>
    </sql-query>
    <sql-query id="checkemailatimporttime">
        <![CDATA[UPDATE user_tbl SET name=?,email=?,verification_key=?,date_created=? WHERE id=?]]>
    </sql-query>
    <sql-query id="getCampaignDonorsList">
        <![CDATA[select t.user_id,u.email,u.name from transaction_tbl t
                 inner join user_tbl u on u.id=t.user_id
                where t.code_id=?]]>
    </sql-query>

    <sql-query id="getCampaignExtraDonors">
        <![CDATA[select u.name, up.profile_pic_url,u.active,t.amount, t.transaction_date,t.created_date,t.anonymous,t.donor_comment, t.hide_amount,et.slug,
        cct.currency_code, cct.currency_symbol
        from user_tbl u
        inner join transaction_tbl t on u.id = t.user_id
        inner join user_profile_tbl up on up.user_id = u.id
        inner join entity_tbl et on et.entity_id = u.id and et.entity_type ='user'
        inner join charity_tbl ct on ct.id = t.charity_id
        left outer join countries_currency cct on cct.country_id= ct.country
        where t.code_id=?
        order by t.transaction_date desc
        LIMIT 5 OFFSET ?]]>
    </sql-query>
    <sql-query id="GetFollowedUserDetails">
        <![CDATA[select ut.name, up.about_me, up.profile_pic_url, et.slug from user_profile_tbl up
                    inner join entity_tbl et on up.user_id=et.entity_id and et.entity_type ='user'
                    inner join user_tbl ut on ut.id=up.user_id
                    where et.entity_id=?]]>
    </sql-query>
    <sql-query id="GettingUsermail">
        <![CDATA[SELECT email FROM user_tbl where id=?]]>
    </sql-query>
    <sql-query id="GetAdminEmail">
        <![CDATA[​select distinct ut.* from user_tbl ut
inner join charity_admin_tbl cat on cat.user_id=ut.id
where cat.charity_id=?
and cat.default_value=1]]>
    </sql-query>
    <sql-query id="CheckFollowStatus">
        <![CDATA[select ft.user_id, ft.entity_id from follow_tbl ft
inner join entity_tbl et on et.id=ft.entity_id
where et.entity_id=? and ft.user_id=?]]>
    </sql-query>
    <sql-query id="getCharityAdminEmail">
        <![CDATA[select email from user_tbl where id=?]]>
    </sql-query>
    <sql-query id="getfollowingUserData">
        <!-- Data for new followers real-time update -->
        <![CDATA[select COALESCE(ff.user_id,false) as is_following,up.city,stl.name as state,up.profile_pic_url,up.background_pic_url,ut.id,ut.name,up.about_me as 'description',et.slug as userSlug,et.entity_type as type,
up.id as organization_id,
"" as organization_title,
ut.id as suggested_donation,
ut.id as goal,
'' as end_date,
'' as charity_id,
ut.name as code_text,
        ut.id as code_id,
        ut.name as code_title,
        '' as codetype,
        '' as individual,
        '' as code_slug,
 0 as donation,
"" as currencysymbol,
"" as currencycode,
ut.name as creatorname,

        0 as donation_progress,
        0 as noof_donors,
        0 as noofposts,
        (select e.following_users + e.following_charities + e.following_codes from entity_tbl e
        where e.entity_id=ut.id and e.entity_type='user') as following,
        (select nooffollowers from entity_tbl eee where eee.entity_id=ut.id and eee.entity_type='user') as nooffollowers,
        (select count(*) from code_tbl c where c.user_id=ut.id and c.individual is not null and c.status!='draft') as campaigns
from user_tbl ut
INNER join  entity_tbl et on et.entity_id=ut.id
Left join user_profile_tbl up on ut.id=up.user_id
left outer join follow_tbl ff on ff.user_id=? and ff.entity_id=et.id
left outer join states_tbl stl on stl.id = up.state
left outer join countries_currency cct on cct.country_id = up.country
where ut.id =? and et.entity_type ="user"
union all
             select COALESCE(ff.user_id,false) as is_following,ct.city,stl.name as state,ot.profile_pic_url,ot.background_pic_url,ct.id,ot.title as name,ot.full_description as 'description',et.slug as userSlug,et.entity_type as type,
ot.id AS organization_id,
ot.title as organization_title,

cot.suggested_donation,
cot.goal,
cot.end_date,
cot.charity_id,
        cot.code_text,
        cot.id as code_id,
        cot.title as code_title,
        cot.type as codetype,
        cot.individual as individual,
        et.slug as code_slug,
 et.noof_donations as donation,
 et.noofposts as noofposts,
cct.currency_symbol as currencysymbol,
cct.currency_code as currencycode,
u.name as creatorname,

        TRUNCATE((et.noof_donations/cot.goal)*100,2) as donation_progress,
         et.noof_donors as noof_donors,
        (select e.following_users + e.following_charities + e.following_codes from entity_tbl e
        where e.entity_id=et.entity_id and e.entity_type='charity') as following,
        (select nooffollowers from entity_tbl eee where eee.entity_id=et.entity_id and eee.entity_type='charity') as nooffollowers,
        (select count(*) from code_tbl c where c.charity_id =et.entity_id and c.individual is not null and c.status!='draft') as campaigns
from charity_tbl ct
INNER join  entity_tbl et on et.entity_id=ct.id
Left join organization_tbl ot on ot.id=ct.organization_id
inner join code_tbl cot on cot.charity_id= ct.id and cot.charity_default='yes'
left outer join follow_tbl ff on ff.user_id=? and ff.entity_id=et.id
left outer join states_tbl stl on stl.id = ct.state
inner join user_profile_tbl up on up.user_id=ff.user_id
inner join user_tbl u on u.id=ff.user_id

left outer join countries_currency cct on cct.country_id = up.country
where ct.id = ? and et.entity_type ="charity"
union all
select COALESCE(ff.user_id,false) as is_following,c.city,stl.name as state,c.code_picture_url as profile_pic_url,ot.background_pic_url,c.id,c.title as name,c.description as 'description',et.slug as userSlug,et.entity_type as type,
ot.id AS organization_id,
ot.title as organization_title,
c.suggested_donation,
c.goal,
c.end_date,
c.charity_id,
        c.code_text,
        c.id as code_id,
        c.title as code_title,
        c.type as codetype,
        c.individual as individual,
        et.slug as code_slug,
 et.noof_donations as donation,
 et.noofposts as noofposts,
cct.currency_symbol as currencysymbol,
cct.currency_code as currencycode,
u.name as creatorname,
        TRUNCATE((et.noof_donations/c.goal)*100,2) as donation_progress,
         et.noof_donors as noof_donors,
        (select e.following_users + e.following_charities + e.following_codes from entity_tbl e
        where e.entity_id=ff.id and e.entity_type='user') as following,
        (select nooffollowers from entity_tbl eee where eee.entity_id=ff.id and eee.entity_type='user') as nooffollowers,
        (select count(*) from code_tbl c where c.user_id =ff.id and c.individual is not null and c.status!='draft') as campaigns
from code_tbl c
INNER join  entity_tbl et on et.entity_id=c.id
left outer join charity_tbl ct on ct.id=c.charity_id
Left join organization_tbl ot on ot.id=ct.organization_id
left outer join follow_tbl ff on ff.user_id=? and ff.entity_id=et.id
left outer join states_tbl stl on stl.id = ct.state
inner join user_profile_tbl up on up.user_id=ff.user_id
inner join user_tbl u on u.id=ff.user_id

left outer join countries_currency cct on cct.country_id = up.country
where c.id =?  and et.entity_type ="code"
]]>
    </sql-query>
    <sql-query id="deleteunfollow">
        <![CDATA[delete from user_notifications_tbl where entity_id=? and user_id=? and notification_type=?]]>
    </sql-query>
    <sql-query id="checkuserId">
        <![CDATA[SELECT * FROM user_mobile_device_token_tbl WHERE id=?]]>
    </sql-query>
    <sql-query id="userDeviceTokenUpdate">
        <![CDATA[UPDATE user_mobile_device_token_tbl SET device_token=?,device_type=? WHERE id=?]]>
    </sql-query>
    <sql-query id="userDeviceTokenInsert">
        <![CDATA[INSERT INTO user_mobile_device_token_tbl(id,device_token,device_type) values(?,?,?)]]>
    </sql-query>
    <sql-query id="updatecampaigndelete">
        <![CDATA[UPDATE code_tbl c
        inner join entity_tbl et on et.entity_id=c.id
        SET c.date_deleted=?,c.charity_default="no",c.show_in_search=0,c.status="draft" ,et.date_deleted=now() WHERE c.id=?]]>
    </sql-query>
    <sql-query id="updateStripeCharityAccountDetails">
        <![CDATA[update charity_tbl c, user_tbl u
                  set  c.account_id=?,c.access_token=?,c.wepay_account_state=?,c.payment_gateway=?
                  where c.id =? and u.id =?]]>
    </sql-query>
    <sql-query id="cancelStripeSubscription">
        <![CDATA[update recurring_gift_tbl set date_deleted=?,subscription_state=? where id=?]]>
    </sql-query>
    <sql-query id="getSubscriptionQueryForCharity">
        <![CDATA[select rt.*,pgt.account_id,pgt.access_token,cctt.currency_code as currency from recurring_gift_tbl rt
        left outer join code_tbl code on code.id=rt.code_id
        inner join payment_gateways_tbl pgt on  pgt.id=code.payment_gateway_id
        left outer join charity_tbl ch on ch.id= code.charity_id
        left outer join countries_currency cctt on cctt.country_id= ch.country
        where rt.id= ?]]>
    </sql-query>
    <sql-query id="getSubscriptionQueryForOnlyCharity">
        <![CDATA[select rt.*,pgt.account_id,pgt.access_token,cctt.currency_code as currency from
recurring_gift_tbl rt
        left outer join charity_tbl ch on ch.id= rt.charity_id
        left outer join payment_gateways_tbl pgt on  pgt.charity_id=ch.id
        left outer join countries_currency cctt on cctt.country_id= ch.country
        where rt.id= ?]]>
    </sql-query>
    <sql-query id="getSubscriptionQueryForUser">
        <![CDATA[select rt.*,pgt.account_id,pgt.access_token,cctt.currency_code as currency from recurring_gift_tbl rt
        left outer join code_tbl code on code.id=rt.code_id
        left outer join charity_tbl cht on cht.id=rt.charity_id
        inner join payment_gateways_tbl pgt on  pgt.id=code.payment_gateway_id
        inner join user_tbl u on u.id= code.user_id and code.charity_id is NULL
        inner join user_profile_tbl upt on upt.user_id= u.id
        left outer join countries_currency cctt on cctt.country_id= upt.country
        where rt.id=?]]>
    </sql-query>
    <sql-query id="updateStripeSubscription">
        <![CDATA[update recurring_gift_tbl set subscription_plan_id=?,amount=? where id=?]]>
    </sql-query>
    <sql-query id="deleteDeviceToken">
        <![CDATA[DELETE FROM user_mobile_device_token_tbl WHERE id=? AND device_token=?]]>
    </sql-query>
    <sql-query id="setUserAsAdmin">
        <![CDATA[UPDATE user_tbl SET is_admin=1 WHERE email=?]]>
    </sql-query>
    <sql-query id="insertImport">
        <![CDATA[INSERT INTO video_tbl (entity_id,entity_type,video_url,date_created,video_token,video_image)
VALUES(?,?,?,?,?,?);]]>
    </sql-query>
    <sql-query id="getAccCount">
        <![CDATA[SELECT ( select count(*) from user_tbl ) as usercount,
        ( select count(*) from charity_tbl ) as charitycount,
        ( select count(*) from code_tbl ) as codecount]]>
    </sql-query>
    <sql-query id="addingUserData">
        <![CDATA[INSERT INTO user_tbl(date_created,name,email) values(?,?,?)]]>
    </sql-query>
    <sql-query id="addingUserDatawithoutemail">
        <![CDATA[INSERT INTO user_tbl(date_created,name) values(?,?)]]>
    </sql-query>
    <sql-query id="newProfiledatainsert">
        <![CDATA[INSERT INTO user_profile_tbl (user_id,home_phone) VALUES (?,?)]]>
    </sql-query>
    <sql-query id="getCharityOfflineDonations">
        <![CDATA[select t.transaction_date,ct.code_text,ct.title,t.amount,u.name
from transaction_tbl t
        inner join user_tbl u on u.id=t.user_id
        inner join code_tbl ct on ct.id=t.code_id
        where t.charity_id=? and t.offline='yes'
        order by t.transaction_date desc]]>
    </sql-query>
    <sql-query id="getCodeThankYouMsg">
        <![CDATA[select c.thank_message,c.beneficiary,c.title as campaign_name,c.team_campaign,c.user_id,
        et.slug from code_tbl c
                  inner join entity_tbl et on et.entity_id=c.id and et.entity_type='code'
                  where c.id=?]]>
    </sql-query>
    <sql-query id="getCharityThankYouMsg">
        <![CDATA[select org.title as campaign_name,et.slug from organization_tbl org inner join charity_tbl cht on
 cht.organization_id=org.id left outer join charity_claim_tbl ccl on ccl.charity_id=cht.id
inner join entity_tbl et on et.entity_id=cht.id and et.entity_type='charity'
where cht.id=?]]>
    </sql-query>
    <sql-query id="userCodeInfo">
        <![CDATA[INSERT INTO user_campaign_tbl SET ?]]>
    </sql-query>
    <sql-query id="fundraiseCodeCategorys">
        <![CDATA[INSERT INTO ww_code_category_tbl(code_id,category_id) values(?,?)]]>
    </sql-query>
    <sql-query id="trackedInfo">
        <![CDATA[INSERT INTO track_tbl SET ?]]>
    </sql-query>
    <sql-query id="getFundraisers">
        <!-- Member Manage -->
        <![CDATA[(select ct.*,et.slug,et.id as entityid,et.noof_donors as noofdonors,
        (select COUNT(*) from code_tbl WHERE parent_id=ct.id) AS no_of_p2p,
        (select count(*) from teams_tbl where code_id=ct.id) AS no_of_team_fundraisers,
        et.noof_donations as donation,cct.currency_code,cct.currency_symbol,
        TRUNCATE((et.noof_donations/ct.goal)*100,2) as donation_progress,
        chat.name_tmp as charity_name,tt.team_name as team_name
        from entity_tbl et
        inner join code_tbl ct on ct.id=et.entity_id and et.entity_type='code' and ct.team_campaign != 'yes' and ct.date_deleted is NULL
         inner join user_tbl ut on ut.id=ct.user_id
        left outer join teams_tbl tt on tt.id=ct.team_id
        left outer join user_profile_tbl upt on upt.user_id=ut.id
        left join charity_tbl chat on chat.id=ct.charity_id
        left outer join countries_currency cct on cct.country_id = COALESCE(ct.country,chat.country,upt.country)
        where ct.user_id=? and ct.individual is not NULL and ct.individual!="challenge")
          UNION all
        (select ct.*,et.slug,et.id as entityid,et.noof_donors as noofdonors,
        (select COUNT(*) FROM code_tbl WHERE parent_id=ct.id) AS no_of_p2p,
        (select count(*) from teams_tbl where code_id=ct.id) AS no_of_team_fundraisers,
        et.noof_donations as donation,cct.currency_code,cct.currency_symbol,
        TRUNCATE((et.noof_donations/ct.goal)*100,2) as donation_progress,
        chat.name_tmp as charity_name,tt.team_name as team_name
        from entity_tbl et
        inner join code_tbl ct on ct.id=et.entity_id and et.entity_type='code' and ct.team_campaign != 'yes' and ct.date_deleted is NULL
        inner join user_tbl ut on ut.id=ct.user_id
        left outer join teams_tbl tt on tt.id=ct.team_id
        left outer join user_profile_tbl upt on upt.user_id=ut.id
        left join charity_tbl chat on chat.id=ct.charity_id
        left outer join countries_currency cct on cct.country_id = COALESCE(ct.country,chat.country,upt.country)
        where ct.id in(select code_id from code_admin_tbl where user_id=?) and ct.individual is not NULL and ct.individual!="challenge")
         order by date_created desc LIMIT ?]]>
    </sql-query>
    <sql-query id="inviteFundraiseContacts">
        <![CDATA[INSERT INTO code_share_tbl SET ?]]>
    </sql-query>
    <sql-query id="fundraiseaccountinfo">
        <![CDATA[INSERT INTO user_payment_tbl SET ?]]>
    </sql-query>
    <sql-query id="selectedDonorDetails">
        <![CDATA[SELECT upt.*, ct.country_code,count(cot.id) as noof_campaigns from payment_gateways_tbl upt
            left outer join user_profile_tbl u on u.user_id = upt.user_id and upt.charity_id is NULL
            left outer join countries_tbl ct on ct.id = u.country
left outer join code_tbl cot on cot.user_id=upt.user_id
           where upt.user_id=? AND upt.charity_id IS NULL]]>
    </sql-query>
    <sql-query id="getFundariserAccount">
        <![CDATA[select fat.account_id,fat.access_token,fat.account_status as wepay_account_state, u.id as charity_id,u.name as name_tmp,cct.currency_code as currency from  user_tbl u
        inner join user_profile_tbl up on up.user_id = u.id
        left outer join user_payment_tbl fat on fat.user_id = u.id
        left outer join countries_currency cct on cct.country_id= up.country
        where u.id=?]]>
    </sql-query>
    <sql-query id="getUserCountrySymbol">
        <![CDATA[SELECT cc.* from user_profile_tbl up
        inner join countries_currency cc on cc.country_id=up.country
         inner join user_tbl u on u.id=up.user_id
         where up.user_id=?]]>
    </sql-query>
    <sql-query id="getFundariserDetails">
        <![CDATA[SELECT u.name, u.id,up.profile_pic_url,et.slug,et.id as entity_id from user_tbl u
            inner join  user_profile_tbl up on up.user_id = u.id
            inner join entity_tbl et on et.entity_id = u.id and et.entity_type='user'
            where u.id=?]]>
    </sql-query>
    <sql-query id="userInfoandCurrenceSymbol">
        <![CDATA[SELECT u.*,up.*,cc.*,et.slug,upt.payment_gateway,cunt.name as country_name,cunc.currency_conversion
            from user_profile_tbl up
            inner join user_tbl u on u.id=up.user_id
            left outer join countries_currency cc on cc.country_id=up.country
            left outer join countries_tbl cunt on cunt.id= up.country
            left outer join currency_conversion cunc on cunc.country_currency = cc.currency_code
            inner join entity_tbl et on et.entity_id = up.user_id and et.entity_type='user'
            left outer join user_payment_tbl upt on upt.user_id = u.id where up.user_id=?]]>
    </sql-query>
    <sql-query id="insert_post_meta_data">
        <![CDATA[INSERT INTO metadata_tbl(post_id,metadata,code_json) values(?,?,?)]]>
    </sql-query>
    <sql-query id="userCodeData">
        <![CDATA[SELECT c.*,e.slug,e.id as entityid,cc.currency_code,cc.currency_symbol
        FROM code_tbl c
        inner join entity_tbl e on e.entity_id= c.id and e.entity_type='code'
        inner join user_tbl u on u.id= c.user_id
        inner join user_profile_tbl up on up.user_id=c.user_id
        left outer join countries_currency cc on cc.country_id = up.country
        WHERE c.id=?]]>
    </sql-query>
    <sql-query id="getFundraisersTrackInfo">
        <![CDATA[SELECT cs.* FROM code_share_tbl cs
        WHERE cs.code_id=? and cs.user_id!=?]]>
    </sql-query>
    <sql-query id="getCampaignDonations">
        <![CDATA[select a.name,b.amount,b.transaction_date,c.code_text,e.currency_symbol from user_tbl a inner join transaction_tbl b on a.id=b.user_id inner join code_tbl c on c.id=b.code_id inner join user_profile_tbl d on d.user_id=a.id inner join countries_currency e on e.country_id=d.country where c.id=?]]>
    </sql-query>
    <sql-query id="getFundraisersShareCount">
        <![CDATA[select ut.id, ut.name as name,
(count(case when trk.social_source='facebook' then trk.social_source end)) facebook,
(count(case when trk.social_source='twitter' then trk.social_source end)) twitter,
(count(case when trk.social_source='email' then trk.social_source end)) email,
(sum(case when trk.track_type='donation' and trk.reference_userid = trk.user_id then trk.amount end)) direct_donations,
(sum(case when trk.track_type='donation' and trk.reference_userid != trk.user_id then trk.amount end)) indirect_donations
from track_tbl trk inner join user_tbl ut on trk.reference_userid=ut.id
where trk.code_id=?
group by trk.reference_userid]]>
    </sql-query>
    <sql-query id="user_country_code">
        <![CDATA[select cct.country_code,cc.currency_code, cc.currency_symbol
                       from user_profile_tbl up
                   left outer join countries_tbl cct on cct.id= up.country
                   inner join countries_currency cc on cc.country_id=up.country

                   where up.user_id=?]]>
    </sql-query>
    <sql-query id="updateWepayAccessToken">
        <![CDATA[UPDATE user_tbl SET access_token=? WHERE id=?]]>
    </sql-query>
    <sql-query id="getCharitySymbol">
        <![CDATA[SELECT cc.* from charity_tbl ch
        inner join countries_currency cc on cc.country_id=ch.country
         where ch.id=?]]>
    </sql-query>
    <!-- Return the name of charity and the person who claimed it for pending message in new campaign flow -->
    <sql-query id="getCharityByCampaign">
        <![CDATA[SELECT ch.name_tmp as claim_charity_name, cc.first_name as claim_first_name, cc.last_name as claim_last_name, cc.email_address as claim_email_address,
        cc.date_created as claim_date_created
        from charity_tbl ch
        inner join charity_claim_tbl cc on cc.charity_id=ch.id
         where ch.id=?]]>
    </sql-query>
    <sql-query id="CampaignDonorDetailsFund">
        <!-- get list of donors for a fundraiser campaign page -->
        <![CDATA[select u.name,u.date_verified,u.active,up.profile_pic_url,t.id,t.amount, t.transaction_date,t.created_date,t.anonymous, t.offline,t.hide_amount,t.donor_comment,et.slug,
        cct.currency_code, cct.currency_symbol
        from user_tbl u
        inner join transaction_tbl t on t.user_id = u.id
        inner join user_profile_tbl up on up.user_id = u.id
        inner join entity_tbl et on et.entity_id = u.id and et.entity_type="user"
        inner join code_tbl ct on ct.id = t.code_id
        inner join user_profile_tbl upt on upt.user_id= if(ct.parent_user_id,ct.parent_user_id, ct.user_id)
        left outer join charity_tbl chat on chat.id = ct.charity_id
        left outer join countries_currency cct on cct.country_id = if(chat.country, chat.country, upt.country)
        where t.code_id=?
        order by t.transaction_date desc
        LIMIT 5 OFFSET ?]]>
    </sql-query>
    <sql-query id="userFollowingCampaignsFund">
        <![CDATA[select COALESCE(f.user_id,false) as is_following,
        ifnull(tctl.code_picture_url, ct.code_picture_url) as code_picture_url,
        ct.id as id,
        ct.id as code_id,
        ct.code_text as code_text,
        ct.title as title,
        ct.description as description,
        ct.city as city,
        stl.name as state,
        ct.suggested_donation,
        ct.type as code_type,
        ct.status as status,
        et.entity_type as type,
        et.noof_donors as donors,
        ct.charity_id as charity_id,
        up.profile_pic_url as background_pic_url,
        u.name as 'organization_name',
        et.noof_donations as 'donation',
        ct.goal,
        ct.end_date,
        et.id as entity_id,
        TRUNCATE((et.noof_donations/ct.goal)*100,2) as donation_progress,
        et.slug as campaignSlug,
        upt.payment_gateway,
        cct.currency_code,
        cct.currency_symbol,
        IFNULL(ct.parent_user_id, ct.user_id)  as fundraiser_userid,
         ct.id as fundraiser_codeid,
        'fundraiser' as fundraiser,
        ct.individual
        from follow_tbl ft
        INNER join  entity_tbl et on et.id=ft.entity_id
        Inner join  code_tbl ct on et.entity_id = ct.id and ct.individual="yes" and ct.status='published' and ct.end_date >= CURDATE() and ct.date_deleted is NULL
        Inner join user_tbl u on u.id = ifnull(ct.parent_user_id,ct.user_id)
        Inner join user_profile_tbl up on up.user_id = u.id
        left outer join countries_currency cct on cct.country_id = up.country
         left outer join states_tbl stl on stl.id = ct.state
        Inner join user_payment_tbl upt on upt.user_id = u.id
        left outer join team_campaigns_tbl tctl on tctl.team_code_id = ct.id
        left outer join follow_tbl f on f.user_id=? and f.entity_id=et.id
        where ft.user_id = ? and et.entity_type ="code"
        order by ct.id]]>
    </sql-query>
    <sql-query id="getUserFund">
        <![CDATA[SELECT  ut.name as name_tmp,cct.currency_code,cct.currency_symbol,stl.name as charityState,
        cut.name as countryName,up.* FROM user_profile_tbl up
        inner join user_tbl ut on ut.id=up.user_id
        left outer join countries_currency cct on cct.country_id= up.country
        left outer join countries_tbl cut on cut.id = up.country
        left outer join states_tbl stl on stl.id = up.state
        WHERE up.user_id=?]]>
    </sql-query>
    <sql-query id="getuserFollowingCamCountFund">
        <![CDATA[select count(*) as noofcamfollowing
        from follow_tbl ft
        inner join  entity_tbl et on et.id=ft.entity_id
        Inner join  code_tbl ct on et.entity_id = ct.id and ct.individual="yes"
        where ft.user_id = ? and et.entity_type ="code"
        order by ct.id]]>
    </sql-query>
    <sql-query id="saveCountryDetails">
        <![CDATA[UPDATE user_profile_tbl SET country=?,state=?,address_1=?,address_2=?,city=?,postal_code=? WHERE user_id=?]]>
    </sql-query>
    <sql-query id="accountInfo">
        <![CDATA[select * from user_payment_tbl where user_id=?]]>
    </sql-query>
    <sql-query id="donorDataSteps">
        <![CDATA[select up.postal_code,up.country,up.city,up.state,up.address_1,up.home_phone,uct.category_id,up.about_me,up.gender,up.relationship,up.religious_affiliation from user_profile_tbl up left outer join user_category_tbl uct on up.user_id=uct.user_id where up.user_id=?]]>
    </sql-query>
    <sql-query id="updateDonorAddress">
        <![CDATA[UPDATE user_profile_tbl SET address_1=?,address_2=? WHERE user_id=?]]>
    </sql-query>
    <sql-query id="updateDonorAddressDetail">
        <![CDATA[UPDATE user_profile_tbl SET address_1=? WHERE user_id=?]]>
    </sql-query>
    <sql-query id="updateDonorCity">
        <![CDATA[UPDATE user_profile_tbl SET city=? WHERE user_id=?]]>
    </sql-query>
    <sql-query id="updateDonorRelationship">
        <![CDATA[UPDATE user_profile_tbl SET relationship=? WHERE user_id=?]]>
    </sql-query>
    <sql-query id="updateDonorReligious">
        <![CDATA[UPDATE user_profile_tbl SET religious_affiliation=? WHERE user_id=?]]>
    </sql-query>
    <sql-query id="updateDonorZipcode">
        <![CDATA[UPDATE user_profile_tbl SET postal_code=? WHERE user_id=?]]>
    </sql-query>
    <sql-query id="updateDonorDesc">
        <![CDATA[UPDATE user_profile_tbl SET about_me=? WHERE user_id=?]]>
    </sql-query>
    <sql-query id="updateDonorPhone">
        <![CDATA[UPDATE user_profile_tbl SET home_phone=? WHERE user_id=?]]>
    </sql-query>
    <sql-query id="updateDonorCountry">
        <![CDATA[UPDATE user_profile_tbl SET country=? WHERE user_id=?]]>
    </sql-query>
    <sql-query id="updateDonorState">
        <![CDATA[UPDATE user_profile_tbl SET state=? WHERE user_id=?]]>
    </sql-query>
    <sql-query id="updateDonorGender">
        <![CDATA[UPDATE user_profile_tbl SET gender=? WHERE user_id=?]]>
    </sql-query>
    <sql-query id="getCountryNames">
        <![CDATA[SELECT id,name FROM countries_tbl]]>
    </sql-query>
    <sql-query id="countryInfo">
        <![CDATA[select * from countries_tbl where id=?]]>
    </sql-query>
    <sql-query id="getFundCampStatus">
        <![CDATA[select c.* from code_tbl c where c.id=?]]>
    </sql-query>
    <sql-query id="codeWithDonationsFund">
        <![CDATA[select u.name as username,u.email as useremail,upt.profile_pic_url,
        c.id as code_id,
        c.type as code_type,
        c.title as code_title,
        c.code_text  as code_text,
        c.code_picture_url as 'code_picture_url',
        c.description,
        c.goal,
        ot.profile_pic_url as 'charity_profile_url',
        ch.name as organization_name,
        c.suggested_donation as 'suggested_donation',
        c.user_id as charity_id,
        ch.name as 'charity_title',
        coalesce(sum(tb.amount),0) as donation,
        TRUNCATE((coalesce(sum(tb.amount),0)/c.goal)*100,2) as donation_progress,
        et.slug as campaignSlug,
        et2.slug as userSlug,
        et2.id as entity_id
        from code_tbl c
        left join transaction_tbl tb on tb.code_id= c.id
        inner join user_tbl ch on ch.id=c.user_id
        inner join user_profile_tbl ot on ot.user_id = ch.id
        inner join entity_tbl et on et.entity_id = c.id and et.entity_type ='code'
        inner join user_tbl u on u.id=?
        inner join user_profile_tbl upt on upt.user_id=u.id
        inner join entity_tbl et2 on et2.entity_id=u.id
        where c.id=?]]>
    </sql-query>
    <sql-query id="fundraiserDetails">
        <![CDATA[select cct.currency_symbol, cct.currency_code, uspt.payment_gateway,cunt.name as country_name,cunc.currency_conversion from code_tbl c
      inner join user_tbl u on u.id= if(c.parent_user_id, c.parent_user_id, c.user_id)
    inner join user_profile_tbl upt on upt.user_id= u.id
    left outer join user_payment_tbl uspt on uspt.user_id= u.id
    left outer join countries_currency cct on cct.country_id = upt.country
    left outer join countries_tbl cunt on cunt.id= upt.country
    left outer join currency_conversion cunc on cunc.country_currency = cct.currency_code
    where c.id= ?]]>
    </sql-query>
    <sql-query id="getFundraiseCampaigns">
        <!-- Public User Profile -->
        <![CDATA[select COALESCE(ft.user_id,false) as is_following,ct.*,cct.currency_code,cct.currency_symbol, cet.noof_donations as donation
,TRUNCATE((cet.noof_donations/ct.goal)*100,2) as donation_progress,chat.name_tmp as charity_name,tt.team_name as team_name, et.noof_donors as noofdonors,
cet.slug as campaignSlug
from entity_tbl et
inner join code_tbl ct on ct.id=et.entity_id and et.entity_type='code' and ct.team_campaign != "yes"
inner join user_tbl ut on ut.id=ct.user_id
left outer join teams_tbl tt on tt.id=ct.team_id
inner join user_profile_tbl upt on upt.user_id=ut.id
inner join entity_tbl cet on cet.entity_id=ct.id and cet.entity_type="code"
left outer join follow_tbl ft on ft.user_id=? and ft.entity_id=cet.id
left join charity_tbl chat on chat.id=ct.charity_id
left outer join countries_currency cct on cct.country_id = if(chat.country,chat.country,upt.country)
where ct.user_id =? and ct.individual is not null and ct.status='published' and ct.end_date >= CURDATE()
union all
select COALESCE(ft.user_id,false) as is_following,ct.*,cct.currency_code,cct.currency_symbol, cet.noof_donations as donation
,TRUNCATE((cet.noof_donations/ct.goal)*100,2) as donation_progress,chat.name_tmp as charity_name,tt.team_name as team_name, et.noof_donors as noofdonors,
cet.slug as campaignSlug
from entity_tbl et
inner join code_tbl ct on ct.id=et.entity_id and et.entity_type='code' and ct.team_campaign != "yes"
inner join user_tbl ut on ut.id=ct.user_id
left outer join teams_tbl tt on tt.id=ct.team_id
inner join user_profile_tbl upt on upt.user_id=ut.id
inner join entity_tbl cet on cet.entity_id=ct.id and cet.entity_type="code"
left outer join follow_tbl ft on ft.user_id=? and ft.entity_id=cet.id
left join charity_tbl chat on chat.id=ct.charity_id
left outer join countries_currency cct on cct.country_id = if(chat.country,chat.country,upt.country)
where ct.id in(select code_id from code_admin_tbl where user_id=?) and ct.individual is not null and ct.status='published' and ct.end_date >= CURDATE()]]>
    </sql-query>
    <sql-query id="findCampaign">
        <![CDATA[select c.id as campaignid from entity_tbl e
          inner join code_tbl c on c.id= e.entity_id
          where e.slug=? and e.entity_type='code']]>
    </sql-query>
    <sql-query id="staffCampaignCreation">
        <![CDATA[insert into campaign_promotions SET ?]]>
    </sql-query>
    <sql-query id="checkPromotionCampaign">
        <![CDATA[select * from campaign_promotions where code_id=? and promotion_type=?]]>
    </sql-query>
    <sql-query id="getPromotionCampaigns">
        <![CDATA[select * from campaign_promotions]]>
    </sql-query>
    <sql-query id="donorCurrencyConversion">
        <![CDATA[select cct.currency_conversion as campaignCurrencyVal, cc.currency_conversion as userCurrencyVal  from currency_conversion cc inner join currency_conversion cct on cct.country_currency = ? where cc.country_currency=?]]>
    </sql-query>
    <sql-query id="currencyConversionData">
        <![CDATA[select ccn.*,ccnt.currency_conversion as campaignCurrency from countries_currency cc
              inner join currency_conversion ccn on ccn.country_currency = cc.currency_code
              inner join currency_conversion ccnt on ccnt.country_currency =?
              where cc.country_id =?
              ]]>
    </sql-query>
    <sql-query id="promotionCampaignsData">
        <![CDATA[select COALESCE(f.user_id,false) as is_following,c.*,e.id as entityID,
    e.slug as campaignSlug,
    e.noof_donors,
    e.noof_donations as donation,
    TRUNCATE((e.noof_donations/c.goal)*100,2) as donation_progress,
    u.name,
    states_tbl.name as state,
    ww_categories_tbl.name as category,
    cat.name as individual_category,
    ct.payment_gateway,
    ct.name_tmp as organization_name,
    usercct.currency_code as user_currency_code,
    usercct.currency_symbol as user_currency_symbol,
    cct.currency_code,
    cct.currency_symbol
    from campaign_promotions pro
    inner join code_tbl c on pro.code_id=c.id
    inner join entity_tbl e on c.id=e.entity_id and e.entity_type='code'
    inner join user_tbl u on u.id= c.user_id
    inner join user_profile_tbl up on up.user_id = u.id
    left outer join countries_currency usercct on usercct.country_id = up.country
    left outer join ww_code_category_tbl cocat on cocat.code_id=c.id
    left outer join ww_categories_tbl cat on cat.id = cocat.id
    left outer join charity_tbl ct on ct.id= c.charity_id
    left outer join organization_tbl ot on ot.id = ct.organization_id
    left outer join transaction_tbl tb on tb.code_id= c.id
    left outer join follow_tbl f on f.user_id=? and e.id=f.entity_id
    left outer join countries_currency cct on cct.country_id = ct.country
    left outer join states_tbl on states_tbl.id = ct.state
    left outer join ww_categories_tbl on ww_categories_tbl.id = c.category_id
    where c.status = 'published'
    Group by c.id
    order by c.title]]>
    </sql-query>
    <sql-query id="createEvent">
        <![CDATA[INSERT INTO event_tbl SET ?]]>
    </sql-query>
    <sql-query id="getEventsList">
        <![CDATA[select * from event_tbl where creater_id=? and date_deleted is null LIMIT ?]]>
    </sql-query>
    <sql-query id="eventCategories">
        <![CDATA[INSERT INTO event_categories_tbl(event_id,category_group) values(?,?)]]>
    </sql-query>
    <sql-query id="eventTickets">
        <![CDATA[INSERT INTO event_ticket_tbl SET ?]]>
    </sql-query>
    <sql-query id="eventVolunteers">
        <![CDATA[INSERT INTO event_shifts_tbl SET ?]]>
    </sql-query>
    <sql-query id="getEventInfo">
        <![CDATA[select evt.*,et.slug as slug, et.volunteers_filled,et.volunteers_required,et.id as entity_id,et.entity_type
        from event_tbl evt
        inner join entity_tbl et on et.entity_id=evt.id and et.entity_type="event"
        where evt.id=?]]>
    </sql-query>
    <sql-query id="getEventCreaterInfo">
        <![CDATA[select
       et.slug as slug,
       et.id as entity_id,
       ut.id as id,
        ut.name as name,
        upt.about_me as description,
       upt.profile_pic_url as profile_pic_url,
       upat.payment_gateway as payment_gateway,
       cct.currency_code as currency_code,
       cct.currency_symbol as currency_symbol
        from event_tbl evt
        left outer join entity_tbl et on et.entity_id=evt.creater_id and et.entity_type = evt.creater_user_type
        left outer join user_tbl ut on ut.id=et.entity_id
        left outer join user_profile_tbl upt on upt.user_id=ut.id
        left outer join user_payment_tbl upat on upat.user_id=ut.id
        left outer join countries_currency cct on cct.country_id=upt.country
        where evt.id=? and evt.creater_user_type = "user"
        union all
        select
        ct.id as id,
        et.slug as slug,
        et.id as entity_id,
        ct.name_tmp as name,
        ot.full_description as description,
        ot.profile_pic_url as profile_pic_url,
        ct.payment_gateway as payment_gateway,
        cct.currency_code as currency_code,
       cct.currency_symbol as currency_symbol
        from event_tbl evt
        left outer join entity_tbl et on et.entity_id=evt.creater_id and et.entity_type = evt.creater_user_type
        left outer join charity_tbl ct on ct.id=et.entity_id
        left outer join organization_tbl ot on ot.id=ct.organization_id
        left outer join countries_currency cct on cct.country_id=ct.country
        where evt.id=? and evt.creater_user_type = "charity"]]>
    </sql-query>
    <sql-query id="getEventTicketsList">
        <![CDATA[select ett.*,evt.event_name,evt.event_text
        from event_tbl evt
        inner join event_ticket_tbl ett on ett.event_id=evt.id
        where evt.id=?]]>
    </sql-query>
    <sql-query id="getEventShiftsList">
        <![CDATA[select est.*,evt.event_name,evt.event_text
        from event_tbl evt
        inner join event_shifts_tbl est on est.event_id=evt.id
        where evt.id=?]]>
    </sql-query>
    <sql-query id="getUserEntity">
        <![CDATA[SELECT id FROM entity_tbl where entity_type='user' and entity_id=?]]>
    </sql-query>
    <sql-query id="getCharityEntity">
        <![CDATA[SELECT id,entity_type FROM entity_tbl where entity_type='charity' and entity_id=?]]>
    </sql-query>
    <sql-query id="ticketSignup">
        <![CDATA[INSERT INTO signup_tbl SET ?]]>
    </sql-query>
    <sql-query id="eventGuestInfo">
        <![CDATA[INSERT INTO user_guest_tbl SET ?]]>
    </sql-query>
    <sql-query id="updateUservolunteersCount">
        <![CDATA[update entity_tbl set volunteers_filled = volunteers_filled +? where entity_id=? and entity_type="event"]]>
    </sql-query>
    <sql-query id="updateUserQuentitySold">
        <![CDATA[update event_ticket_tbl set quantity_sold = quantity_sold +? where id=?]]>
    </sql-query>
    <sql-query id="updateUserVolunteerSignedup">
        <![CDATA[update event_shifts_tbl set volunteers_filled = volunteers_filled +? where id=?]]>
    </sql-query>
    <sql-query id="getEventCreaterData">
        <![CDATA[select
                upat.account_id as account_id,
                upat.access_token as access_token,
                upat.account_status as wepay_account_state,
                ut.id as charity_id,
                ut.name as name_tmp,
                cct.currency_code as currency
                from user_tbl ut
                inner join user_profile_tbl up on up.user_id = ut.id
                left outer join user_payment_tbl upat on upat.user_id = ut.id
                left outer join countries_currency cct on cct.country_id= up.country
                where ut.id=?
                union all
                select
                ch.account_id as account_id,
                ch.access_token as access_token,
                ch.wepay_account_state as wepay_account_state,
                ch.id as charity_id,
                ch.name_tmp as name_tmp,
                cct.currency_code as currency
                from charity_tbl ch
                left outer join countries_currency cct on cct.country_id= ch.country
                where ch.id=?]]>
    </sql-query>
    <sql-query id="saveEventTransaction">
        <![CDATA[insert into event_transaction_tbl SET ?]]>
    </sql-query>
    <sql-query id="eventParticipantsList">
        <![CDATA[select ut.name,upt.profile_pic_url,et.slug,ugt.date_signup,ut.active,upt.about_me
                from user_guest_tbl ugt
                left outer join user_tbl ut on ut.id=ugt.member_id
                left outer join user_profile_tbl upt on upt.user_id=ut.id
                left outer join entity_tbl et on et.entity_id=ut.id and et.entity_type ='user'
                where ugt.event_id=? and ugt.type="attendee"
                union all
                select ut.name,upt.profile_pic_url,et.slug,st.date_signup,ut.active,upt.about_me
                from signup_tbl st
                left outer join user_tbl ut on ut.id=st.user_id
                left outer join user_profile_tbl upt on upt.user_id=ut.id
                left outer join entity_tbl et on et.entity_id=ut.id and et.entity_type ='user'
                where st.event_id=? and st.type="attendee"]]>
    </sql-query>
    <sql-query id="getDonorCurrencyData">
        <![CDATA[select cunc.*,cc.currency_code,cc.currency_symbol from user_profile_tbl up
            inner join countries_currency cc on cc.country_id= up.country
            inner join currency_conversion cunc on cunc.country_currency = cc.currency_code
            where up.user_id =?]]>
    </sql-query>
    <sql-query id="getCharityCategories">
        <![CDATA[select ct.*,cact.category_id, chct.group_title from charity_tbl ct
          left outer join  category_charity_tbl cact on cact.charity_id = ct.id
          left outer join  charity_category_tbl chct on chct.id = cact.category_id
          where ct.id=?]]>
    </sql-query>
    <sql-query id="addFundraisegiving">
        <![CDATA[insert into giving_levels_tbl set ?]]>
    </sql-query>
    <sql-query id="getgivinglevelforfundraise">
        <![CDATA[select * from giving_levels_tbl where code_id=? ]]>
    </sql-query>
    <sql-query id="getSingleGivingLevel">
        <![CDATA[select * from giving_levels_tbl where id=? ]]>
    </sql-query>
    <sql-query id="deleteGivingLevel">
        <![CDATA[DELETE FROM giving_levels_tbl WHERE id = ?]]>
    </sql-query>
    <sql-query id="updateFundraisegiving">
        <![CDATA[UPDATE giving_levels_tbl set ? WHERE id=? AND code_id=?]]>
    </sql-query>
    <sql-query id="inviteChallengeContacts">
        <![CDATA[INSERT INTO challenge_share_tbl SET ?]]>
    </sql-query>
    <sql-query id="checkChallege">
        <![CDATA[select * from code_tbl where user_id=? and parent_id=? and individual="challenge"]]>
    </sql-query>
    <sql-query id="charityRaisedDonations">
        <![CDATA[select ot.title, e.slug,c.id as charity_id,
                coalesce(sum(tb.amount),0) as donations,
               TRUNCATE((coalesce(sum(tb.amount),0)/ct.goal)*100,2) as donation_progress,
               ct.goal, cct.currency_code, cct.currency_symbol, cut.name, cut.country_code
              from charity_tbl c
            inner join entity_tbl e on e.entity_id = c.id and e.entity_type ='charity'
            inner join organization_tbl ot on ot.id = c.organization_id
            inner join code_tbl ct on ct.charity_id = c.id
            left join transaction_tbl tb on tb.code_id= ct.id
            left outer join countries_currency cct on cct.country_id = c.country
            left outer join countries_tbl cut on cut.id = c.country
            where e.slug =?
            group by ct.id]]>
    </sql-query>
    <sql-query id="getEventShiftVolunteers">
        <![CDATA[select ut.name,upt.profile_pic_url,et.slug,ugt.date_signup,ut.active,upt.about_me
            from user_guest_tbl ugt
            left outer join user_tbl ut on ut.id=ugt.member_id
            left outer join user_profile_tbl upt on upt.user_id=ut.id
            left outer join entity_tbl et on et.entity_id=ut.id and et.entity_type ='user'
            where ugt.shift_id=? and ugt.type="volunteer"
            union all
            select ut.name,upt.profile_pic_url,et.slug,st.date_signup,ut.active,upt.about_me
            from signup_tbl st
            left outer join user_tbl ut on ut.id=st.user_id
            left outer join user_profile_tbl upt on upt.user_id=ut.id
            left outer join entity_tbl et on et.entity_id=ut.id and et.entity_type ='user'
            where st.ticket_or_shift_id=? and st.type="volunteer"]]>
    </sql-query>
    <sql-query id="getEventDataById">
        <![CDATA[select * from event_tbl where id=? ]]>
    </sql-query>
    <sql-query id="getEventVolunteers">
        <![CDATA[SELECT e.*,es.* FROM event_tbl e INNER JOIN event_shifts_tbl es ON es.event_id = e.id
        WHERE e.id=? and es.date_deleted is null]]>
    </sql-query>
    <sql-query id="saveDonorLocation">
        <![CDATA[UPDATE user_profile_tbl SET country=?,state=?,city=?,postal_code=? where user_id=?]]>
    </sql-query>
    <sql-query id="getEventTickets">
        <![CDATA[SELECT e.*,es.* FROM event_tbl e INNER JOIN event_shifts_tbl es ON es.event_id = e.id
        WHERE e.id=? and es.date_deleted is null]]>
    </sql-query>
    <sql-query id="getVolunteerTickets">
        <![CDATA[SELECT e.*,et.* FROM event_tbl e
        Inner join event_ticket_tbl et on et.event_id = e.id
        WHERE e.id=? and et.date_deleted is null]]>
    </sql-query>
    <sql-query id="updateTickets">
        <![CDATA[UPDATE event_ticket_tbl SET ticket_name=?,quantity_required=?,prise=?,start_date=?,start_time=?,end_date=?,end_time=?,passfees=?,quantity_sold=? WHERE id=?]]>
    </sql-query>
    <sql-query id="updatevolunteers">
        <![CDATA[UPDATE event_shifts_tbl SET shift_name=?,volunteers_required=?,start_date=?,
        start_time=?,end_time=?,volunteers_filled=?  WHERE id=?]]>
    </sql-query>
    <sql-query id="insertCustomData">
        <![CDATA[INSERT INTO custom_field_tbl SET ?]]>
    </sql-query>
    <sql-query id="getcustomfield">
        <![CDATA[select * from custom_field_tbl]]>
    </sql-query>
    <sql-query id="eventDataInsert">
        <![CDATA[INSERT INTO event_customfield_tbl SET ?]]>
    </sql-query>
    <sql-query id="getCustomSettingsdata">
        <![CDATA[select ect.*,cft.* from event_customfield_tbl ect
right join custom_field_tbl  cft on ect.field_id=cft.id and ect.event_id=?
where cft.user_profile='yes' or cft.user_profile='no']]>
    </sql-query>
    <sql-query id="getUserCoordinator">
        <![CDATA[select et.*,ut.* from entity_tbl et
inner join user_tbl ut on et.entity_id=ut.id
where et.id=? ]]>
    </sql-query>
    <sql-query id="updateEventData">
        <![CDATA[UPDATE event_tbl SET event_name=? ,start_date=?,end_date=?,organizer=?,location=?,event_text=? WHERE id=? ]]>
    </sql-query>
    <sql-query id="deleteParticularTicket">
        <![CDATA[UPDATE event_ticket_tbl SET date_deleted=now() WHERE id=? ]]>
    </sql-query>
    <sql-query id="deleteParticularAttendee">
        <![CDATA[UPDATE event_shifts_tbl SET date_deleted=now() WHERE id=? ]]>
    </sql-query>
    <sql-query id="getAttendees">
        <![CDATA[select st.*,et.id as ticket_id,ett.slug as userslug,et.*,u.name as                 fullname,up.profile_pic_url as profile_pic_url
             from signup_tbl st
             inner join user_tbl u on u.id=st.user_id
             inner join user_profile_tbl up on up.user_id=st.user_id
             inner join event_ticket_tbl et on et.id=st.ticket_or_shift_id
             inner join entity_tbl ett on ett.entity_id=st.user_id and ett.entity_type ='user'
            where st.event_id=? and st.type=? ]]>
    </sql-query>
    <sql-query id="getVolunteers">
        <![CDATA[select st.*,et.id as shift_id,ett.slug as userslug,et.*,u.name as fullname,
                    u.email as email_address,
                    up.home_phone as phone_number,
                    up.profile_pic_url as profile_pic_url
                     from signup_tbl st
                     inner join user_tbl u on u.id=st.user_id
                     inner join user_profile_tbl up on up.user_id=st.user_id
                    inner join event_shifts_tbl et on et.id=st.ticket_or_shift_id
                    inner join entity_tbl ett on ett.entity_id=st.user_id and ett.entity_type ='user'
                    where st.event_id=? and st.type=? ]]>
    </sql-query>
    <sql-query id="getCountryCode">
        <![CDATA[select id from countries_tbl where country_code=?]]>
    </sql-query>
    <sql-query id="getStateCode">
        <![CDATA[SELECT st.id FROM states_tbl st where st.name=? and st.country_id=?]]>
    </sql-query>
    <sql-query id="checkCountryStatus">
        <![CDATA[SELECT * FROM countries_tbl where country_code=? and data_status_code=1]]>
    </sql-query>
    <sql-query id="saveDonorLocationWithOutState">
        <![CDATA[UPDATE user_profile_tbl SET country=?,city=?,postal_code=? where user_id=?]]>
    </sql-query>
    <sql-query id="getCharityDefaultCampaign">
        <![CDATA[select ct.id,ct.title,et.slug from charity_tbl ch
                inner join code_tbl ct on ct.charity_id=ch.id and ct.charity_default="yes"
                inner join entity_tbl et on et.entity_id=ch.id and et.entity_type="charity"
                where et.slug=? AND ct.date_deleted IS NULL]]>
    </sql-query>
    <sql-query id="getOrgDetails">
        <![CDATA[select ch.*, org.*,st.name as orgstate ,ct.name as orgcountry from charity_tbl ch
inner join organization_tbl org on org.id=ch.organization_id
inner join states_tbl st  on st.id=ch.state
inner join countries_tbl ct on ct.id=ch.country
where ch.id=? ]]>
    </sql-query>
    <sql-query id="discoverFundCodes">
        <!-- Discover Campaigns (fundraisers created by users) -->
        <![CDATA[
        (   select COALESCE(f.user_id,false) as is_following,c.id,c.title as name,o.profile_pic_url as org_pic_url,o.background_pic_url,ch.name as campaign_creator,c.beneficiary, c.end_date, c.type, c.code_text as code_text,e.entity_type,e.noof_donors,c.code_picture_url as profile_pic_url,c.state as state,
        c.city as city,
        c.user_id,
        c.suggested_donation,
        c.code_text as wecode,
        c.goal as goal,
        c.individual,chat.name_tmp as organization_name,
        e.entity_id as entityid,c.description,e.nooffollowers,e.slug,
        coalesce(sum(tb.amount),0) as donation,
        TRUNCATE((coalesce(sum(tb.amount),0)/c.goal)*100,2) as donation_progress,
                up.payment_gateway,
                cct.currency_code,
                cct.currency_symbol
        from code_tbl c
        inner join entity_tbl e on e.entity_id=c.id
        left outer join transaction_tbl tb on tb.code_id= c.id
        left join charity_tbl chat on chat.id=c.charity_id
        Inner join user_tbl ch on ch.id= c.user_id
        Inner join user_profile_tbl o on o.user_id = ch.id
        Inner join user_payment_tbl up on up.user_id=ch.id
        left outer join follow_tbl f on f.user_id=? and f.entity_id=e.id
        left outer join countries_currency cct on cct.country_id = o.country
        where e.entity_type='code' and c.individual = 'yes' and c.status="published" and c.code_text like ? group by c.id LIMIT 5 OFFSET ? )
        ]]>
    </sql-query>
    <sql-query id="getCurrencysymbol">
        <![CDATA[select cct.*,c.country_code from countries_currency cct
  inner join countries_tbl c on c.id=cct.country_id
   where cct.country_id= ?]]>
    </sql-query>
    <sql-query id="getclaimdata">
        <![CDATA[select * from charity_claim_tbl  where id=?]]>
    </sql-query>
    <!-- teamAdmin object on campaign page for team campaigns now called promoter campaigns -->
    <sql-query id="teamCampaignAdmin">
        <![CDATA[    select tc.team_name, tc.code_picture_url, e.slug, u.name,
    up.profile_pic_url, up.background_pic_url,
    (select count(*) from code_tbl c where c.user_id =u.id and c.individual is not null and c.status!='draft') as campaigns, e.noofposts, e.nooffollowers,
    ec.slug as mainCampaignSlug,ct.title as mainCampaignName
    from team_campaigns_tbl tc
        inner join team_campaign_members_tbl tcm on tcm.code_id = tc.team_code_id and tcm.created_user ='yes'
        inner join user_tbl u on u.id= tcm.user_id
        inner join user_profile_tbl up on up.user_id = u.id
        inner join entity_tbl e on e.entity_id = u.id and e.entity_type ='user'
        left outer join entity_tbl ec on ec.entity_id = tc.original_code_id and ec.entity_type ='code'
        left outer join code_tbl ct on ct.id=ec.entity_id and ec.entity_type="code"
where team_code_id =?]]>
    </sql-query>
    <!-- data for additionalData for the overview tab of managing a campaign -->
    <sql-query id="augmentCampaignData">
        <![CDATA[SELECT
        TRUNCATE((e.noof_donations/c.goal)*100,2) as donation_progress, ch.name_tmp as charity,
        SUM(CASE WHEN tt.anonymous = 'no' THEN tt.amount ELSE 0 END) AS regular,
        SUM(CASE WHEN tt.anonymous = 'yes' THEN tt.amount ELSE 0 END) AS anonymous
        from code_tbl c
        inner join transaction_tbl tt on tt.code_id=c.id
        inner join entity_tbl e on c.id=e.entity_id and e.entity_type='code'
        left join charity_tbl ch on c.charity_id = ch.id
        where c.id=? ]]>
    </sql-query>
    <!-- data for transactionData for the overview tab of managing a campaign -->
    <sql-query id="getCampaignAnalytics">
        <![CDATA[SELECT tt.amount, tt.hide_amount, tt.anonymous, tt.transaction_date,
        u.name, u.email
        FROM transaction_tbl tt
        inner join user_tbl u on u.id = tt.user_id
        where tt.code_id=?
        group by tt.id
        order by tt.transaction_date asc]]>
    </sql-query>
    <!-- teamCampaigns object on campaign page for team campaigns -->
    <sql-query id="teamCampaigns">
        <![CDATA[select COALESCE(f.user_id,false) as is_following,c.*,e.id as entityID,
        (select slug from entity_tbl eee where eee.entity_id=c.id and eee.entity_type='code') as campaignSlug,
        coalesce(sum(tb.amount),0) as donation,
        TRUNCATE((coalesce(sum(tb.amount),0)/c.goal)*100,2) as donation_progress,
        ct.payment_gateway,
        IFNULL(ct.name_tmp,ch.name) as organization_name,
        cct.currency_code,
        cct.currency_symbol,
        tct.team_name,
        tct.code_picture_url as team_picture_url,
        e.noof_donors,
        (select name from user_tbl where id =c.user_id) as campaign_creator,
        IFNULL(c.charity_id,if(c.parent_user_id,c.parent_user_id,c.user_id))  as fundraiser_userid,
        IFNULL(c.charity_id,c.id) as fundraiser_codeid,
        IFNULL(c.charity_id,'fundraiser') as fundraiser,
        c.individual
        from code_tbl c
        left join transaction_tbl tb on tb.code_id= c.id
        inner join entity_tbl e on c.id=e.entity_id and e.entity_type='code' and e.date_deleted is NULL
        inner join team_campaigns_tbl tct on tct.team_code_id = c.id
        left outer join charity_tbl ct on ct.id= c.charity_id
        left outer join organization_tbl ot on ot.id = ct.organization_id
        left outer join user_tbl ch on ch.id= if(c.parent_user_id, c.parent_user_id, c.user_id)
        left outer join user_profile_tbl upt on upt.user_id = ch.id
        left outer join user_payment_tbl up on up.user_id=ch.id
        left outer join follow_tbl f on f.user_id=? and e.id=f.entity_id
        left outer join countries_currency cct on cct.country_id = if(ct.country,ct.country ,upt.country)
        where c.id in (select team_code_id from team_campaigns_tbl where original_code_id=?) and c.status = 'published' and c.end_date >= CURDATE()
        Group by c.id
        order by donation desc, c.title asc]]>
    </sql-query>
    <sql-query id="donorTeamCampaigns3">
        <![CDATA[select COALESCE(f.user_id,false) as is_following,
        TIMESTAMPDIFF(day,now(),c.end_date) as days_togo,
        (select ct.status from code_tbl ct where ct.id=c.parent_id) as maincampstatus,
        tcam.team_name,
        tcam.code_picture_url as team_picture_url,
        c.*,
        cot.title as main_campaign_name,
        e.id as entityID,
        (select slug from entity_tbl eee where eee.entity_id=c.id and eee.entity_type='code') as campaignSlug,
        e.noof_donations as donation,
        TRUNCATE((e.noof_donations/c.goal)*100,2) as donation_progress,
        ct.payment_gateway,
        IFNULL(ct.name_tmp,ch.name) as organization_name,
        cct.currency_code,
        cct.currency_symbol,
        e.noof_donors,
        IFNULL(c.charity_id, if(c.parent_user_id, c.parent_user_id,c.user_id))  as fundraiser_userid,
        IFNULL(c.charity_id,c.id) as fundraiser_codeid,
        IFNULL(c.charity_id,'fundraiser') as fundraiser,
        c.individual,
        (select name from user_tbl where id = c.user_id) as campaign_creator
        from code_tbl c
        inner join entity_tbl e on c.id=e.entity_id and e.entity_type='code'
        inner join team_campaigns_tbl tcam on tcam.team_code_id = c.id
        left outer join charity_tbl ct on ct.id= c.charity_id
        left outer join organization_tbl ot on ot.id = ct.organization_id
        left join transaction_tbl tb on tb.code_id= c.id
        inner join code_tbl cot on cot.id=tcam.original_code_id
        left outer join user_tbl ch on ch.id= if(c.parent_user_id, c.parent_user_id, c.user_id)
        left outer join user_profile_tbl upt on upt.user_id = ch.id
        left outer join user_payment_tbl up on up.user_id=ch.id
        left outer join follow_tbl f on f.user_id=? and e.id=f.entity_id
        left outer join countries_currency cct on cct.country_id = if(ct.country,ct.country, upt.country)
        where c.id in (select * from(select tt.team_code_id from team_campaign_members_tbl tct
                        inner join team_campaigns_tbl tt on tt.team_code_id = tct.code_id
                        where tct.user_id=? and tct.created_user = 'yes' limit ? ) as ttcodeid ) and c.date_deleted is null
        Group by c.id
        order by tcam.created_date desc]]>
    </sql-query>
    <sql-query id="donorTeamCampaigns4">
        <![CDATA[select COALESCE(f.user_id,false) as is_following,
        TIMESTAMPDIFF(day,now(),c.end_date) as days_togo,
        tcam.team_name,
        tcam.code_picture_url as team_picture_url,
        c.*,
        e.id as entityID,
        (select slug from entity_tbl eee where eee.entity_id=c.id and eee.entity_type='code') as campaignSlug,
        e.noof_donations as donation,
        TRUNCATE((e.noof_donations/c.goal)*100,2) as donation_progress,
        ct.payment_gateway,
        IFNULL(ct.name_tmp,ch.name) as organization_name,
        cct.currency_code,
        cct.currency_symbol,
        e.noof_donors,
        IFNULL(c.charity_id, if(c.parent_user_id, c.parent_user_id,c.user_id))  as fundraiser_userid,
        IFNULL(c.charity_id,c.id) as fundraiser_codeid,
        IFNULL(c.charity_id,'fundraiser') as fundraiser,
        c.individual,
        (select name from user_tbl where id = c.user_id) as campaign_creator
        from code_tbl c
        inner join entity_tbl e on c.id=e.entity_id and e.entity_type='code'
        inner join team_campaigns_tbl tcam on tcam.team_code_id = c.id
        left outer join charity_tbl ct on ct.id= c.charity_id
        left outer join organization_tbl ot on ot.id = ct.organization_id
        left join transaction_tbl tb on tb.code_id= c.id
        left outer join user_tbl ch on ch.id= if(c.parent_user_id, c.parent_user_id, c.user_id)
        left outer join user_profile_tbl upt on upt.user_id = ch.id
        left outer join user_payment_tbl up on up.user_id=ch.id
        left outer join follow_tbl f on f.user_id=? and e.id=f.entity_id
        left outer join countries_currency cct on cct.country_id = if(ct.country,ct.country, upt.country)
        where c.id in (select * from(select tt.team_code_id from team_campaign_members_tbl tct
                        inner join team_campaigns_tbl tt on tt.team_code_id = tct.code_id
                        where tct.user_id=? and tct.created_user = 'yes' limit ? ) as ttcodeid ) and c.status = 'published' and c.end_date >= CURDATE()
        Group by c.id
        order by tcam.team_name]]>
    </sql-query>
    <sql-query id="getdonorTeamCampaignsUnique">
        <![CDATA[select COALESCE(f.user_id,false) as is_following,
        TIMESTAMPDIFF(day,now(),c.end_date) as days_togo,
        tcam.team_name,
        tcam.code_picture_url as team_picture_url,
        c.*,
        e.id as entityID,
        (select slug from entity_tbl eee where eee.entity_id=c.id and eee.entity_type='code') as campaignSlug,
        e.noof_donations as donation,
        TRUNCATE((e.noof_donations/c.goal)*100,2) as donation_progress,
        ct.payment_gateway,
        IFNULL(ct.name_tmp,ch.name) as organization_name,
        cct.currency_code,
        cct.currency_symbol,
        e.noof_donors,
        IFNULL(c.charity_id, if(c.parent_user_id, c.parent_user_id,c.user_id))  as fundraiser_userid,
        IFNULL(c.charity_id,c.id) as fundraiser_codeid,
        IFNULL(c.charity_id,'fundraiser') as fundraiser,
        c.individual
        from code_tbl c
        inner join entity_tbl e on c.id=e.entity_id and e.entity_type='code'
        inner join team_campaigns_tbl tcam on tcam.team_code_id = c.id
        left outer join charity_tbl ct on ct.id= c.charity_id
        left outer join organization_tbl ot on ot.id = ct.organization_id
        left join transaction_tbl tb on tb.code_id= c.id
        left outer join user_tbl ch on ch.id= if(c.parent_user_id, c.parent_user_id, c.user_id)
        left outer join user_profile_tbl upt on upt.user_id = ch.id
        left outer join user_payment_tbl up on up.user_id=ch.id
        left outer join follow_tbl f on f.user_id=? and e.id=f.entity_id
        left outer join countries_currency cct on cct.country_id = if(ct.country,ct.country, upt.country)
        where c.id = ?
        Group by c.id
        order by tcam.team_name]]>
    </sql-query>
    <!-- Edit peer to peer campaigns (team campaigsns promoter campaigns) -->
    <sql-query id="teamCampainInformation">
        <![CDATA[select COALESCE(f.user_id,false) as is_following,c.*,e.id as entityid,e.nooffollowers,e.noofposts,e.following_users
      ,e.following_charities,e.following_codes,e.noof_donations,e.noof_donors,stl.name as state,
      e.slug as campaignSlug,
      e.slug,
      cc.payment_gateway,
      IFNULL(cc.name_tmp, ch.name) as organization_name,
      pcode.goal as 'parent_goal',
      TRUNCATE((eref.noof_donations/pcode.goal)*100,2) as parent_donation_progress,
      eref.noof_donations as 'parent_donations',
      cct.currency_code,
      cct.currency_symbol,
      tct.team_name,
      tct.code_picture_url as team_picture_url,
      coalesce(sum(tb.amount),0) as donation,
      TRUNCATE((coalesce(sum(tb.amount),0)/c.goal)*100,2) as donation_progress,
      IFNULL(c.charity_id,c.user_id)  as fundraiser_userid,
      IFNULL(c.charity_id,c.id) as fundraiser_codeid,
      IFNULL(c.charity_id,'fundraiser') as fundraiser,
      c.individual,pcode.title as shortname,
      pcode.code_picture_url as maincamppic,
      eref.slug as original_code_slug
      from code_tbl c inner join entity_tbl e on c.id=e.entity_id and e.entity_type='code'
      inner join team_campaigns_tbl tct on tct.team_code_id = c.id
      left outer join entity_tbl eref on eref.entity_id =tct.original_code_id and eref.entity_type ='code'
      left outer join code_tbl pcode on tct.original_code_id=pcode.id
      left outer join charity_tbl cc on cc.id = c.charity_id
      left outer join user_tbl ch on ch.id= if(c.parent_user_id,c.parent_user_id, c.user_id)
      left outer join user_profile_tbl upt on upt.user_id = ch.id
      left outer join user_payment_tbl up on up.user_id=ch.id
      left outer join countries_currency cct on cct.country_id = if(cc.country,cc.country,upt.country)
      left join transaction_tbl tb on tb.code_id= c.id
      left outer join states_tbl stl on c.state = stl.id
      left outer join follow_tbl f on f.user_id=? and e.id=f.entity_id where c.id=?
      Group by c.id]]>
    </sql-query>
    <sql-query id="updateDonorTeamCampaigns">
        <!-- Clicking save on the edit team campaign page -->
        <![CDATA[UPDATE team_campaigns_tbl tc, code_tbl c, entity_tbl e SET tc.team_name=?, tc.code_picture_url=?, c.code_picture_url=?,c.code_text=?,c.goal=?, e.slug=?, c.description=?  WHERE tc.team_code_id = c.id and c.id= e.entity_id and e.entity_type='code' and c.id=?]]>
    </sql-query>
    <sql-query id="teamCampaignTrack">
        <![CDATA[select ut.id, ut.name as name,upt.profile_pic_url,
    (count(case when trk.social_source='facebook' then trk.user_id end)) facebook,
    (count(case when trk.social_source='twitter' then trk.user_id end)) twitter,
    (count(case when trk.social_source='email' then trk.user_id end)) email,
    (select sum(case when trck.track_type='donation' and trck.user_id = trck.user_id then trck.amount end) direct_donations from track_tbl trck where trck.code_id=? and trck.reference_userid =trk.user_id) as direct_donation,
    (select sum(case when trck2.track_type='donation' and trck2.user_id != trck2.user_id then trck2.amount end) indirect_donations from track_tbl trck2 where trck2.code_id=? and trck2.reference_userid =trk.user_id) as indirect_donation
    from code_share_tbl trk inner join user_tbl ut on trk.user_id=ut.id
    inner join user_profile_tbl upt on upt.user_id = ut.id
    where trk.code_id=? and trk.user_id in (?)
    group by trk.user_id
    ]]>
    </sql-query>
    <sql-query id="onlyCampaigns">
        <![CDATA[select COALESCE(f.user_id,false) as is_following,
        c.id,
        c.title as name,
        IFNULL(o.profile_pic_url,upt.profile_pic_url) as org_pic_url,
        IFNULL(o.background_pic_url,upt.background_pic_url) as background_pic_url,
        chat.name_tmp as organization_name,
        c.code_text as code_text,
        c.team_campaign as teamcampaign,
        e.entity_type,c.charity_default as charity_default,
        c.code_picture_url as profile_pic_url,
        c.state as state,
        ch.name as campaign_creator,
        IFNULL(c.beneficiary,'') as beneficiary,
        c.city as city,
        IFNULL(c.charity_id,'') as charity_id,
        c.suggested_donation,
        c.code_text as wecode,
        c.goal as goal,
        c.end_date,
        c.type,
        e.entity_id as entityid,c.description,e.nooffollowers,
        e.noof_donors,
        e.slug,
        e.noof_donations as donation,
        TRUNCATE((e.noof_donations/c.goal)*100,2) as donation_progress,
        cct.currency_code,
        cct.currency_symbol,
        c.user_id,
        IFNULL(c.charity_id,c.user_id)  as fundraiser_userid,
        IFNULL(c.charity_id,c.id) as fundraiser_codeid,
        IFNULL(c.charity_id,'fundraiser') as fundraiser,
        c.individual
from code_tbl c inner join
    entity_tbl e on e.entity_id=c.id and e.entity_type='code' and c.status="published" and c.show_in_search=1
    left outer join charity_tbl chat on chat.id=c.charity_id
    and chat.charity_from != 'self'
    left outer join organization_tbl o on o.id = chat.organization_id
    left outer join user_tbl ch on ch.id= c.user_id
    left outer join user_profile_tbl upt on upt.user_id = ch.id
    left outer join follow_tbl f on f.user_id=? and f.entity_id=e.id
    left outer join countries_currency cct on cct.country_id = ifnull(chat.country,upt.country)
   where c.goal>e.noof_donations
   and c.end_date >= CURDATE() and team_campaign='no'
   and c.code_text like ?
   group by c.id
   order by c.date_created desc,e.nooffollowers desc LIMIT 9 OFFSET ?]]>
    </sql-query>
    <sql-query id="newdiscoverCodes">
        <![CDATA[select COALESCE(f.user_id,false) as is_following,
        c.id,
        c.title as name,
        IFNULL(o.profile_pic_url,upt.profile_pic_url) as org_pic_url,
        IFNULL(o.background_pic_url,upt.background_pic_url) as background_pic_url,
        chat.name_tmp as organization_name,
        c.code_text as code_text,
        c.team_id as teamid,
        (select team_name from teams_tbl where id=c.team_id) as teamname,
        c.team_campaign as teamcampaign,
        e.entity_type,
        c.code_picture_url as profile_pic_url,
        c.state as state,
        ch.name as campaign_creator,
        IFNULL(c.beneficiary,'') as beneficiary,
        c.city as city,
        IFNULL(c.charity_id,'') as charity_id,
        c.suggested_donation,
        c.code_text as wecode,
        c.goal as goal,
        c.end_date,
        c.type,
        e.entity_id as entityid,c.description,e.nooffollowers,
        e.noof_donors,
        e.slug,
        e.noof_donations as donation,
        TRUNCATE((e.noof_donations/c.goal)*100,2) as donation_progress,
        cct.currency_code,
        cct.currency_symbol,
        c.user_id,
        IFNULL(c.charity_id,c.user_id)  as fundraiser_userid,
        IFNULL(c.charity_id,c.id) as fundraiser_codeid,
        IFNULL(c.charity_id,'fundraiser') as fundraiser,
        c.individual
from code_tbl c inner join
    entity_tbl e on e.entity_id=c.id and e.entity_type='code' and c.status="published" and c.show_in_search=1
    left outer join charity_tbl chat on chat.id=c.charity_id
    and chat.charity_from != 'self'
    left outer join organization_tbl o on o.id = chat.organization_id
    left outer join user_tbl ch on ch.id= c.user_id
    left outer join user_profile_tbl upt on upt.user_id = ch.id
    left outer join follow_tbl f on f.user_id=? and f.entity_id=e.id
    left outer join countries_currency cct on cct.country_id = ifnull(chat.country,upt.country)
   where c.goal>e.noof_donations
   and c.end_date >= CURDATE()
   and c.code_text like ?
   group by c.id
   order by donation_progress desc,e.nooffollowers desc LIMIT 10 OFFSET ?]]>
    </sql-query>
    <sql-query id="getdefaultcodedata">
        <![CDATA[select * from code_tbl c where c.charity_id=? ]]>
    </sql-query>
    <sql-query id="isTeamCampaign">
        <![CDATA[select team_campaign from code_tbl c where c.id=?]]>
    </sql-query>
    <sql-query id="videoData">
        <![CDATA[select IFNULL(cht.name_tmp, ut.name) as name,
                    vt.video_url,vt.video_token,vt.video_image
                    from video_tbl vt
                    inner join entity_tbl et on et.id=vt.entity_id
                    left outer join user_tbl ut on ut.id=et.entity_id and et.entity_type='user'
                    left outer join charity_tbl cht on cht.id=et.entity_id and et.entity_type='charity'
                    where vt.video_token=?]]>
    </sql-query>
    <sql-query id="donorCountryState">
        <![CDATA[select ct.id as country_id, st.id as state_id from countries_tbl ct
      left outer join states_tbl st on st.country_id = ct.id and st.name = ?
      where country_code =?]]>
    </sql-query>
    <sql-query id="sitemapCountryList">
        <![CDATA[SELECT cct.id AS country_id, cct.name AS country_name, cct.country_code AS country_code
    FROM countries_tbl cct
    JOIN charity_tbl cht ON cht.country = cct.id
    GROUP BY country_code
        UNION
    SELECT cct.id AS country_id, cct.name AS country_name, cct.country_code AS country_code
    FROM countries_tbl cct
    join user_profile_tbl upt on upt.country=cct.id
    inner join code_tbl ct on ct.user_id=upt.user_id and ct.individual='yes'
    group by country_code order by country_code]]>
    </sql-query>
    <sql-query id="sitemapHome">
        <![CDATA[SELECT cct.name AS country_name,
     IFNULL(ct.city,c.city) AS country_city
     FROM charity_tbl c
     INNER JOIN code_tbl ct ON ct.charity_id = c.id AND ct.city != ''
     LEFT OUTER JOIN countries_tbl cct ON cct.id = c.country
     WHERE c.country = ?
     GROUP BY country_city

UNION

SELECT cct.name AS country_name,
     IFNULL(ct.city,upt.city) AS country_city
     FROM user_profile_tbl upt
     INNER JOIN code_tbl ct ON ct.user_id = upt.user_id
     LEFT OUTER JOIN countries_tbl cct ON cct.id = upt.country
     WHERE upt.country = ? and ct.individual='yes'
     GROUP BY country_city
     ORDER BY country_city ASC]]>
    </sql-query>
    <sql-query id="sitemapHomeCity">
        <![CDATA[
      SELECT ee.slug AS charitySlug, ch.name_tmp AS charityShortTitle,  e.slug AS campaignSlug,e.entity_type  AS entity_type,o.title as organization_name,c.title as campaignTitle
      FROM code_tbl c
      INNER JOIN entity_tbl e ON e.entity_id = c.id AND e.entity_type ='code'
      INNER JOIN charity_tbl ch ON ch.id = c.charity_id
      INNER JOIN organization_tbl o ON o.id = ch.organization_id
      INNER JOIN entity_tbl ee ON ee.entity_id = ch.id AND ee.entity_type ='charity'
      WHERE c.city = ? AND ch.charity_from !='system' AND c.city IS NOT NULL and c.status='published'
      and (c.end_date is null or c.end_date > now())

      UNION ALL

      SELECT ee.slug AS charitySlug, ch.name_tmp AS charityShortTitle, e.slug AS campaignSlug, e.entity_type AS entity_type, o.title AS organization_name,c.title as campaignTitle
      FROM code_tbl c
      INNER JOIN entity_tbl e ON e.entity_id = c.id AND e.entity_type ='code'
      INNER JOIN charity_tbl ch ON ch.id = c.charity_id
      INNER JOIN organization_tbl o ON o.id = ch.organization_id
      INNER JOIN entity_tbl ee ON ee.entity_id = ch.id AND ee.entity_type ='charity'
      WHERE ch.city = ? AND ch.charity_from !='system' AND c.city IS NULL and
      c.status='published'
      and (c.end_date is null or c.end_date > now())

       UNION ALL

       SELECT ee.slug AS charitySlug, ch.name_tmp AS charityShortTitle,
      '' AS campaignSlug,
      ee.entity_type AS entity_type, o.title AS organization_name,'' as campaignTitle
      FROM charity_tbl ch
      INNER JOIN organization_tbl o ON o.id = ch.organization_id
      INNER JOIN entity_tbl ee ON ee.entity_id = ch.id AND ee.entity_type ='charity'
      WHERE ch.city = ? AND ch.charity_from !='system' AND ch.city IS not NULL


      UNION ALL

      SELECT '' AS charitySlug, '' AS charityShortTitle,
      e.slug AS campaignSlug,
      e.entity_type AS entity_type, '' AS organization_name,c.title as campaignTitle
      FROM code_tbl c
      INNER JOIN entity_tbl e ON e.entity_id = c.id AND e.entity_type ='code'
      INNER JOIN user_profile_tbl upt on c.user_id=upt.user_id
      WHERE (c.city=? OR upt.city = ?) AND c.individual='yes' AND upt.city IS not NULL and c.status='published' and (c.end_date is null or c.end_date > now())
]]>
    </sql-query>
    <sql-query id="teamMainCampaign">
        <![CDATA[select c.*,e.slug from code_tbl c
    inner join entity_tbl e on e.entity_id = c.id and e.entity_type='code'
    where c.id =?]]>
    </sql-query>
    <sql-query id="charityCodeJob">
        <![CDATA[select ot.title as charity_name,c.id,c.code_text as wecode,
              c.end_date,c.status,
              ifnull(tctl.team_name,c.title) as name,
              cht.id as charity_id,
              cht.payment_gateway, c.description, c.city, c.address_1,
              c.address_2, st.name as state,
              ifnull(tctl.code_picture_url, c.code_picture_url)as code_picture_url,
              c.suggested_donation,c.goal,cct.currency_symbol,
              cct.currency_code,
              u.name as user_name,
              ot.title  as charity_name,
              c.team_campaign
              from code_tbl c
              left outer join states_tbl st on st.id = c.state
              inner join charity_tbl cht on cht.id=c.charity_id
              left outer join organization_tbl ot on ot.id= cht.organization_id
              left outer join countries_currency cct on cct.country_id = cht.country
              left outer join user_tbl u on u.id = c.user_id
              left outer join team_campaigns_tbl tctl on tctl.team_code_id = c.id
              where c.id = ?]]>
    </sql-query>
    <sql-query id="fundraiserCodeJob">
        <![CDATA[select c.*,
        ifnull(tctl.code_picture_url, c.code_picture_url) as code_picture_url,
        ifnull(tctl.team_name, c.title) as title,
        u.name as creator_name
        from code_tbl c
        left outer join team_campaigns_tbl tctl on tctl.team_code_id = c.id
        left outer join user_tbl u on u.id = c.user_id
        where c.id=?]]>
    </sql-query>
    <sql-query id="charity_claim_insert_signup">
        <![CDATA[INSERT INTO charity_claim_tbl
      (charity_id,first_name,last_name,title,email_address,phone_number,ein,date_created,approval_date,   approved_by)
      VALUES (?,?,?,?,?,?,?,?,?,?)]]>
    </sql-query>
    <sql-query id="userRegistrationWithoutPassword">
        <![CDATA[INSERT INTO user_tbl(date_created,name,email,active,verification_key,password,password_salt) values(?,?,?,?,?,?,?)]]>
    </sql-query>
    <sql-query id="userProfileByEmail">
        <![CDATA[SELECT us.name, up.home_phone AS phone_number,us.email ,us.id
        FROM user_profile_tbl up inner join user_tbl us ON us.email=?]]>
    </sql-query>
    <sql-query id="checkCharityByein">
        <![CDATA[SELECT cht.id,cht.name_tmp,cht.ein,cht.charity_from,ent.slug
        FROM charity_tbl cht
        inner join entity_tbl ent on ent.entity_id=cht.id and ent.entity_type ='charity'
        WHERE cht.ein IN (?,?)]]>
    </sql-query>
    <sql-query id="updateCharityZipLocation">
        <![CDATA[UPDATE charity_tbl SET country=?,state=?,city=?,postal_code=? WHERE id=? ]]>
    </sql-query>
    <sql-query id="charityPaymentAccounts">
        <![CDATA[select c.id as charityId,o.title,ct.country_code,pt.account_id,
          pt.access_token,
          pt.account_status,
          pt.payment_gateway,
          pt.id as payment_gateway_id
         from payment_gateways_tbl pt
        inner join charity_tbl c on c.id = pt.charity_id
        inner join organization_tbl o on o.id=c.organization_id
        left outer join countries_tbl ct on ct.id = c.country
        where pt.charity_id=?]]>
    </sql-query>
    <sql-query id="userPaymentAccounts">
        <![CDATA[select u.id as charityId,u.name as title,
          ct.country_code,
          pt.account_id,
          pt.access_token,
          pt.account_status,
          pt.payment_gateway,
          pt.user_id,
          pt.id as payment_gateway_id
         from payment_gateways_tbl pt
        inner join user_tbl u on u.id = pt.user_id
        inner join user_profile_tbl up on up.user_id= u.id
        left outer join countries_tbl ct on ct.id = up.country
        where pt.user_id=? and pt.charity_id is null]]>
    </sql-query>
    <sql-query id="getPaymentAccountData">
        <![CDATA[select * from payment_gateways_tbl where account_id=?]]>
    </sql-query>
    <sql-query id="addPaymentGateWay">
        <![CDATA[insert into payment_gateways_tbl SET ?]]>
    </sql-query>
    <sql-query id="selectPendingWePayAccounts">
        <![CDATA[select * from payment_gateways_tbl where account_status != 'active' and payment_gateway='wepay']]>
    </sql-query>
    <sql-query id="selectPaymentGatewaysByUser">
        <![CDATA[select * from payment_gateways_tbl where user_id=? and payment_gateway =?]]>
    </sql-query>
    <sql-query id="updateWepayAccountStatus">
        <![CDATA[UPDATE payment_gateways_tbl SET account_status=? WHERE id=?]]>
    </sql-query>
    <sql-query id="selectCategories">
        <![CDATA[select * from ww_categories_tbl]]>
    </sql-query>
    <sql-query id="selectCountries">
        <![CDATA[select c.*,cc.currency_symbol,cc.currency_code from countries_tbl c
                left outer join countries_currency cc
                on c.id=cc.country_id]]>
    </sql-query>
    <sql-query id="selectZones">
        <![CDATA[select * from zone_tbl WHERE country_code="US" UNION SELECT * FROM zone_tbl WHERE country_code <> "US"; ]]>
    </sql-query>
    <sql-query id="updatePaymentGateway">
    <![CDATA[update code_tbl set payment_gateway_id=?, status=? where id =?]]>
    </sql-query>
    <sql-query id="vaidateExistingPaymentGateway">
        <![CDATA[select * from payment_gateways_tbl where access_token=? and account_id =? and user_id =? and charity_id =?]]>
    </sql-query>
    <sql-query id="CharityDetails">
        <![CDATA[select u.name,
            u.email as email_address,
            ifnull(o.title, u.name) as title,
            ifnull(o.full_description, up.about_me) as description,
            ifnull(ch.id, u.id) as commonid,
            cct.currency_code,
            cut.country_code
            from code_tbl c
      left outer join charity_tbl ch on ch.id = c.charity_id
      left outer join organization_tbl o on o.id = ch.organization_id
      left outer join charity_claim_tbl cl on cl.charity_id = c.charity_id
      left outer join user_tbl u on u.id = IFNULL(cl.payment_user_id,c.user_id)
      left outer join user_profile_tbl up on up.user_id = u.id
      left outer join countries_currency cct on cct.country_id = ifnull(ch.country, up.country)
      left outer join countries_tbl cut on cut.id = ifnull(ch.country, up.country)
      where c.id =?]]>
    </sql-query>
    <sql-query id="FundDetails">
        <![CDATA[select u.name,
            u.email as email_address,
            u.name as title,
            up.about_me as description,
            u.id as commonid,
            cct.currency_code,
            cut.country_code
            from user_tbl u
      left outer join user_profile_tbl up on up.user_id = u.id
      left outer join countries_currency cct on cct.country_id =  up.country
      left outer join countries_tbl cut on cut.id =  up.country
      where u.id =?]]>
    </sql-query>
    <sql-query id="charityPaymentGateWays">
        <![CDATA[select * from payment_gateways_tbl pt where pt.charity_id=?]]>
    </sql-query>
    <sql-query id="userPaymentGateWays">
        <![CDATA[select * from payment_gateways_tbl pt where pt.user_id=? and pt.charity_id is null]]>
    </sql-query>
    <sql-query id="userProfileAndAddress">
        <![CDATA[INSERT INTO user_profile_tbl (user_id,timezone_id,postal_code,country,state,city)
    values(?,?,?,?,?,?)]]>
    </sql-query>
    <sql-query id="getGateWayAccountDetails">
        <![CDATA[select ifnull(ch.id, u.id) as charity_id,
cc.currency_code as currency,
c.title as campaigntitle,
ifnull(o.title, u.name) as name_tmp,
pt.payment_gateway,
pt.access_token,
pt.account_id,
pt.account_status as wepay_account_state,
ch.verified
 from code_tbl c
left outer join payment_gateways_tbl pt on pt.id = c.payment_gateway_id
left outer join charity_tbl ch on ch.id = c.charity_id
left outer join organization_tbl o on o.id = ch.organization_id
left outer join user_tbl u on u.id = ifnull(c.parent_user_id, c.user_id)
left outer join user_profile_tbl up on up.user_id = u.id
left outer join countries_currency cc on cc.country_id = ifnull(ch.country, up.country)
where c.id =?]]>
    </sql-query>
    <sql-query id="getCodeOnCharity">
        <![CDATA[ SELECT * FROM code_tbl WHERE charity_id=?]]>
    </sql-query>
    <sql-query id="npupdateCharityStatus">
        <![CDATA[update charity_tbl
inner join charity_claim_tbl on charity_tbl.id=charity_claim_tbl.charity_id
inner join code_tbl on code_tbl.charity_id=charity_claim_tbl.charity_id
set charity_tbl.charity_from='approved',charity_tbl.verified=true,code_tbl.status="published"
where charity_tbl.charity_from != 'guidestar' and charity_claim_tbl.id=?]]>
    </sql-query>
    <sql-query id="userProfileUpdate">
        <![CDATA[UPDATE user_profile_tbl SET state=?,country=?,city=?,postal_code=? WHERE user_id=?]]>
    </sql-query>
    <sql-query id="checkUserAccessToken">
        <![CDATA[select * from payment_gateways_tbl where user_id=? and payment_gateway=?]]>
    </sql-query>
    <sql-query id="campainData">
        <![CDATA[select
        (select COUNT(*) from code_tbl WHERE parent_id=c.id) AS no_of_p2p,
        (select count(*) from teams_tbl where code_id=c.id) AS no_of_team_fundraisers,
        c.*,
        e.id as entityid,
        e.nooffollowers,
        e.noofposts,
        e.following_users,
        e.following_charities,
        e.following_codes,
        e.noof_donations,e.noof_donors,
        stl.name as state,
        c.state as stateid,
        e.slug as campaignSlug,
        pt.id as payment_gateway_id,
        pt.payment_gateway,
        pt.account_status,
        IFNULL(ch.name_tmp, u.name ) as creator_name,
        cct.currency_code,
        cct.currency_symbol
        from code_tbl c
        inner join entity_tbl e on c.id=e.entity_id and e.entity_type='code'
        left outer join charity_tbl ch on ch.id= c.charity_id
        left outer join user_tbl u on u.id= c.user_id
        left outer join user_profile_tbl up on up.user_id = u.id
        left outer join states_tbl stl on c.state = stl.id
        left outer join payment_gateways_tbl pt on pt.id= c.payment_gateway_id
        left outer join countries_currency cct on cct.country_id = ifnull(c.country,ch.country)
         where c.id=?]]>
    </sql-query>
    <sql-query id="fundraiserUserRegister">
        <![CDATA[SELECT u.*,ca.*,up.*, u.id as 'user_id',
        et.id as entity_id ,et.slug as userSlug,
        cct.country_code,
         cunt.currency_code,
         cunt.currency_symbol
            FROM user_tbl u
            inner join user_profile_tbl up ON up.user_id = u.id
            left outer join charity_admin_tbl ca ON ca.user_id = u.id
            left outer join countries_tbl cct on cct.id= up.country
            left outer join countries_currency cunt on cunt.country_id = up.country
            inner join entity_tbl et on et.entity_id = u.id and et.entity_type = 'user'
            WHERE u.id=?]]>
    </sql-query>
    <sql-query id="charityIds">
        <![CDATA[SELECT charity_id from charity_admin_tbl where user_id=?]]>
    </sql-query>
    <sql-query id="updateProviderToken">
        <![CDATA[UPDATE user_tbl SET provider_access_token=?,provider=? WHERE id=? ]]>
    </sql-query>
    <sql-query id="social_user_registration">
        <![CDATA[INSERT INTO user_tbl(date_created,name,email,provider,provider_access_token,facebook_id,active) values(?,?,?,?,?,?,'yes')]]>
    </sql-query>
    <sql-query id="getfollowerstatus">
        <![CDATA[select * from follow_tbl where user_id=? and entity_id=?]]>
    </sql-query>
    <sql-query id="social_login_sql">
        <![CDATA[SELECT u.*,ca.*,up.*, u.id as 'user_id',u.provider,u.provider_access_token,
        et.id as entity_id ,et.slug as userSlug,
        cct.country_code,
         cunt.currency_code,
         cunt.currency_symbol
            FROM user_tbl u
            INNER JOIN user_profile_tbl up ON up.user_id = u.id
            LEFT JOIN charity_admin_tbl ca ON ca.user_id = u.id
            left outer join countries_tbl cct on cct.id= up.country
            left outer join countries_currency cunt on cunt.country_id = up.country
            Inner join entity_tbl et on et.entity_id = u.id and  et.entity_type = 'user'
            WHERE u.email =?]]>
    </sql-query>
    <sql-query id="getUserInfo">
        <![CDATA[ SELECT u.name,u.id,u.email,up.home_phone FROM user_tbl u INNER JOIN user_profile_tbl up ON up.user_id = u.id WHERE u.id=? ]]>
    </sql-query>
    <sql-query id="checkCharityClaimByCharity">
        <![CDATA[select * from charity_claim_tbl where charity_id=?]]>
    </sql-query>
    <sql-query id="checkCharityById">
        <![CDATA[select ogt.profile_pic_url, cht.* from charity_tbl cht inner join
          organization_tbl ogt on ogt.id=cht.organization_id and cht.id=?;]]>
    </sql-query>
    <sql-query id="getUserProfileWithCurrency">
        <![CDATA[SELECT u.id as user_id,u.name,u.email ,up.home_phone,cun.currency_symbol FROM code_tbl c
       inner join user_tbl u on u.id=c.user_id
       INNER JOIN user_profile_tbl up ON up.user_id = u.id
       inner join countries_currency cun on cun.country_id = c.country
        WHERE c.id=?]]>
    </sql-query>
    <sql-query id="checkCharityClaimById">
        <![CDATA[SELECT * FROM charity_claim_tbl WHERE charity_id=?]]>
    </sql-query>
    <sql-query id="getCodeIdByCharityAndUser">
        <![CDATA[ SELECT id,title FROM code_tbl WHERE charity_id=? AND user_id=?
        ORDER BY id DESC;]]>
    </sql-query>
    <sql-query id="updateCharityPayment">
        <![CDATA[ UPDATE charity_tbl SET payment_gateway=? WHERE id=?]]>
    </sql-query>
    <sql-query id="updateCodePaymentGatewayOnCharity">
        <![CDATA[ UPDATE code_tbl SET status='published',payment_gateway_id=? WHERE charity_id=?]]>
    </sql-query>
    <sql-query id="getcharityCountryCode">
        <![CDATA[ SELECT cu.country_code,ch.id FROM charity_tbl ch INNER JOIN countries_tbl cu ON cu.id = ch.country WHERE ch.id=?;]]>
    </sql-query>
    <sql-query id="getEntityOfCharity">
        <![CDATA[ select eee.id as entity_id,eee.slug, c.id,c.payment_gateway,o.title as name,o.background_pic_url,code.suggested_donation as suggested_donation,cbt.code_text as code,cbt.id as code_id, o.full_description as description,c.ein, c.city, c.address_1, c.address_2, st.name as state, o.profile_pic_url,cct.currency_code,cct.currency_symbol
        from charity_tbl c
        inner join organization_tbl o on o.id = c.organization_id
        left outer join states_tbl st on st.id = c.state
        left outer join code_tbl cbt on cbt.charity_id=?
        left outer join code_tbl code on code.charity_id=?
        left outer join countries_currency cct on cct.country_id = c.country
        left outer join entity_tbl eee on eee.entity_id=c.id and eee.entity_type='charity'
        where c.id = ?]]>
    </sql-query>
    <sql-query id="getStateCode">
        <![CDATA[ SELECT id FROM states_tbl WHERE name =? AND country_id =?]]>
    </sql-query>
    <sql-query id="checkCharityClaimByCodeId">
        <![CDATA[SELECT cl.approval_date,cl.charity_id ,co.id AS code_id FROM charity_claim_tbl cl INNER JOIN code_tbl co ON cl.charity_id = co.charity_id AND co.id=?;]]>
    </sql-query>
    <sql-query id="getCodeById">
        <![CDATA[SELECT * FROM code_tbl WHERE id=?]]>
    </sql-query>
    <sql-query id="getCodeTeamId">
        <![CDATA[SELECT * FROM teams_tbl WHERE id=?]]>
    </sql-query>
    <sql-query id="userIdAndUserProfile">
        <![CDATA[INSERT INTO user_profile_tbl SET ?]]>
    </sql-query>
    <sql-query id="getUserAccessToken">
        <![CDATA[select * from payment_gateways_tbl where user_id=? and payment_gateway=?]]>
    </sql-query>
    <sql-query id="updateAboutMeAndProfiePic">
        <![CDATA[UPDATE user_profile_tbl SET profile_pic_url= ?, about_me=? WHERE id=?]]>
    </sql-query>
    <sql-query id="getProfileByUserId">
        <![CDATA[ SELECT * FROM user_profile_tbl WHERE user_id=? ]]>
    </sql-query>
    <sql-query id="followersRecommendationscharity">
        <![CDATA[select c.id,o.title as name,e.entity_type,o.profile_pic_url,c.city,stl.name as state,
        o.short_name as short_name,
        e.entity_id as entityid, o.brief_description as description,
        e.slug as uniqSlug
        from charity_tbl c
        inner join entity_tbl e on c.id=e.entity_id and c.account_id is not NULL and`
        e.id not in (select entity_id from follow_tbl where user_id=?) and e.entity_type='charity'
        inner join organization_tbl o on c.organization_id=o.id
        left outer join states_tbl stl on c.state = stl.id
        order by e.nooffollowers desc
        LIMIT ? OFFSET ?]]>
    </sql-query>
    <sql-query id="insertAdminData">
        <![CDATA[INSERT INTO code_admin_tbl (user_id, code_id, msg_body,date_created) VALUES (?,?,?,?)]]>
    </sql-query>
    <sql-query id="getCampaignAdminDetails">
        <![CDATA[select ut.email,ut.name,ut.active,ut.password_salt,et.slug,upt.profile_pic_url,
        ut.active,cat.msg_body,cat.user_id from code_admin_tbl cat
             inner join user_tbl ut on ut.id=cat.user_id
             inner join entity_tbl et on et.entity_id=cat.user_id
             inner join user_profile_tbl upt on upt.user_id=cat.user_id
             where cat.code_id=? and et.entity_type="user"]]>
    </sql-query>
    <sql-query id="removeAdminEmails">
        <![CDATA[DELETE FROM code_admin_tbl WHERE code_id = ? and user_id in (?) ]]>
    </sql-query>
    <sql-query id="insertCampaignUpdates">
        <![CDATA[INSERT INTO code_status_updates_tbl (user_id,charity_id, code_id, title,description,date_created,date_modified) VALUES (?,?,?,?,?,now(),now()) ]]>
    </sql-query>
    <sql-query id="campaignUpdates">
        <![CDATA[(select csut.title,csut.description,
ut.name as username,et.slug as slug,
csut.date_modified as dateorder,csut.id as ide
from code_status_updates_tbl csut
        inner join user_tbl ut on ut.id=csut.user_id
        inner join entity_tbl et on et.entity_id=csut.user_id and et.entity_type="user"
        where csut.code_id=? )
        union all
(select csut.title,csut.description,
o.title as username,et.slug as slug,
csut.date_modified as dateorder,csut.id as ide
from code_status_updates_tbl csut
        inner join charity_tbl ch on ch.id= csut.charity_id
        inner join organization_tbl o on o.id = ch.organization_id
        inner join entity_tbl et on et.entity_id=csut.charity_id and et.entity_type="charity"
        where csut.code_id=?)
        order by dateorder desc,ide desc]]>
    </sql-query>
    <sql-query id="getCampaignUpdates">
        <![CDATA[select * from code_status_updates_tbl  where code_id=? ]]>
    </sql-query>
    <sql-query id="updateCampaignUpdates">
        <![CDATA[update code_status_updates_tbl set user_id=?,charity_id=?,code_id=? ,title=?,description=?,date_modified=now() where id=?]]>
    </sql-query>
    <sql-query id="deleteCampaignUpdates">
        <![CDATA[delete from code_status_updates_tbl  where id=?]]>
    </sql-query>
    <sql-query id="campaignThresholds">
        <![CDATA[select coalesce(sum(tb.amount),0) as donation,
        TRUNCATE((coalesce(sum(tb.amount),0)/c.goal)*100,2) as donation_progress,
        et.slug as commonSlug,
        'status_type' as 'post',
        IFNULL(o.profile_pic_url, upt.profile_pic_url) as mentioningimage,
        et.id as entity_id,
        o.title as  title,
        c.title as codeTitle,
        etc.slug as codeSlug,
        c.code_picture_url,
        c.code_text,
        etc.id as codeEntityId,
        ut.name,
        IFNULL(ch.city, upt.city) as city,
        ch.id as charityId,
        ut.id as mentioneduserID,
        c.progress_notifications,
        c.id as code_id
        from code_tbl c
        left outer join transaction_tbl tb on tb.code_id= c.id
        left outer join charity_tbl ch on ch.id= c.charity_id
        left outer join organization_tbl o on o.id = ch.organization_id
        left outer join user_tbl ut on ut.id= c.user_id
        left outer join user_profile_tbl upt on upt.user_id= ut.id
        left outer join entity_tbl et on et.entity_id = IFNULL(ch.id,ut.id) and et.entity_type =if(ch.id, 'charity','user')
        inner join entity_tbl etc on etc.entity_id = c.id and etc.entity_type ='code'
        where c.id=?]]>
    </sql-query>
    <sql-query id="getUserCampaigns">
        <![CDATA[select c.*,tcl.team_name from code_tbl c
    left outer join team_campaigns_tbl tcl on tcl.team_code_id=c.id
    where c.id in (select code_id from code_admin_tbl   where user_id=?)
              union all
              select  c.*,tcl.team_name from code_tbl c
              left outer join team_campaigns_tbl tcl on tcl.team_code_id=c.id
    where c.user_id=?]]>
    </sql-query>
    <sql-query id="getUserOfflineDonations">
        <![CDATA[(select t.transaction_date,ct.code_text,ct.individual,ct.title,ct.team_campaign,t.amount,u.name,tcl.team_name
        from transaction_tbl t
        INNER JOIN user_tbl u on u.id=t.user_id
        INNER JOIN code_tbl ct on ct.id=t.code_id
        left outer join team_campaigns_tbl tcl on tcl.team_code_id=ct.id
        where ct.user_id=? and t.offline='yes')
        union all
        (SELECT t.transaction_date,ct.code_text,ct.individual,ct.title,ct.team_campaign,t.amount,u.name,tcl.team_name FROM transaction_tbl t
        INNER JOIN code_admin_tbl cat ON t.code_id=cat.code_id
        INNER JOIN user_tbl u on u.id=t.user_id
        INNER JOIN code_tbl ct on cat.code_id=ct.id
        left outer join team_campaigns_tbl tcl on tcl.team_code_id=ct.id
        WHERE cat.user_id=? AND t.offline='yes')
       order by transaction_date desc]]>
    </sql-query>
    <sql-query id="getUserAndCampaign">
        <![CDATA[SELECT  u.name,u.email,c.title as main_campaign_name FROM user_tbl u,code_tbl c WHERE u.id=? AND c.status="published" AND c.id=?]]>
    </sql-query>
    <sql-query id="getVideoNotUploadedCampaigns">
        <![CDATA[SELECT * FROM code_tbl WHERE code_video_url is null AND status="published"
        AND timestampdiff(HOUR,start_date,NOW()) BETWEEN  ? AND ? LIMIT 5;]]>
    </sql-query>
    <sql-query id="getCampaignsNoPeerToPeer">
        <![CDATA[SELECT * FROM code_tbl WHERE id NOT in (SELECT original_code_id FROM team_campaigns_tbl) AND status="published" AND timestampdiff(HOUR,start_date,NOW()) BETWEEN ? AND ? ]]>
    </sql-query>
    <sql-query id="getNextDayCampaigns">
        <![CDATA[SELECT * FROM code_tbl WHERE status="published" AND timestampdiff(HOUR,start_date,NOW()) BETWEEN ? AND ?;]]>
    </sql-query>
    <sql-query id="getWeeklyCampaigns">
        <![CDATA[SELECT c.id AS code_id,
           c.goal as goal,
           u.name AS user_name,
           u.email AS user_email,
           c.code_text AS code_text,
           c.title AS title,
           cc.currency_symbol,
           IFNULL(SUM(t.amount),0) AS this_week_raised,
           ROUND(IFNULL((SUM(t.amount) DIV 7),0),2) as this_week_day_avg,
           ROUND(IFNULL(SUM(t.amount)/c.goal * 100,0),2) as this_week_percentage,
           COUNT(t.amount) AS this_week_count,
           (select MAX(transaction_date) from transaction_tbl where code_id=c.id ) as transaction_date,
           c.date_created
           FROM code_tbl c INNER JOIN user_tbl u ON u.id = c.user_id
           INNER JOIN countries_currency cc ON cc.country_id = c.country
           LEFT OUTER JOIN transaction_tbl t ON c.id = t.code_id
           AND t.transaction_date BETWEEN DATE_SUB(NOW(),INTERVAL 7 DAY) AND NOW()  WHERE c.status="published" AND c.date_deleted IS NULL
       GROUP BY c.id order by c.date_created;]]>
    </sql-query>
    <sql-query id="getCampaignOwnersAndAdmins">
        <![CDATA[(SELECT p.account_id,p.account_status,p.user_id,ct.date_created,ct.id,u.email,u.name,
        ct.end_date,
        ct.title AS Campaign_Name,
        et.slug AS slug,
        IFNULL(c.name_tmp,ct.beneficiary) as beneficiary,
        IFNULL(c.phone,up.home_phone) AS phone FROM payment_gateways_tbl p
        INNER JOIN user_tbl u ON u.id = p.user_id
        INNER JOIN user_profile_tbl up ON up.user_id = u.id
        INNER JOIN code_tbl ct ON ct.payment_gateway_id=p.id
        INNER JOIN entity_tbl et ON et.entity_id=ct.id AND et.entity_type="code"
        LEFT OUTER JOIN charity_tbl c ON p.charity_id=c.id
        WHERE timestampdiff(DAY,ct.date_created,NOW()) =?
        AND p.account_status="action_required" AND p.payment_gateway="wepay"
        AND ct.end_date >NOW() AND ct.status="published" AND date_deleted IS NULL)
        union all
       (SELECT p.account_id,p.account_status,ct.id,ct.date_created,p.user_id,u.email,u.name,ct.end_date,
       ct.title AS Campaign_Name,et.slug AS slug,
       IFNULL(c.name_tmp,ct.beneficiary) as beneficiary,
       IFNULL(c.phone,up.home_phone) AS phone FROM payment_gateways_tbl p
       INNER JOIN code_tbl ct ON ct.payment_gateway_id=p.id
       INNER JOIN code_admin_tbl cad ON cad.code_id = ct.id
       INNER JOIN user_tbl u ON u.id = cad.user_id
       INNER JOIN user_profile_tbl up ON up.user_id = u.id
       INNER JOIN entity_tbl et ON et.entity_id=ct.id AND et.entity_type="code"
       LEFT OUTER JOIN charity_tbl c ON p.charity_id=c.id
       WHERE timestampdiff(DAY,ct.date_created,NOW()) =?
       AND p.account_status="action_required" AND p.payment_gateway="wepay"
       AND ct.end_date >NOW() AND ct.status="published" AND date_deleted IS NULL);]]>
    </sql-query>
    <sql-query id="getActionRequiredCampaigns">
        <![CDATA[SELECT p.account_id,p.account_status,p.user_id,ct.date_created,ct.id,u.email,u.name,
        ct.end_date,
        ct.title AS Campaign_Name,
        et.slug AS slug,
        IFNULL(c.name_tmp,ct.beneficiary) as beneficiary,
        IFNULL(c.phone,up.home_phone) AS phone FROM payment_gateways_tbl p
        INNER JOIN user_tbl u ON u.id = p.user_id
        INNER JOIN user_profile_tbl up ON up.user_id = u.id
        INNER JOIN code_tbl ct ON ct.payment_gateway_id=p.id
        INNER JOIN entity_tbl et ON et.entity_id=ct.id AND et.entity_type="code"
        LEFT OUTER JOIN charity_tbl c ON p.charity_id=c.id
         WHERE p.account_status="action_required" AND p.payment_gateway="wepay"
        AND ct.end_date >NOW() AND ct.status="published" AND date_deleted IS NULL;]]>
    </sql-query>
    <sql-query id="getWonderAdmins">
        <![CDATA[select * from user_tbl where is_admin='1';]]>
    </sql-query>
    <sql-query id="getCampaignInfo">
        <![CDATA[SELECT c.id AS code_id,
        c.goal AS campaign_goal,
        IFNULL(c.beneficiary,ch.name_tmp) AS beneficiary,
        c.charity_id,
        date_format(c.date_created,'%m-%d-%Y') AS created_date,
        DATEDIFF(NOW(),c.start_date) AS number_of_days,
        IFNULL(SUM(t.amount),0) AS amount_raised,
        ROUND(IFNULL(SUM(t.amount)/c.goal * 100,0),2) as campaign_percent,
        cct.currency_symbol
        FROM code_tbl c LEFT OUTER JOIN transaction_tbl t ON c.id=t.code_id
        LEFT OUTER JOIN charity_tbl ch ON ch.id = c.charity_id
        left outer join user_profile_tbl upt on upt.user_id = c.user_id
        left outer join countries_currency cct on cct.country_id = IFNULL(c.country,IFNULL(ch.country,upt.country))
        WHERE c.id=?; ]]>
    </sql-query>
    <sql-query id="getDonarsOfCampaign">
        <![CDATA[ select DISTINCT(u.id) AS user_id,u.name AS user_name,u.email AS user_email,t.code_id AS code_id FROM transaction_tbl t
        INNER JOIN user_tbl u ON t.user_id=u.id AND t.code_id= ?;]]>
    </sql-query>
    <sql-query id="getCodeInfoWithUser">
        <![CDATA[ SELECT u.name,c.description AS campaign_description,u.email,u.name AS campaign_creator_name,up.profile_pic_url,c.id FROM code_tbl c
        INNER JOIN user_tbl u ON u.id = c.user_id INNER JOIN user_profile_tbl up ON up.user_id = u.id AND c.id=? ]]>
    </sql-query>
    <sql-query id="botDetails">
        <![CDATA[select u.id as user_id,
           u.name, u.name as title, e.id as entity_id, e.slug as commonSlug,
            up.profile_pic_url as mentioningimage,
            up.city
         from user_tbl u
        inner join user_profile_tbl up on up.user_id = u.id
        inner join entity_tbl e on e.entity_id = u.id and e.entity_type ='user'
        where u.id =?]]>
    </sql-query>
    <sql-query id="getCountryStates">
        <![CDATA[ SELECT state FROM user_profile_tbl where user_id=? ]]>
    </sql-query>
    <sql-query id="getStateBycode">
        <![CDATA[ SELECT sts.id,sts.name from state_tbl st
inner join states_tbl sts on sts.name=st.name
where st.abbreviation=? ]]>
    </sql-query>
    <sql-query id="donorsList">
        <![CDATA[select tt.transaction_date,tt.code_level_id,
                    IFNULL(ch.name_tmp, u.name) as beneficiary,
                    ct.title as codeTitle,
                    etc.slug as codeSlug,
                    tt.amount,
                    tt.processing_fee,
                    tt.wonderwe_fee,
                    uat.name,
                    uat.email,
                    uat.active,
                    etu.slug as userSlug,
                    upt.address_1,
                    upt.address_2,
                    upt.city,
                    upt.postal_code,
                    st.name as state,
                    cut.name as country,
                    cct.currency_code,
                    cct.currency_symbol
                    from transaction_tbl tt

                    inner join code_tbl ct on ct.id = tt.code_id
                    left outer join user_tbl u on u.id = ct.parent_user_id
                    left outer join user_profile_tbl uppt on uppt.user_id = u.id
                    left outer join charity_tbl ch on ch.id = ct.charity_id
                    left outer join countries_currency cct on cct.country_id =ifnull(ch.country,uppt.country)
                    inner join entity_tbl etc on etc.entity_id = ct.id and etc.entity_type ='code'
                    inner join user_tbl uat on uat.id = tt.user_id
                    inner join user_profile_tbl upt on upt.user_id = uat.id
                    left outer join states_tbl st on st.id = upt.state
                    left outer join countries_tbl cut on cut.id = upt.country
                    inner join entity_tbl etu on etu.entity_id = uat.id and etu.entity_type ='user'
                    where code_id in(select id from code_tbl where user_id =? and individual is not null) order by transaction_date desc]]>
    </sql-query>
    <sql-query id="charityDonorsList">
        <![CDATA[select tt.transaction_date,tt.code_level_id,
                IFNULL(ch.name_tmp, u.name) as beneficiary,
                ct.title as codeTitle,
                etc.slug as codeSlug,
                tt.amount,
                tt.processing_fee,
                tt.wonderwe_fee,
                uat.name,
                uat.email,
                uat.active,
                etu.slug as userSlug,
                upt.address_1,
                upt.address_2,
                upt.city,
                upt.postal_code,
                st.name as state,
                cut.name as country,
                cct.currency_code,
                cct.currency_symbol
                from transaction_tbl tt

                inner join code_tbl ct on ct.id = tt.code_id
                left outer join user_tbl u on u.id = ct.parent_user_id
                left outer join user_profile_tbl uppt on uppt.user_id = u.id
                left outer join charity_tbl ch on ch.id = ct.charity_id
                left outer join countries_currency cct on cct.country_id =ifnull(ch.country,uppt.country)
                inner join entity_tbl etc on etc.entity_id = ct.id and etc.entity_type ='code'
                inner join user_tbl uat on uat.id = tt.user_id
                inner join user_profile_tbl upt on upt.user_id = uat.id
                left outer join states_tbl st on st.id = upt.state
                left outer join countries_tbl cut on cut.id = upt.country
                inner join entity_tbl etu on etu.entity_id = uat.id and etu.entity_type ='user'
                where code_id in (select id from code_tbl where charity_id =?)
union all
select tt.transaction_date,tt.code_level_id,
                ch.name_tmp as beneficiary,
                ch.name_tmp as codeTitle,
                etc.slug as codeSlug,
                tt.amount,
                tt.processing_fee,
                tt.wonderwe_fee,
                uat.name,
                uat.email,
                uat.active,
                etu.slug as userSlug,
                upt.address_1,
                upt.address_2,
                upt.city,
                upt.postal_code,
                st.name as state,
                cut.name as country,
                cct.currency_code,
                cct.currency_symbol
                from transaction_tbl tt
                left outer join charity_tbl ch on ch.id = tt.charity_id and tt.code_id is null
                inner join organization_tbl ogt on ogt.id=ch.organization_id
                left outer join countries_currency cct on cct.country_id =ch.country
                inner join entity_tbl etc on etc.entity_id = ch.id and etc.entity_type ='charity'
                inner join user_tbl uat on uat.id = tt.user_id
                inner join user_profile_tbl upt on upt.user_id = uat.id
                left outer join states_tbl st on st.id = upt.state
                left outer join countries_tbl cut on cut.id = upt.country
                inner join entity_tbl etu on etu.entity_id = uat.id and etu.entity_type ='user'
                where  ch.id =? order by transaction_date desc]]>
    </sql-query>
    <sql-query id="checkCampaignGoalReached">
        <![CDATA[ SELECT SUM (t.amount) AS amount_raised,c.goal AS goal_amount FROM transaction_tbl
            t INNER JOIN code_tbl c ON t.code_id = c.id AND c.id=?
         ]]>
    </sql-query>
    <sql-query id="campaignStatus">
        <![CDATA[SELECT c.title AS campaign_name ,c.thank_message AS thank_message,
            u.name AS campaign_creator_name ,IFNULL(c.beneficiary,ct.name_tmp) AS beneficiary ,date_format(c.date_created,'%m-%d-%Y') AS created_date,
            c.title AS campaign_title,
            c.code_picture_url AS campaign_image,
            c.code_text AS code_text,
            cc.currency_symbol,
            IFNULL(c.goal,0) AS goal_amount,IFNULL(SUM(t.amount),0) AS amount_raised FROM code_tbl c INNER JOIN transaction_tbl t
            ON t.code_id = c.id
            INNER JOIN countries_currency cc ON cc.country_id=c.country
            INNER JOIN user_tbl u ON u.id = c.user_id
            LEFT OUTER JOIN charity_tbl ct ON ct.id=c.charity_id
            WHERE c.id=?;]]>
    </sql-query>
    <sql-query id="getDonarEmailsListCampaigns">
        <![CDATA[SELECT DISTINCT(u.email) AS user_email,u.id AS user_id FROM user_tbl u INNER JOIN  transaction_tbl t ON
        u.id = t.user_id AND t.code_id=?;]]>
    </sql-query>
    <sql-query id="getUserInformation">
        <![CDATA[SELECT u.*,up.*,et.slug from user_tbl u
        INNER JOIN user_profile_tbl up ON up.user_id=u.id
        INNER JOIN entity_tbl et ON et.entity_id=u.id and entity_type="user" where u.id=?;]]>
    </sql-query>
    <sql-query id="getIndividualCampData">
        <![CDATA[select cm.title as campaign,t.transaction_date as date,t.amount,cc.currency_symbol as currency_code,u.name as donor from code_tbl cm inner join transaction_tbl t on cm.id=t.code_id inner join user_tbl u on u.id=t.user_id inner join user_profile_tbl upt on upt.user_id=u.id inner join countries_currency cc on cc.country_id=upt.country where cm.id=?]]>
    </sql-query>
    <sql-query id="getAverageCampTransaction">
        <![CDATA[select round((noof_donations)/(noof_donors)) as Total_Avg,  noof_donations as Total_Donations ,noof_donors as Total_Donors from entity_tbl where entity_id=?]]>
    </sql-query>
    <sql-query id="getCampaignPeerDetails">
        <![CDATA[select ut.email,ut.name,ut.active,et.slug,upt.profile_pic_url,
        ut.active,cat.msg_body,cat.user_id from code_admin_tbl cat
             inner join user_tbl ut on ut.id=cat.user_id
             inner join entity_tbl et on et.entity_id=cat.user_id
             inner join user_profile_tbl upt on upt.user_id=cat.user_id
             where cat.code_id=?]]>
    </sql-query>
    <sql-query id="insertP2PData">
        <![CDATA[INSERT INTO invitees_p2p_tbl (user_id, code_id, message_body) VALUES (?,?,?)]]>
    </sql-query>
    <sql-query id="getCampaignP2PDetails">
<![CDATA[select ut.email,ut.name,et.slug,
        (select  COUNT(*) from team_campaigns_tbl tcl
        inner join code_tbl ct on tcl.team_code_id= ct.id
        where ct.user_id=ipp.user_id and tcl.original_code_id=ipp.code_id) as p2pcreated,
       ipp.message_body,ipp.user_id from invitees_p2p_tbl ipp
             inner join user_tbl ut on ut.id=ipp.user_id
             inner join entity_tbl et on et.entity_id=ipp.user_id
             inner join user_profile_tbl upt on upt.user_id=ipp.user_id
             where ipp.code_id=? and et.entity_type="user"]]>
    </sql-query>
    <sql-query id="getCampaignsWithNoGateways">
        <![CDATA[SELECT c.title,c.id AS code_id,c.user_id,u.name,u.email FROM user_tbl u INNER JOIN code_tbl c ON c.user_id=u.id AND u.id IN  (SELECT user_id FROM code_tbl WHERE individual="yes" AND user_id NOT in (select user_id FROM payment_gateways_tbl));]]>
    </sql-query>
    <sql-query id="getStripeGatewayOnUser">
        <![CDATA[SELECT * FROM payment_gateways_tbl WHERE payment_gateway="stripe" AND user_id=? AND charity_id IS NULL]]>
    </sql-query>
    <sql-query id="updateDataForAdmins">
        <![CDATA[update code_admin_tbl set msg_body=? where user_id=? and code_id=?]]>
    </sql-query>
    <sql-query id="getUserEmailNotificationSettings">
        <![CDATA[SELECT et.id,et.description,et.name,IFNULL(ues.enable,true) AS enable,ues.id AS email_setting_id,ues.user_id,eg.name AS email_group FROM email_templates et INNER JOIN email_group_tbl eg ON et.email_group=eg.id
        LEFT OUTER JOIN user_email_settings_tbl ues ON  ues.template_id = et.id AND ues.user_id=?;]]>
    </sql-query>
    <sql-query id="insertEmailNotificationSetting">
        <![CDATA[INSERT INTO user_email_settings_tbl (user_id,template_id,enable) VALUES (?,?,?)]]>
    </sql-query>
    <sql-query id="updateEmailNotificationSetting">
        <![CDATA[UPDATE user_email_settings_tbl SET enable=? WHERE id=?]]>
    </sql-query>
    <sql-query id="checkEmailEnabledOrNot">
        <![CDATA[SELECT * FROM user_tbl u INNER JOIN user_email_settings_tbl ues ON ues.user_id=u.id
        INNER JOIN email_templates ue ON ue.id = ues.template_id WHERE u.email=?
        AND ue.name=?;]]>
    </sql-query>
    <sql-query id="updateBankAccount">
        <![CDATA[ UPDATE  payment_gateways_tbl SET bank_account=?,business_tax_id=?,bank_account_holder_name=?,personal_id_number=? WHERE account_id=? ]]>
    </sql-query>
    <sql-query id="systemcharitylogoupdate">
        <![CDATA[UPDATE organization_tbl SET profile_pic_url=?,web_url=? WHERE id=(select organization_id from charity_tbl where id=?)]]>
    </sql-query>
    <sql-query id="dailyCampaignStatistics">
        <![CDATA[select c.title, c.code_slug, c.city, u.email, category.name, c.goal,cc.currency_symbol,


(select IFNULL(sum(tb.amount),0) from transaction_tbl tb where tb.code_id=c.id) as donation,
(select IFNULL(sum(tb.wonderwe_fee),0) from transaction_tbl tb where tb.code_id=c.id) as wonderwefee,

(select TRUNCATE((coalesce(sum(tb.amount), 0) / c.goal) * 100, 2) from transaction_tbl tb where tb.code_id=c.id) as donation_progress,
(select if(100-TRUNCATE((coalesce(sum(tb.amount), 0) / c.goal) * 100, 2)>0,100-TRUNCATE((coalesce(sum(tb.amount), 0) / c.goal) * 100, 2),0) from transaction_tbl tb where tb.code_id=c.id) as donation_progressleft,

if(c.type='ongoing', 'ongoing',TIMESTAMPDIFF(day, current_Date(), c.end_date) )as days_togo,

(select count(*) from code_tbl where date_created BETWEEN DATE_SUB(CURRENT_DATE-1,INTERVAL 7 DAY)
AND (current_date-1) and status="published") as average,

(select  COUNT(*) from team_campaigns_tbl tcl where tcl.original_code_id= c.id ) as p2pcreated

    from code_tbl c
left outer join user_tbl u on u.id = c.user_id
left outer join ww_categories_tbl category on category.id = c.category_id
left outer join countries_currency cc on cc.country_id = c.country
where c.date_created>=current_Date() order by c.published_date desc


]]>
    </sql-query>
    <sql-query id="liveCampaignStatistics">
        <![CDATA[select c.title, c.code_slug,c.published_date, c.city, u.email, category.name, c.goal,cc.currency_symbol,
(select IFNULL(sum(tb.amount),0) from transaction_tbl tb where tb.code_id=c.id) as donation,
(select TRUNCATE((coalesce(sum(tb.amount), 0) / c.goal) * 100, 2) from transaction_tbl tb where tb.code_id=c.id) as donation_progress,
(select count(*) from code_tbl where date_created BETWEEN DATE_SUB(CURRENT_DATE-1,INTERVAL 7 DAY)
AND (current_date-1) and status="published") as average,
(select if(100-TRUNCATE((coalesce(sum(tb.amount), 0) / c.goal) * 100, 2)>0,100-TRUNCATE((coalesce(sum(tb.amount), 0) / c.goal) * 100, 2),0) from transaction_tbl tb where tb.code_id=c.id) as donation_progressleft,
(select IFNULL(sum(tb.wonderwe_fee),0) from transaction_tbl tb where tb.code_id=c.id) as wonderwefee,
if(c.type='ongoing', 'ongoing',TIMESTAMPDIFF(day, current_Date(), c.end_date) )as days_togo,
(select  COUNT(*) from team_campaigns_tbl tcl where tcl.original_code_id= c.id ) as p2pcreated
    from code_tbl c
left outer join user_tbl u on u.id = c.user_id
left outer join ww_categories_tbl category on category.id = c.category_id
left outer join countries_currency cc on cc.country_id = c.country
where c.status="published" and TIMESTAMPDIFF(day, now(), c.end_date) >0 and c.date_deleted is NULL order by c.published_date desc]]>
    </sql-query>
    <sql-query id="nearCompleteStatistics">
        <![CDATA[select c.title,c.published_date, c.code_slug, c.city, u.email, category.name, c.goal,cc.currency_symbol,
(select IFNULL(sum(tb.amount),0) from transaction_tbl tb where tb.code_id=c.id) as donation,
(select TRUNCATE((coalesce(sum(tb.amount), 0) / c.goal) * 100, 2) from transaction_tbl tb where tb.code_id=c.id) as donation_progress,
(select count(*) from code_tbl where date_created BETWEEN DATE_SUB(CURRENT_DATE-1,INTERVAL 7 DAY)
AND (current_date-1) and status="published") as average,
(select IFNULL(sum(tb.wonderwe_fee),0) from transaction_tbl tb where tb.code_id=c.id) as wonderwefee,
(select if(100-TRUNCATE((coalesce(sum(tb.amount), 0) / c.goal) * 100, 2)>0,100-TRUNCATE((coalesce(sum(tb.amount), 0) / c.goal) * 100, 2),0) from transaction_tbl tb where tb.code_id=c.id) as donation_progressleft,
if(c.type='ongoing', 'ongoing',TIMESTAMPDIFF(day, current_Date(), c.end_date) )as days_togo,
(select  COUNT(*) from team_campaigns_tbl tcl where tcl.original_code_id= c.id ) as p2pcreated
    from code_tbl c
left outer join user_tbl u on u.id = c.user_id
left outer join ww_categories_tbl category on category.id = c.category_id
left outer join countries_currency cc on cc.country_id = c.country
where c.status='published' and c.date_deleted is NULL

and (((select TRUNCATE((coalesce(sum(tb.amount), 0) / c.goal) * 100, 2) from transaction_tbl tb where tb.code_id=c.id) >=80 and TIMESTAMPDIFF(day, now(), c.end_date) >0) or (TIMESTAMPDIFF(day, now(), c.end_date) <=15 and TIMESTAMPDIFF(day, now(), c.end_date) >0)) order by c.published_date desc
]]>
    </sql-query>
    <sql-query id="getCampaignCardInfo">
        <![CDATA[select
        c.id,
        c.title as name,
        IFNULL(o.profile_pic_url,upt.profile_pic_url) as org_pic_url,
        IFNULL(o.background_pic_url,upt.background_pic_url) as background_pic_url,
        chat.name_tmp as organization_name,
        e.slug as code_text,
        c.team_campaign as teamcampaign,
        e.entity_type,
        c.code_picture_url as profile_pic_url,
        c.state as state,
        ch.name as campaign_creator,
        IFNULL(c.beneficiary,chat.name_tmp) as beneficiary,
        c.city as city,
        IFNULL(c.charity_id,'') as charity_id,
        c.suggested_donation,
        c.code_text as wecode,
        c.goal as goal,
        c.end_date,
        c.type,
        e.entity_id as entityid,c.description,e.nooffollowers,
        e.noof_donors,
        e.slug,
        IFNULL(e.noof_donations,0) as donation,
        TRUNCATE((e.noof_donations/c.goal)*100,2) as donation_progress,
        cct.currency_code,
        cct.currency_symbol,
        c.user_id,
        IFNULL(c.charity_id,c.user_id)  as fundraiser_userid,
        IFNULL(c.charity_id,c.id) as fundraiser_codeid,
        IFNULL(c.charity_id,'fundraiser') as fundraiser,
        c.individual
from code_tbl c inner join
    entity_tbl e on e.entity_id=c.id and e.entity_type='code' and c.status="published" and c.show_in_search=1
    left outer join charity_tbl chat on chat.id=c.charity_id
    and chat.charity_from != 'self'
    left outer join organization_tbl o on o.id = chat.organization_id
    left outer join user_tbl ch on ch.id= c.user_id
    left outer join user_profile_tbl upt on upt.user_id = ch.id
    left outer join countries_currency cct on cct.country_id = ifnull(chat.country,upt.country)
   where c.end_date >= CURDATE()
   and e.slug =?;]]>
    </sql-query>
    <sql-query id="updateUserAddress">
        <![CDATA[UPDATE user_profile_tbl SET country=?,state=?,city=?,address_1=?,address_2=? where user_id=?]]>
    </sql-query>
    <sql-query id="getCountryId">
        <![CDATA[select id from countries_tbl where country_code=?]]>
    </sql-query>
    <sql-query id="checkingCanmailing">
        <![CDATA[select * from code_tbl where id=?]]>
    </sql-query>
    <sql-query id="insertingUserAddress">
        <![CDATA[update user_profile_tbl set address_1=?,address_2=?,country=?,state=?,city=?,postal_code=? where user_id=?]]>
    </sql-query>
    <sql-query id="checkingUserAddress">
        <![CDATA[select * from user_profile_tbl where user_id=?]]>
    </sql-query>
    <sql-query id="numOfCharityCreatedCampaigns">
        <![CDATA[select count(*),
(select c.id from code_tbl c where c.charity_id=ch.charity_id and c.charity_default="yes"  and c.individual is NUll AND c.date_deleted IS NULL) as charitydefault,(SELECT count(*) FROM code_tbl WHERE charity_id=ch.charity_id AND status="published" and individual IS NULL and date_deleted is NULL and end_date >= CURDATE()) AS campcount
FROM code_tbl ch WHERE ch.charity_id=?;]]>
    </sql-query>
    <sql-query id="getCharityCardInfo">
        <![CDATA[select c.id,o.title as name,o.background_pic_url,e.entity_type,o.profile_pic_url,stl.name as state,c.city as city,
        e.id as entityid,o.brief_description as description,e.nooffollowers,e.slug AS code_text,
        ct.title as name,
        ct.suggested_donation,
        ct.goal,
        (SELECT noof_donations FROM entity_tbl WHERE entity_id=ct.id AND type="code") AS donation,
                c.name_tmp AS beneficiary,
                cct.currency_code,
                cct.currency_symbol,
                ct.id as code_id,
                e.id as entity_id,
                (select count(*) as count from code_tbl cot
                where cot.charity_id=c.id and cot.status='published' and cot.date_deleted is NULL) as campaigns,
        e.noofposts
        from charity_tbl c inner join entity_tbl e
        on c.id=e.entity_id
        inner join organization_tbl o on c.organization_id=o.id
        inner join code_tbl ct on ct.charity_id = c.id and ct.charity_default='yes'
        left outer join states_tbl stl on stl.id = c.state
                left outer join countries_currency cct on cct.country_id = c.country
        where e.entity_type='charity' and e.slug=? and c.charity_from = 'approved';]]>
    </sql-query>
    <sql-query id="getCharityStateCountry">
        <![CDATA[select * from charity_tbl where id=?]]>
    </sql-query>
    <!-- <sql-query id="getCampaignMacro">
        <![CDATA[select  IFNULL(sum(c.goal),0) as goal,
        COUNT(CASE WHEN c.status = "published" THEN 1 END) AS live,
        COUNT(CASE WHEN c.status = "draft" THEN 1 END) As draft,
        sum((select sum(tb.amount) from transaction_tbl tb where  tb.code_id=c.id
         and c.team_campaign="yes") ) as p2praiseddonations,
        SUM((select sum(et.noof_donors) from entity_tbl et where et.entity_id=c.id)) as noofdonors,
        IFNULL(SUM((select  COUNT(*) from team_campaigns_tbl tcl where tcl.original_code_id= c.id )),0) as p2pdonors,
        SUM((select count(*) from code_admin_tbl cat where cat.code_id=c.id )) as noofadmins,
        SUM((select count(distinct code_id) from code_admin_tbl cat where cat.code_id=c.id)) as noofgroups,
        SUM((SELECT SUM(t.amount) FROM transaction_tbl t where t.code_id=c.id )) as donation
        from code_tbl c
        where c.end_date >= CURDATE() and c.date_deleted is NULL ]]>
        </sql-query>-->
    <!--for macrostatistics-->
    <sql-query id="goalAmount">
        <![CDATA[select IFNULL(sum(c.goal),0) as goal,
        COUNT(CASE WHEN c.status = "published" THEN 1 END) AS live,
        COUNT(CASE WHEN c.status = "draft" THEN 1 END) As draft
        from code_tbl c  where ]]>
    </sql-query>
    <sql-query id="totalAmountRaised">
        <![CDATA[select IFNULL(SUM(t.amount),0) as donationamount FROM transaction_tbl t
         left outer join code_tbl c  on  c.id=t.code_id
         where ]]>
    </sql-query>
    <sql-query id="p2pAmountRaised">
        <![CDATA[select IFNULL(sum(tb.amount),0) as p2pdonationamount from transaction_tbl tb
        left outer join code_tbl c  on  c.id=tb.code_id
        where  ]]>
    </sql-query>
    <sql-query id="totalnoofDonors">
        <![CDATA[select distinct tb.user_id,tb.code_id from transaction_tbl tb
        left outer join code_tbl c  on  c.id=tb.code_id
        where  ]]>
    </sql-query>
    <sql-query id="completeDonors">
        <![CDATA[select tb.user_id,tb.code_id from transaction_tbl tb
        left outer join code_tbl c  on  c.id=tb.code_id
        where ]]>
    </sql-query>
    <sql-query id="totalP2pDonors">
        <![CDATA[select distinct tb.user_id,tb.code_id from transaction_tbl tb
        left outer join code_tbl c  on  c.id=tb.code_id
        where  ]]>
    </sql-query>
    <sql-query id="getMereCompletedCampaigns">
        <![CDATA[ select count(*) as completedcampaigns
    from transaction_tbl tb
inner join code_tbl c on c.id= tb.code_id
where ]]>
    </sql-query>
    <sql-query id="gettingCountryStateNames">
        <![CDATA[select ct.name as country,st.name as state from states_tbl st inner join countries_tbl ct on st.country_id=ct.id where st.id=? and st.country_id=?]]>
    </sql-query>
    <sql-query id="getCurrencySymbol">
        <![CDATA[select currency_symbol
from countries_currency where country_id=?]]>
    </sql-query>
    <sql-query id="noofgroups">
        <![CDATA[ select count(distinct code_id) as noofgroups
                  from code_admin_tbl cat
                  left outer join code_tbl c on c.id=cat.code_id
                  where ]]>
    </sql-query>
    <sql-query id="noofadmins">
        <![CDATA[select count(*) as noofadmins
           from code_admin_tbl cat
           left outer join code_tbl c on c.id=cat.code_id
            where ]]>
    </sql-query>
    <sql-query id="sendMailsTop2pAdmins">
        <![CDATA[select ct.id as codeId,ct.title as campaign_name,ut.email as email,ut.name,et.slug from code_tbl ct inner join entity_tbl et on et.entity_id=ct.id inner join user_tbl ut on ut.id=ct.user_id where ct.parent_id=?]]>
    </sql-query>
    <sql-query id="getStripeGatewayOnCharity">
        <![CDATA[SELECT * FROM payment_gateways_tbl WHERE payment_gateway="stripe" AND charity_id=?]]>
    </sql-query>
    <sql-query id="gettingCampaingOwnerAndAdminDetails">
        <![CDATA[select ut.name,ut.email from user_tbl ut inner join code_tbl ct on ut.id=ct.user_id where ct.id=?
      union all
     select ut.name,ut.email from user_tbl ut inner join code_admin_tbl cat on cat.user_id=ut.id where cat.code_id=?]]>
    </sql-query>
    <sql-query id="teamInviteUser">
        <![CDATA[SELECT * FROM invitees_p2p_tbl WHERE user_id=?]]>
    </sql-query>
    <sql-query id="checkApproval">
        <![CDATA[SELECT c.*,tec.*,u.name FROM  code_tbl c
        left outer join team_campaigns_tbl tec on tec.team_code_id = c.id
        left outer join user_tbl u on u.id=? WHERE c.id=?]]>
    </sql-query>
    <sql-query id="updateApproverId">
        <![CDATA[update team_campaigns_tbl set approved_by = ? WHERE team_code_id=?]]>
    </sql-query>
    <sql-query id="updateDeleterId">
        <![CDATA[update code_tbl set date_deleted = now() WHERE id=?]]>
    </sql-query>
    <sql-query id="updateCodeStatus">
        <![CDATA[update code_tbl set status = ? WHERE id=?]]>
    </sql-query>
    <sql-query id="checkP2pApproval">
        <![CDATA[select * from team_campaigns_tbl where team_code_id=?]]>
    </sql-query>
    <sql-query id="getCampaignOwnerAndAdminEmails">
        <![CDATA[(select ct.*,u.email,u.name,u.id as admin_user_id
        from code_tbl ct
        INNER JOIN user_tbl u on u.id=ct.user_id
        where ct.id=?)
        union all
        (select ct.*,u.email,u.name,u.id as admin_user_id
        from code_tbl ct
        INNER JOIN code_admin_tbl cat ON cat.code_id =ct.id
        INNER JOIN user_tbl u on u.id=cat.user_id and u.active='yes'
        WHERE ct.id=? )]]>
    </sql-query>
    <sql-query id="campaignGoalReached">
        <![CDATA[UPDATE code_tbl SET goal_reached=? WHERE id=?]]>
    </sql-query>
    <sql-query id="givingLevelsOfCampaign">
        <![CDATA[select glt.* from giving_levels_tbl glt inner join code_tbl ct on glt.code_id=ct.id where glt.code_id=? ORDER BY glt.amount ASC]]>
    </sql-query>
    <sql-query id="updateGivingLevels">
        <![CDATA[update giving_levels_tbl set quantity_left=? where id=? and code_id=?]]>
    </sql-query>
    <sql-query id="getTeamCampaignDetails">
        <![CDATA[select ct.*,u.email,u.name
        from code_tbl ct
        INNER JOIN user_tbl u on u.id=ct.user_id
        where ct.id=?]]>
    </sql-query>
    <sql-query id="getCampaignCurrency">
        <![CDATA[select cc.currency_symbol,c.id FROM code_tbl c INNER JOIN countries_currency cc ON
cc.country_id = c.country WHERE c.id=?]]>
    </sql-query>
    <sql-query id="updateCampaignAdditional">
        <![CDATA[update code_tbl set can_mailing_required=?,donation_alert_required=?,p2p_approval_required=?,p2p_offlinedonation_deny=?,donotallow_p2p_campaigns=?,team_approve=?,team_offline_deny=?,donotallow_team_campaigns=? where id=?]]>
    </sql-query>
    <sql-query id="updateCampaignAdditionalToP2P">
        <![CDATA[update code_tbl set p2p_offlinedonation_deny=? where parent_id=?]]>
    </sql-query>
    <sql-query id="updateCampaignAdditionalToTeamFundraisers">
        <![CDATA[update code_tbl ct  inner join teams_tbl tt on 
         tt.id=ct.team_id set ct.team_offline_deny=? where tt.code_id=?;]]>
    </sql-query>
    <sql-query id="addUserPaymentGateWay">
        <![CDATA[INSERT INTO code_payment_gateways_tbl(code_id, user_id,charity_id, payment_gateway_id,date_created) VALUES(?,?, ?, ?, ?)]]>
    </sql-query>
    <sql-query id='getCharityGateways'>
        <![CDATA[select * from code_payment_gateways_tbl where charity_id=?]]>
    </sql-query>
    <sql-query id='updatCharityGatewayStatus'>
        <![CDATA[update code_payment_gateways_tbl set status=? where charity_id =?]]>
    </sql-query>
    <sql-query id='checkGatewayStatus'>
        <![CDATA[select * from user_payment_gateways_tbl where account_id =? and charity_id=?]]>
    </sql-query>
    <sql-query id='updateCampaignPaymentgateway'>
        <![CDATA[update code_tbl set payment_gateway_id=? where charity_id =?]]>
    </sql-query>
    <sql-query id="getAdditionalFeatures">
        <![CDATA[select tfl.*,uflt.user_id,uflt.feature_id from features_list_tbl tfl
left outer join user_features_list_tbl uflt on uflt.feature_id=tfl.id and uflt.user_id=?]]>
    </sql-query>
    <sql-query id="saveAdditonalFeatures">
        <![CDATA[INSERT INTO user_features_list_tbl(user_id,feature_id,date_created) values(?,?,?)]]>
    </sql-query>
    <sql-query id="deleteAdditonalFeatures">
        <![CDATA[DELETE FROM user_features_list_tbl WHERE user_id = ? and feature_id = ?]]>
    </sql-query>
    <sql-query id="userFeatures">
        <![CDATA[select flt.name,uftl.* from user_features_list_tbl uftl
left outer join features_list_tbl flt on flt.id = uftl.feature_id where uftl.user_id =?]]>
    </sql-query>
    <sql-query id='updateenddate'>
        <![CDATA[update code_payment_gateways_tbl set end_date=? where code_id =? and end_date is null]]>
    </sql-query>
    <sql-query id="getCharityAccessToken">
        <![CDATA[select * from payment_gateways_tbl where charity_id=? and payment_gateway=?]]>
    </sql-query>
    <sql-query id="charityCodesWithPaymentId">
        <![CDATA[select c.*,c.id as code_id,pt.payment_gateway,pt.account_id
        from code_tbl c
        left outer join payment_gateways_tbl pt on pt.id = c.payment_gateway_id
        where c.charity_id=? and c.date_deleted is null and team_campaign ='no'
        ORDER BY c.date_created desc]]>
    </sql-query>
    <sql-query id="fundraiserwithPaymentId">
        <![CDATA[select c.*,c.id as code_id,pt.payment_gateway,pt.account_id
        from code_tbl c
        left outer join payment_gateways_tbl pt on pt.id = c.payment_gateway_id
        where c.user_id=? and c.date_deleted is null and individual = 'yes' and team_campaign = 'no'
        ORDER BY c.date_created desc]]>
    </sql-query>
    <sql-query id="getUserPaymentGateWays">
        <![CDATA[select pt.id as pgid,pt.* from payment_gateways_tbl pt where user_id=? and charity_id is null]]>
    </sql-query>
    <sql-query id="getCampaignFollowers">
        <![CDATA[select f.user_id,u.email,u.name ,u2.email as senderemail,u2.name as sendername,c.title from follow_tbl f
        left outer join entity_tbl e on e.id=f.entity_id
        left outer join code_tbl c on c.id=e.entity_id
        left outer join user_tbl u on u.id=f.user_id
        left outer join user_tbl u2 on u2.id=c.user_id
        where f.entity_id= ?]]>
    </sql-query>
    <sql-query id="">
        <![CDATA[SELECT ct.id FROM code_tbl ct
            INNER JOIN
            entity_tbl et
            ON ct.charity_id=et.entity_id  AND ct.charity_default="yes" WHERE et.slug=?;]]>
    </sql-query>
    <sql-query id="updateCodePaymentGateway">
        <![CDATA[update code_tbl set payment_gateway_id=? where id =? OR parent_id =?]]>
    </sql-query>
    <sql-query id="updateStripeAccountStatus">
        <![CDATA[UPDATE payment_gateways_tbl SET account_status=? WHERE account_id=?]]>
    </sql-query>
    <sql-query id="getAllCodeAdmins">
        <![CDATA[select c.title,c.id from code_admin_tbl cat
        inner join code_tbl c on c.id=cat.code_id
         where cat.user_id=?]]>
    </sql-query>
    <sql-query id="getAllCampaigns">
        <![CDATA[select id,title from code_tbl where user_id=? and team_campaign != "yes"
        and date_deleted IS NUll ]]>
    </sql-query>
    <sql-query id="getAllp2pcampaigns">
        <![CDATA[select tcl.team_name,tcl.team_code_id,tcl.original_code_id from code_tbl c
                 inner join team_campaigns_tbl tcl on tcl.team_code_id=c.id
                 where c.team_campaign="yes" and c.user_id=?]]>
    </sql-query>
    <sql-query id="getAllCharities">
        <![CDATA[ select cht.name_tmp,cht.id from charity_admin_tbl chaadtbl
                  inner join charity_tbl cht on cht.id= chaadtbl.charity_id
                  where chaadtbl.user_id=? and chaadtbl.date_deleted is null]]>
    </sql-query>
    <sql-query id="cancelAccount">
        <![CDATA[update user_tbl u
left outer join charity_admin_tbl cct on cct.user_id=u.id and cct.default_value=1
left outer join charity_admin_tbl cct2 on cct2.user_id=u.id and cct2.default_value!=1
left outer join code_tbl c on c.user_id=u.id
left outer join entity_tbl et on et.entity_id=u.id and et.entity_type="user"
left outer join code_tbl c2 on c2.charity_id=cct.charity_id
left outer join entity_tbl et2 on et2.entity_id=cct.charity_id and et2.entity_type="charity"
left outer join entity_tbl et3 on et3.entity_id=c.id and et3.entity_type="code"
left outer join entity_tbl et4 on et4.entity_id=c2.id and et4.entity_type="code"
set c.date_deleted=now(),cct.date_deleted=now(),cct2.date_deleted=now(),u.date_deleted=now(),et.date_deleted=now(),c2.date_deleted=now(),et3.date_deleted=now(),et4.date_deleted=now()
where u.id=?]]>
    </sql-query>
    <sql-query id="deleteElasticDataForCancelAccount">
        <![CDATA[select et.id,et2.id as campaignid,et3.id as charityid ,et4.id as charitycampaignid from entity_tbl et
left outer join code_tbl c on c.user_id=et.entity_id
left outer join charity_admin_tbl cct on cct.user_id=et.entity_id and default_value=1
left outer join user_tbl u on u.id=c.user_id
left outer join code_tbl c2 on c2.charity_id=cct.charity_id
left outer join entity_tbl et2 on et2.entity_id=cct.charity_id and et2.entity_type="charity"
left outer join entity_tbl et3 on et3.entity_id=c.id and et3.entity_type="code"
left outer join entity_tbl et4 on et4.entity_id=c2.id and et4.entity_type="code"
where et.entity_id=? and et.entity_type="user"]]>
    </sql-query>
    <sql-query id="getUserProfile">
        <![CDATA[SELECT u.id as user_id,u.name,u.email ,up.home_phone,up.country FROM user_tbl u INNER JOIN user_profile_tbl up ON up.user_id = u.id WHERE u.id=?;]]>
    </sql-query>
    <sql-query id="enableStripeForUser">
        <![CDATA[ INSERT INTO user_features_list_tbl(user_id,feature_id)
        VALUES (?,1)]]>
    </sql-query>
    <sql-query id="getCharityDefaultCampaignWithEntityid">
        <![CDATA[select ct.id,ct.title,et.slug from charity_tbl ch
                inner join code_tbl ct on ct.charity_id=ch.id and ct.charity_default="yes"
                inner join entity_tbl et on et.entity_id=ch.id and et.entity_type="charity"
                where et.entity_id=? AND ct.date_deleted IS NULL]]>
    </sql-query>
    <sql-query id="updateUserFollowingPeople">
        <![CDATA[update follow_tbl f
      inner join entity_tbl et on et.id = f.entity_id and et.entity_type = 'user'
      set et.nooffollowers = et.nooffollowers - 1
      where f.user_id = ?]]>
    </sql-query>
    <sql-query id="updateUserFollowingCharities">
        <![CDATA[ update follow_tbl f
      inner join entity_tbl et on et.id = f.entity_id and et.entity_type = 'charity'
      set et.nooffollowers = et.nooffollowers - 1
      where f.user_id = ?]]>
    </sql-query>
    <sql-query id="updateUserFollowingCampaigns">
        <![CDATA[update follow_tbl f
      inner join entity_tbl et on et.id = f.entity_id and et.entity_type = 'code'
      set et.nooffollowers = et.nooffollowers - 1
      where f.user_id = ?]]>
    </sql-query>
    <sql-query id="updateUserFollowers">
        <![CDATA[update follow_tbl f
      inner join entity_tbl et on et.entity_id = f.user_id and et.entity_type = 'user'
      set et.following_users = et.following_users - 1
      where f.entity_id = ?]]>
    </sql-query>
    <sql-query id="updateUserCharityFollowers">
        <![CDATA[update user_tbl u
      left outer join charity_admin_tbl cd on cd.user_id = u.id and cd.default_value = 1
      left outer join charity_tbl c on c.id = cd.charity_id
      left outer join entity_tbl et on et.entity_id = c.id and et.entity_type = 'charity'
      left outer join follow_tbl f on f.entity_id = et.id
      left outer join entity_tbl eet on eet.entity_type = 'user'
      and eet.entity_id = f.user_id
      set eet.following_charities = eet.following_charities - 1 where cd.user_id = ? and eet.id is not null]]>
    </sql-query>
    <sql-query id="updateUserCharityCampaignFollowers">
        <![CDATA[ update user_tbl u
      left outer join charity_admin_tbl cd on cd.user_id = u.id and cd.default_value = 1
      left outer join code_tbl c on c.charity_id = cd.charity_id and c.user_id is null
      left outer join entity_tbl et on et.entity_id = c.id and et.entity_type = 'code'
      left outer join follow_tbl f on f.entity_id = et.id
      left outer join entity_tbl eet on eet.entity_type = 'user'
      and eet.entity_id = f.user_id
      set eet.following_codes = eet.following_codes - 1 where cd.user_id = ? and eet.id is not null]]>
    </sql-query>
    <sql-query id="updateUserCampaignFollowers">
        <![CDATA[ update user_tbl u
      left outer join code_tbl c on c.user_id = u.id and c.charity_id is null
      left outer join entity_tbl et on et.entity_id = c.id and et.entity_type = 'code'
      left outer join follow_tbl f on f.entity_id = et.id
      left outer join entity_tbl eet on eet.entity_type = 'user'
      and eet.entity_id = f.user_id
      set eet.following_codes = eet.following_codes - 1 where c.user_id = ? and eet.id is not null]]>
    </sql-query>
    <sql-query id="teamCreation">
        <![CDATA[insert into teams_tbl set ?]]>
    </sql-query>
    <sql-query id="teamInvitation">
        <![CDATA[insert into team_invitees_tbl set ?]]>
    </sql-query>
    <sql-query id="checkTeamInvitee">
        <![CDATA[select *,(select password_salt from user_tbl where id=?) as password_salt from team_invitees_tbl where team_id=? and user_id=?]]>
    </sql-query>
    <sql-query id="deleteTeamInvitee">
        <![CDATA[update team_invitees_tbl set deleted_by=?,action_date=? where team_id=? and user_id=?]]>
    </sql-query>
    <sql-query id="getTeamDetails">
        <![CDATA[select tt.*,cc.currency_symbol as team_currency,ut.name as team_captain,ut.email as team_captain_email,upt.profile_pic_url as team_captain_pic,et.slug as team_captaign_slug,ct.title as main_campaign_name,etc.slug as team_slug from teams_tbl tt
         left outer join user_tbl ut on tt.tc_user_id=ut.id left outer join code_tbl ct on ct.id=tt.code_id left outer join user_profile_tbl upt on upt.user_id=ut.id inner join entity_tbl et on et.entity_id=ut.id AND et.entity_type="user" left outer join countries_currency cc on cc.country_id=ct.country  inner join entity_tbl etc on etc.entity_id=tt.id and etc.entity_type="team" where tt.id=?
]]>
    </sql-query>
    <sql-query id="teamCampDetails">
        <![CDATA[select ut.name as campaign_owner_name,ut.email as campaign_owner_email,ct.title as campaign_name from code_tbl ct inner join user_tbl ut on ct.user_id=ut.id where ct.id=?]]>
    </sql-query>
    <sql-query id="getTeamCaptainName">
        <![CDATA[select ut.name as team_captain_name,ut.email as team_captain_email,et.slug as team_campaign_slug,tt.team_name as team_name from user_tbl ut inner join teams_tbl tt on tt.tc_user_id=ut.id inner join entity_tbl et on et.entity_id=tt.id where tt.id=?]]>
    </sql-query>
    <sql-query id="getTeamMembersDetails">
        <![CDATA[select tit.*,tit.created as created,etu.slug AS user_slug,etc.slug AS code_slug,(select name from user_tbl where id=tit.user_id) as name ,(select profile_pic_url from user_profile_tbl where user_id=tit.user_id) as profile_pic_url
        ,ct.title as title,ct.status,cc.currency_symbol,ct.goal as goal,
        etc.noof_donations as noof_donations,etc.noof_donors as noof_donors
        from team_invitees_tbl tit
        inner join teams_tbl tt on tt.id=tit.team_id
        inner join entity_tbl etu ON etu.entity_id = tit.user_id AND etu.entity_type = "user"
        LEFT OUTER JOIN code_tbl ct ON ct.team_id=tt.id AND ct.user_id = tit.user_id
        left outer join countries_currency cc on cc.country_id=ct.country
        LEFT OUTER JOIN entity_tbl etc ON etc.entity_id = ct.id AND etc.entity_type="code"
        where tit.team_id=? AND tit.deleted_by IS NULL
        ]]>
    </sql-query>
    <sql-query id="getTeamFundraisersCount">
        <![CDATA[select count(id) as noOfFundraisers from team_invitees_tbl where team_id=?
        and created="yes" and deleted_by is null;]]>
    </sql-query>
    <sql-query id="getTeamCaptainName">
        <![CDATA[select ut.name as team_captain_name,ut.email as team_captain_email,et.slug as team_campaign_slug,tt.team_name as team_name from user_tbl ut inner join teams_tbl tt on tt.tc_user_id=ut.id inner join entity_tbl et on et.entity_id=tt.id where tt.id=?]]>
    </sql-query>
    <sql-query id="updateTeamDonation">
        <![CDATA[update entity_tbl set noof_donations=noof_donations+? where entity_id=? AND entity_type="team"]]>
    </sql-query>
    <sql-query id="updateTeamDonars">
        <![CDATA[update entity_tbl set noof_donors = noof_donors + 1 where entity_id=? and entity_type='team']]>
    </sql-query>
    <sql-query id="getEntityOfTeam">
        <![CDATA[select * from entity_tbl where entity_id=? AND entity_type="team"]]>
    </sql-query>
    <sql-query id="getCampaignTeamsCount">
        <![CDATA[select count(*) as noOfTeams from code_tbl ct inner join teams_tbl tt on ct.id=tt.code_id where ct.id=?]]>
    </sql-query>
    <sql-query id="getTeamIndividualDetails">
        <![CDATA[select (select name from user_tbl where id=tt.tc_user_id) as team_creator,
        (select count(*) from code_tbl where team_id=tt.id) as noOfFundraisers,
        et.noof_donations as noOfDonations,et.noof_donors as noOfDonors,
        tt.team_logo as team_picture_url,tt.team_name as team_name,
        ct.title,ct.beneficiary,cht.name_tmp as charity_name,et.slug as code_text from teams_tbl tt inner join code_tbl ct on tt.code_id=ct.id
        inner join entity_tbl et on tt.id=et.entity_id and et.entity_type="team"
        left outer join charity_tbl cht on cht.id=ct.charity_id
        AND et.entity_type="team" where ct.id=?]]>
    </sql-query>
    <sql-query id="gettingTeamDetails">
        <![CDATA[select * from teams_tbl where id=?]]>
    </sql-query>
    <sql-query id="updatingTeamMainCampaign">
        <![CDATA[update entity_tbl set noof_donations = noof_donations +? where entity_id=? and entity_type="code"]]>
    </sql-query>
    <sql-query id="insertTeamInElastic">
        <![CDATA[select tt.*,ut.name as creator_name,et.slug as team_slug from teams_tbl tt inner join user_tbl ut on ut.id=tt.tc_user_id inner join entity_tbl et on et.entity_id=tt.id and et.entity_type='team' where tt.id=?]]>
    </sql-query>
    <sql-query id="updatingTeamCreated">
        <![CDATA[update team_invitees_tbl set created = 'yes',action_date=?  where team_id=? and user_id=? ]]>
    </sql-query>
    <sql-query id="getMainCampaignInfo">
        <![CDATA[select ct.*,cc.currency_code,cc.currency_symbol,upt.country as user_country from code_tbl ct
         inner join user_profile_tbl upt on upt.user_id=ct.user_id left outer join countries_currency cc on cc.country_id=ifnull(ct.country,upt.country)
         where ct.id=?]]>
    </sql-query>
    <sql-query id="insertingInviteesdata">
        <![CDATA[insert into team_invitees_tbl (team_id,user_id,created,is_admin,invited_date) values (?,?,'no','no',?)]]>
    </sql-query>
    <sql-query id="insertReportCampaign">
        <![CDATA[INSERT INTO report_campaigns_tbl(code_id,email,name,cell_phone,description,date_created,evidence_picture_url,country) values(?,?,?,?,?,?,?,?)]]>
    </sql-query>
    <sql-query id="reportedCampaignStatistics">
        <![CDATA[select c.title,c.code_slug,rct.* from report_campaigns_tbl rct
          inner join code_tbl c on c.id=rct.code_id order by rct.date_created desc]]>
    </sql-query>
    <sql-query id="getCampaignsAdmins">
        <![CDATA[select u.email,u.name,u2.email as senderemail,u2.name as sendername,c.title from code_tbl c
inner join code_admin_tbl cat on cat.code_id=c.id
inner join user_tbl u on cat.user_id=u.id
inner join user_tbl u2 on c.user_id=u2.id
where c.id=?]]>
    </sql-query>
    <sql-query id="getMyTeams">
        <![CDATA[SELECT tt.*,ct.title as camp_name,ct.id as maincampaignid,ct.beneficiary,cht.name_tmp as charity_name,
      (SELECT count(*) FROM code_tbl WHERE team_id=tt.id AND status="published") AS campaigns_count,
      et.noof_donations,
      'yes' AS is_admin,
      et.slug,
      (select name from user_tbl where id=tt.tc_user_id) as creator_name,
      et.noof_donors
      FROM teams_tbl tt INNER JOIN
      entity_tbl et ON tt.id = et.entity_id AND et.entity_type="team"
      left outer join code_tbl ct ON ct.id = tt.code_id
      left outer join charity_tbl cht on cht.id=ct.charity_id
      WHERE tc_user_id=?
      UNION ALL
      SELECT tt.*,ct.title,ct.id as maincampaignid,ct.beneficiary,cht.name_tmp as charity_name,
      (SELECT count(*) FROM code_tbl WHERE team_id=tt.id AND status="published") AS no_of_campaigns,
      et.noof_donations,
      tit.is_admin,
      et.slug,
      (select name from user_tbl where id=tt.tc_user_id) as creator_name,
      et.noof_donors
      FROM teams_tbl tt INNER JOIN team_invitees_tbl tit ON tt.id=tit.team_id and tit.deleted_by is null
      INNER JOIN entity_tbl et ON et.entity_id=tt.id AND et.entity_type="team"
      left outer join code_tbl ct ON ct.id = tt.code_id
      left outer join charity_tbl cht on cht.id=ct.charity_id
      WHERE tit.user_id=? AND tit.created='yes'  ORDER BY id DESC]]>
    </sql-query>
    <sql-query id="elastic-team-details">
        <![CDATA[select tt.team_logo,ct.title as camp_name,ct.beneficiary,cht.name_tmp as charity_name,(select count(*) from code_tbl where team_id=tt.id) as noOfFundraisers,et.noof_donations as noOfDonations,et.noof_donors as noOfDonors from teams_tbl tt inner join code_tbl ct on tt.code_id=ct.id inner join
        entity_tbl et on et.entity_id=tt.id left outer join charity_tbl cht on cht.id=ct.charity_id
      where tt.id=? AND tt.status="published"]]>
    </sql-query>
    <sql-query id="gettingTeamData">
        <![CDATA[
        select tt.*,et.slug,ct.status as maincampstatus,ct.date_deleted as maincampdatedeleted,ct.title as main_campaign_name,ct.id as maincampaignid,
      (select ut.email from teams_tbl ttt inner join code_tbl ct on ct.id=ttt.code_id
      inner join user_tbl ut on ut.id=ct.user_id where ttt.id=?) as campaignowneremail,
      tt.status as teamstatus from teams_tbl tt inner join entity_tbl et on et.entity_id=tt.id and et.entity_type="team"
      left outer join code_tbl ct on ct.id=tt.code_id where tt.id=? and tt.tc_user_id=?;]]>
    </sql-query>
    <sql-query id="makingTeamAdmin">
        <![CDATA[update team_invitees_tbl set is_admin='yes' where team_id=? and user_id=?]]>
    </sql-query>
    <sql-query id="deletingTeamInvitee">
        <![CDATA[update team_invitees_tbl set deleted_by=?,action_date=? where team_id=? and user_id=?]]>
    </sql-query>
    <sql-query id="updateIntoCode">
        <![CDATA[update code_tbl set date_deleted=now() where team_id=? and user_id=?]]>
    </sql-query>
    <sql-query id="gettingTeamMembers">
        <![CDATA[select tit.*,ut.name,ut.email from team_invitees_tbl tit inner join user_tbl ut on ut.id=tit.user_id where tit.team_id=? and tit.deleted_by is null]]>
    </sql-query>
    <sql-query id="updateTeamDetails">
        <![CDATA[update teams_tbl set team_name=?,team_description=?,team_logo=?,donot_allow_join=?,support_multiple_campaigns=?,check_p2p=? where id=?]]>
    </sql-query>
    <sql-query id="recurrenceUpdate">
        <![CDATA[
        update recurring_gift_tbl set card_id=? where id=?]]>
    </sql-query>
    <sql-query id="entityUpdate">
        <![CDATA[update entity_tbl set slug=? where entity_id=? and entity_type=?]]>
    </sql-query>
    <sql-query id="checkingUserTeam">
        <![CDATA[select tit.*,ct.code_text as slug from team_invitees_tbl tit inner join code_tbl ct on ct.team_id=tit.team_id  where tit.user_id=? and tit.team_id=?]]>
    </sql-query>
    <sql-query id='reportcampaigndetails'>
        <![CDATA[select c.title,c.code_text,
    IFNULL(ch.name_tmp,u.name) as campaignowner,
    count(rct.code_id) as reportcount,
    IFNULL(cct.email_address,u.email) as campemail from code_tbl c
    left outer join charity_tbl ch on ch.id = c.charity_id
    left outer join charity_claim_tbl cct on cct.charity_id =ch.id
    left outer join user_tbl u on u.id = c.user_id
    left outer join report_campaigns_tbl rct on rct.code_id = c.id where c.id =?
    ]]>
    </sql-query>
    <sql-query id="gettingTeamCurrency">
        <![CDATA[ select cc.currency_symbol as currency_symbol from teams_tbl tt left outer join code_tbl ct on tt.code_id=ct.id left outer join countries_currency cc on cc.country_id=ct.country where tt.id=?]]>
    </sql-query>
    <sql-query id="newteamCampaignAdmin">
        <![CDATA[select tc.team_name, tc.team_logo, e.slug, u.name,
    up.profile_pic_url, up.background_pic_url,
    e.noofposts, e.nooffollowers,c.title,te.slug as teamslug,
    tcn.title as maincampaignname,
    ec.slug as mainCampaignSlug
    from code_tbl c
        inner join user_tbl u on u.id= c.user_id
        inner join user_profile_tbl up on up.user_id = u.id
        inner join entity_tbl e on e.entity_id = u.id and e.entity_type ='user'
        inner join entity_tbl te on te.entity_id = c.team_id and te.entity_type='team'
        left outer join teams_tbl tc on c.team_id = tc.id
        left outer join code_tbl tcn on tcn.id = tc.code_id
        left outer join entity_tbl ec on ec.entity_id = tc.code_id and ec.entity_type ='code'
        where c.id =?]]>
    </sql-query>
    <sql-query id="gettingPaymentData">
        <![CDATA[ select * from payment_gateways_tbl where id=?]]>
    </sql-query>
    <sql-query id="checkTeamData">
        <![CDATA[select * from team_invitees_tbl where team_id=? and user_id=?]]>
    </sql-query>
    <sql-query id="CheckCodeWithTeamID">
        <![CDATA[select * from code_tbl where user_id=? and team_id=?]]>
    </sql-query>
    <sql-query id="checkAdmin">
        <![CDATA[SELECT * FROM team_invitees_tbl WHERE team_id=? AND user_id=? AND is_admin='yes';]]>
    </sql-query>
    <sql-query id="gettingAdminTeam">
        <![CDATA[
        SELECT tt.*,et.slug,tit.is_admin,ct.status as maincampstatus,ct.date_deleted as maincampdatedeleted,ct.title as main_campaign_name,ct.id as maincampaignid,tt.status as teamstatus,(select ut.email from teams_tbl ttt inner join code_tbl ct on ct.id=ttt.code_id
        inner join user_tbl ut on ut.id=ct.user_id where ttt.id=?) as campaignowneremail  from teams_tbl tt
        INNER JOIN entity_tbl et ON et.entity_id=tt.id AND et.entity_type="team"
        INNER JOIN team_invitees_tbl tit ON tit.team_id=tt.id
        inner join code_tbl ct on ct.id=tt.code_id
        WHERE tit.team_id=? AND tit.user_id=? AND tit.is_admin='yes']]>
    </sql-query>
    <sql-query id="getTeamIds">
        <![CDATA[
      select tt.*,ut.name,ut.email,tt.team_name as team_name from teams_tbl tt inner join user_tbl ut on ut.id=tt.tc_user_id
        where tt.code_id=?]]>
    </sql-query>
    <sql-query id="getTeamEmailsAndNames">
        <![CDATA[
  select tt.*,ut.name,ut.email,ct.title as camp_name from team_invitees_tbl tt
 inner join user_tbl ut on ut.id=tt.user_id
 inner join code_tbl ct on ct.team_id=tt.team_id and ct.user_id=tt.user_id
  where tt.team_id in (?) and tt.created="yes" and tt.deleted_by is null;]]>
    </sql-query>
    <sql-query id="updatingTeamFundraisersDate">
        <![CDATA[
   update code_tbl set end_date=?,type=? where team_id in(?)]]>
    </sql-query>
    <sql-query id="updateTeamPublishStatus">
        <![CDATA[
    update teams_tbl set status="published" where id=?]]>
    </sql-query>
    <sql-query id="updateUnPublishStatus">
        <![CDATA[
    update teams_tbl set status="draft" where id=?]]>
    </sql-query>
    <sql-query id="getAllP2pCamps">
        <![CDATA[
    select tct.team_code_id as id from code_tbl ct inner join team_campaigns_tbl tct on
    ct.id=tct.original_code_id where  ct.id=? and tct.approved_by is not null]]>
    </sql-query>
    <sql-query id="getAllTeamCodes">
        <![CDATA[
    select * from code_tbl where team_id in(?)]]>
    </sql-query>
    <sql-query id="updateTeamStatus">
        <![CDATA[
    update teams_tbl set status=? where id in (?)
        ]]>
    </sql-query>
    <sql-query id="gettingTeamIds">
        <![CDATA[select * from teams_tbl where code_id=?]]>
    </sql-query>
    <sql-query id="updateAllSubCampaign">
        <![CDATA[
    update code_tbl set status="draft",show_in_search=0 where id in(?)]]>
    </sql-query>
    <sql-query id="updateAllSubCampaignPublish">
        <![CDATA[
    update code_tbl set status="published",show_in_search=1 where id in(?)]]>
    </sql-query>
    <sql-query id="setAsCharityDefault">
        <![CDATA[ UPDATE code_tbl  SET  charity_default="yes" WHERE id=?]]>
    </sql-query>
    <sql-query id="checkCharityHasDefault">
        <![CDATA[SELECT * FROM code_tbl WHERE charity_id=? AND charity_default="yes" AND date_deleted IS NULL]]>
    </sql-query>
    <sql-query id="checkUserOwnerForCharity">
        <![CDATA[SELECT cc.* FROM charity_claim_tbl cc
        INNER JOIN
        user_tbl ut ON ut.email=cc.email_address WHERE ut.id=? AND cc.charity_id=?;]]>
    </sql-query>
    <sql-query id="givingLevelsOfCamp">
        <![CDATA[
select glt.* from giving_levels_tbl glt
inner join code_tbl ct on glt.code_id=ct.id
   where glt.code_id=? and ((glt.quantity!=glt.quantity_left) or (glt.quantity_left=0  and glt.quantity=0))  limit 2 offset ?
  ]]>
    </sql-query>
    <sql-query id="getCampaignExtraGivingLevels">
        <![CDATA[
  select glt.* from giving_levels_tbl glt inner join code_tbl ct on glt.code_id=ct.id
   where glt.code_id=?  limit 2 offset ?
  ]]>
    </sql-query>
    <sql-query id="countOfGivingLevels">
        <![CDATA[
  select count(glt.id) as count from giving_levels_tbl glt inner join code_tbl ct on glt.code_id=ct.id
   where glt.code_id=? and ((glt.quantity!=glt.quantity_left) or (glt.quantity_left=0  and glt.quantity=0))
  ]]>
    </sql-query>
    <sql-query id="getDonorCommentCount">
        <![CDATA[
select count(code_id) as donors_count from transaction_tbl where code_id=?
]]>
    </sql-query>
    <sql-query id="collectAllDonarCards">
        <![CDATA[select * from credit_card_tbl where user_id=? ]]>
    </sql-query>
    <sql-query id="campaignBasedOnCategory">
        <![CDATA[ select
        c.id,
        c.title as name,
        IFNULL(o.profile_pic_url,upt.profile_pic_url) as org_pic_url,
        IFNULL(o.background_pic_url,upt.background_pic_url) as background_pic_url,
        chat.name_tmp as organization_name,
        c.code_text as code_text,
        c.team_campaign as teamcampaign,
        e.entity_type,
        c.status,
        c.individual,
        c.code_picture_url as profile_pic_url,
        c.state as state,
        ch.name as campaign_creator,
        IFNULL(c.beneficiary,'') as beneficiary,
        c.city as city,
        IFNULL(c.charity_id,'') as charity_id,
        c.suggested_donation,
        c.code_text as wecode,
        c.goal as goal,
        c.can_mailing_required,
        c.end_date,
        c.type,
        c.donotallow_p2p_campaigns,
        c.p2p_approval_required,
        c.team_approve,
        c.user_id as campaign_creator_id,
        e.entity_id as entityid,c.description,e.nooffollowers,
        e.noof_donors,
        e.slug,
        e.noof_donations as donation,
        TRUNCATE((e.noof_donations/c.goal)*100,2) as donation_progress,
        cct.currency_code,
        cct.currency_symbol,
        c.user_id,
        IFNULL(c.charity_id,c.user_id)  as fundraiser_userid,
        IFNULL(c.charity_id,c.id) as fundraiser_codeid,
        IFNULL(c.charity_id,'fundraiser') as fundraiser,
        c.individual
from code_tbl c
inner join
    entity_tbl e on e.entity_id=c.id and e.entity_type='code' and e.date_deleted is null and c.status="published" and c.show_in_search=1 and c.end_date >= CURDATE()
    left outer join charity_tbl chat on chat.id=c.charity_id
    and chat.charity_from != 'self'
    left outer join organization_tbl o on o.id = chat.organization_id
    left outer join user_tbl ch on ch.id= c.user_id
    left outer join user_profile_tbl upt on upt.user_id = ch.id
    left outer join countries_currency cct on cct.country_id = ifnull(chat.country,upt.country)
   where c.goal>e.noof_donations
   ]]>
    </sql-query>
    <sql-query id="getParentCampDetails">
        <![CDATA[select c.team_offline_deny  from teams_tbl t
              inner join code_tbl c on c.id=t.code_id
            where t.id=?]]>
    </sql-query>
    <sql-query id="deleteTeam">
        <![CDATA[delete from teams_tbl where id=?]]>
    </sql-query>
    <sql-query id="gettingCampTeamCaptains">
        <![CDATA[select tc_user_id from teams_tbl where code_id=?]]>
    </sql-query>
    <sql-query id="deleteTeamInviteesRecord">
        <![CDATA[delete from team_invitees_tbl where team_id=?]]>
    </sql-query>
    <sql-query id="insertingIntoUserTbl">
        <![CDATA[INSERT INTO user_tbl(name,email,verification_key,date_created,active) values(?,?,?,?,?)]]>
    </sql-query>
    <sql-query id="updateInvitation">
        <![CDATA[update team_invitees_tbl set deleted_by=?,action_date=? where team_id=? and user_id=?]]>
    </sql-query>
    <sql-query id="getUserCardDetails">
        <![CDATA[select * from credit_card_tbl where token=? or id=?]]>
    </sql-query>
    <sql-query id="getTotalDonorsCOunt">
        <![CDATA[select count(*) as count from transaction_tbl where code_id=?]]>
    </sql-query>
    <sql-query id="getCampaignDonorsList">
        <![CDATA[select t.user_id,u.email,u.name from transaction_tbl t
                 inner join user_tbl u on u.id=t.user_id
                where t.code_id=?]]>
    </sql-query>
    <sql-query id="getTeamAdmins">
        <![CDATA[select tc_user_id as userid from teams_tbl where id=?
        union all
        select user_id as userid from team_invitees_tbl where team_id=? and is_admin="yes"]]>
    </sql-query>
    <sql-query id="updatingTeamInvitees">
        <![CDATA[update team_invitees_tbl set code_id=?,action_date=?,created=? where team_id=? and user_id=?]]>
    </sql-query>
    <sql-query id="getCreatedStatus">
        <![CDATA[select tt.team_name,tt.id AS team_id,tt.code_id as codeid,tit.*,ct.code_text from teams_tbl tt
inner join team_invitees_tbl tit on tit.team_id=tt.id
left outer join code_tbl ct on ct.id=tt.code_id
 where tit.user_id=? and tit.created="no" and tit.deleted_by is null]]>
    </sql-query>
    <sql-query id="campaignsCountBasedOnCategory">
        <![CDATA[ select
         count(c.id) as count
from code_tbl c
inner join
    entity_tbl e on e.entity_id=c.id and e.entity_type='code' and e.date_deleted is null and c.status="published" and c.show_in_search=1 and c.donotallow_team_campaigns="no" and c.donotallow_p2p_campaigns="no"
    left outer join charity_tbl chat on chat.id=c.charity_id
    and chat.charity_from != 'self'
    left outer join organization_tbl o on o.id = chat.organization_id
    left outer join user_tbl ch on ch.id= c.user_id
    left outer join user_profile_tbl upt on upt.user_id = ch.id
    left outer join countries_currency cct on cct.country_id = ifnull(chat.country,upt.country)
   where c.goal>e.noof_donations
   and c.end_date >= CURDATE()
   ]]>
    </sql-query>
    <sql-query id="getP2pCampaignDetails">
        <![CDATA[ select parent_id from code_tbl where user_id=? and team_campaign="yes"
]]>
    </sql-query>
    <sql-query id="getCharityDetailsForGatewaycreation">
        <![CDATA[select CONCAT(cl.first_name,cl.last_name) as name,
            cl.email_address as email_address,
            o.title as title,
    o.full_description as description,
        ch.id as commonid,
            cct.currency_code,
            cut.country_code
            from charity_tbl ch
      #left outer join charity_tbl ch on ch.id = c.charity_id
      left outer join organization_tbl o on o.id = ch.organization_id
      left outer join charity_claim_tbl cl on cl.charity_id = ch.id
     # left outer join user_tbl u on u.id = IFNULL(cl.payment_user_id,c.user_id)
     # left outer join user_profile_tbl up on up.user_id = u.id
      left outer join countries_currency cct on cct.country_id = ch.country
      left outer join countries_tbl cut on cut.id = ch.country
      where ch.id =?]]>
    </sql-query>
    <sql-query id='updateCharityEin'>
        <![CDATA[update charity_tbl set ein=? where id=?]]>
    </sql-query>
    <sql-query id="monthlyDonationStatus">
        <![CDATA[ INSERT INTO `recurring_gift_status_tbl`
        (`month`,`year`,`recurring_id`,`status`,`date_created`,`date_updated`) VALUES (?,?,?,?,?,?);]]>
    </sql-query>
    <sql-query id="updateMonthlyDonationStatus">
        <![CDATA[ UPDATE recurring_gift_status_tbl SET status=? WHERE recurring_id=? AND month=? AND year=?]]>
    </sql-query>
    <sql-query id="getMonthlyDonationStatus">
        <![CDATA[ SELECT * FROM recurring_gift_status_tbl WHERE recurring_id=? AND month=? AND year=?]]>
    </sql-query>
    <sql-query id="getStripeData">
        <![CDATA[select * from recurring_gift_tbl where subscription_id=? and customer_id=? ]]>
    </sql-query>
    <sql-query id="getDetailsForCancel">
        <![CDATA[select rgt.*,c.charity_id as codecharityid,c.user_id as codeuserid,c.team_id as codeteamid,pgt.account_id,cct.token as creditcardtoken from recurring_gift_tbl rgt
left outer join code_tbl c on c.id=rgt.code_id
left outer join credit_card_tbl cct on cct.id=rgt.card_id
left outer join payment_gateways_tbl pgt on pgt.id=c.payment_gateway_id
where rgt.customer_id=? and rgt.subscription_id=?]]>
    </sql-query>
    <sql-query id="updateOccurences">
        <![CDATA[update recurring_gift_tbl set noofoccurences=? where id=?]]>
    </sql-query>
    <sql-query id="getCharityGateWayAccountDetails">
        <![CDATA[select ch.id as charity_id,
ch.name_tmp as name_tmp,
ch.name_tmp as campaigntitle,
cc.currency_code as currency,
pt.payment_gateway,
pt.access_token,
pt.account_id,
pt.account_status as wepay_account_state,
ch.verified
 from charity_tbl ch
left outer join payment_gateways_tbl pt on pt.charity_id = ch.id
left outer join organization_tbl o on o.id = ch.organization_id
left outer join countries_currency cc on cc.country_id = ch.country
where ch.id =?
        ]]>
        </sql-query>
<sql-query id="updateCharityAmount">
<![CDATA[update entity_tbl set noof_donations=noof_donations+? where entity_id=? and entity_type=?]]>
</sql-query>
<sql-query id="updateCharityDonorsCount">
        <![CDATA[update entity_tbl set noof_donors = noof_donors + 1 where entity_id= ? and entity_type=?]]>
    </sql-query>
    <sql-query id="getCharityDonars">
        <![CDATA[select u.name,u.date_verified,u.active,up.profile_pic_url,t.id,t.amount,
          t.transaction_date,t.created_date,t.anonymous,
          t.offline,t.hide_amount,t.donor_comment,et.slug,
        cct.currency_code, cct.currency_symbol
        from user_tbl u
        inner join transaction_tbl t on t.user_id = u.id
        inner join user_profile_tbl up on up.user_id = u.id
        inner join entity_tbl et on et.entity_id = u.id and et.entity_type="user"
        inner join charity_tbl ct on ct.id = t.charity_id and t.code_id is null
        left outer join countries_currency cct on cct.country_id = ct.country
        where t.charity_id=?
        order by t.transaction_date desc
       LIMIT 5 OFFSET ?]]>
    </sql-query>
    <sql-query id="charityDonarsValidationCount">
        <![CDATA[select * from transaction_tbl where charity_id=? AND user_id=? and code_id is null]]>
    </sql-query>
    <sql-query id="getCampaignDonors">
        <![CDATA[select u.name, up.profile_pic_url,u.active,t.amount, t.transaction_date,t.created_date,t.anonymous,t.donor_comment, t.hide_amount,et.slug,
        cct.currency_code, cct.currency_symbol
        from user_tbl u
        inner join transaction_tbl t on u.id = t.user_id
        inner join user_profile_tbl up on up.user_id = u.id
        left outer join code_tbl ct on ct.id=t.code_id
        inner join entity_tbl et on et.entity_id = u.id and et.entity_type ='user'
        left outer join charity_tbl cht on cht.id = t.charity_id
        left outer join countries_currency cct on cct.country_id= ifnull(cht.country,ct.country)
        where t.code_id=?
        order by t.transaction_date desc
        LIMIT 5 offset ?]]>
    </sql-query>
    <sql-query id="cancelStripeForExpiredCampaigns">
        <![CDATA[select c.*,rgt.subscription_id,rgt.customer_id,rgt.id as recurrenceid,pgt.account_id from code_tbl c
inner join recurring_gift_tbl rgt on rgt.code_id=c.id and payment_gateway="stripe" and subscription_state="active"
left outer join payment_gateways_tbl pgt on pgt.id=c.payment_gateway_id

where c.end_date<=now() or c.date_deleted is not null]]>
    </sql-query>
    <sql-query id="getUserBasedOnTeam">
        <![CDATA[select ct.title,ut.name,ut.email,tt.* from teams_tbl tt
inner join code_tbl ct on tt.code_id=ct.id
inner join user_tbl ut on ut.id=tt.tc_user_id where tt.code_id=?]]>
    </sql-query>
    <sql-query id="getGuestDonorsDetails">
        <![CDATA[select ut.*,ct.title,ct.code_picture_url,ct.code_text as code_slug from transaction_tbl tl inner join user_tbl ut
         on ut.id=tl.user_id inner join code_tbl ct on ct.id=tl.code_id and ut.password_salt is null]]>
    </sql-query>
    <sql-query id="getCountryid">
        <![CDATA[select * from countries_tbl where country_code=?]]>
    </sql-query>
    <sql-query id="getStatesBasedOnCountryid">
        <![CDATA[select * from states_tbl where country_id=?]]>
    </sql-query>
    <sql-query id="userMonthlyDonationDelete">
  <![CDATA[update recurring_gift_tbl set subscription_state="cancelled",date_deleted=now() where user_id=?]]>
    </sql-query>
    <sql-query id="getUserPaymentGateway">
            <![CDATA[select rc.*,pgt.account_id,pgt.id as paymentgatewayid from recurring_gift_tbl rc
                inner join payment_gateways_tbl pgt on ifnull(pgt.charity_id,pgt.user_id)=rc.charity_id
                where rc.id=?]]>
    </sql-query>
    <sql-query id="getUserMonthlyDonations">
            <![CDATA[select * from recurring_gift_tbl where user_id=? and payment_gateway=?]]>
    </sql-query>
    <sql-query id="getAllMonthlyDonation">
        <![CDATA[select ct.title name  from recurring_gift_tbl rgt inner join code_tbl
           ct on ct.id=rgt.code_id where rgt.user_id=?
           union all
           select ct.name_tmp name  from recurring_gift_tbl rgt inner join charity_tbl
          ct on ct.id=rgt.charity_id where rgt.user_id=? and rgt.code_id is null]]>
    </sql-query>
    <sql-query id="getCampaignOwner">
        <![CDATA[select u.name,u.email,ct.title,ct.code_text,ct.code_picture_url from user_tbl u inner join code_tbl ct on ct.user_id=u.id where ct.id=? ]]>
    </sql-query>
    <sql-query id="updateCharityAppFeeForCodes">
        <![CDATA[update code_tbl set app_fee=? where charity_id=?]]>
    </sql-query>
    <sql-query id="moveDeletedUser">
        <![CDATA[INSERT INTO cancel_user_tbl SET ?]]>
    </sql-query>
    <sql-query id="deleteUser">
        <![CDATA[ DELETE FROM user_tbl WHERE id=?]]>
    </sql-query>
    <sql-query id="charityAdmins">
        <![CDATA[select * from charity_admin_tbl where charity_id=? and date_deleted is null]]>
    </sql-query>
    <sql-query id="campaignComments">
        <![CDATA[(SELECT
        COALESCE(u.name,o.title ) as creator_name,
        COALESCE(up.profile_pic_url,o.profile_pic_url) as creator_pic,
        COALESCE(u.id,c.id) as creator_id,
        sut.id, sut.entity_id, et.entity_type,sut.content,sut.date_posted,
        sut.in_reply_id,sut.original_entity_id,sut.status_type,sut.retweets,sut.reply_count,sut.image_url,
        sut.headline,
        et.slug as commonSlug,
        etparent.slug as parentSlug,
        COALESCE(uparent.name,oparent.title ) as parent_creator_name,
        COALESCE(upparent.profile_pic_url,oparent.profile_pic_url) as parent_creator_pic,
        COALESCE(uparent.id,cparent.id) as parent_creator_id,
        COALESCE(etparent.entity_type) as parent_type,
        mt.metadata as metadata,
        mt.code_json as code_tmpl
        FROM status_update_link_tbl sult
        INNER JOIN status_update_tbl sut ON sut.id = sult.post_id and sut.date_deleted is null
        left outer join metadata_tbl mt on mt.post_id = sut.id
        INNER JOIN entity_tbl et ON sut.entity_id = et.id
        LEFT OUTER JOIN user_tbl u ON u.id = et.entity_id and et.entity_type ='user' and u.date_deleted is NULL
        left outer JOIN user_profile_tbl up ON u.id = up.user_id
        LEFT OUTER JOIN charity_tbl c ON c.id=et.entity_id and et.entity_type ='charity'
        left outer JOIN organization_tbl o ON o.id = c.organization_id
        LEFT OUTER JOIN entity_tbl etparent ON sut.original_entity_id = etparent.id and sut.status_type='share'
        LEFT OUTER JOIN user_tbl uparent ON uparent.id = etparent.entity_id and etparent.entity_type ='user'
        left outer JOIN user_profile_tbl upparent ON uparent.id = upparent.user_id
        LEFT OUTER JOIN charity_admin_tbl chatt ON chatt.charity_id=etparent.entity_id
        and chatt.date_deleted is NULL and etparent.entity_type ='charity'
        LEFT OUTER JOIN charity_tbl cparent ON cparent.id=chatt.charity_id
        left outer JOIN organization_tbl oparent ON oparent.id = cparent.organization_id
        where sult.linked_id = ? and sult.linked_type='code'  LIMIT 5 offset ?) 
        UNION ALL
        (SELECT
        COALESCE(u.name,o.title ) as creator_name,
        COALESCE(up.profile_pic_url,o.profile_pic_url) as creator_pic,
        COALESCE(u.id,c.id) as creator_id,
        sut.id, sut.entity_id, et.entity_type,sut.content,sut.date_posted,
        sut.in_reply_id,sut.original_entity_id,sut.status_type,sut.retweets,sut.reply_count,sut.image_url,
        sut.headline,
        et.slug as commonSlug,
        etparent.slug as parentSlug,
        COALESCE(uparent.name,oparent.title ) as parent_creator_name,
        COALESCE(upparent.profile_pic_url,oparent.profile_pic_url) as parent_creator_pic,
        COALESCE(uparent.id,cparent.id) as parent_creator_id,
        COALESCE(etparent.entity_type) as parent_type,
        mt.metadata as metadata,
        mt.code_json as code_tmpl
        FROM status_update_link_tbl sult
        INNER JOIN status_update_tbl sut ON sut.id = sult.post_id and sut.date_deleted is null
        left outer join metadata_tbl mt on mt.post_id = sut.id
        INNER JOIN entity_tbl et ON sut.entity_id = et.id
        LEFT OUTER JOIN user_tbl u ON u.id = et.entity_id and et.entity_type ='user' and u.date_deleted is NULL
        left outer JOIN user_profile_tbl up ON u.id = up.user_id
        LEFT OUTER JOIN charity_tbl c ON c.id=et.entity_id and et.entity_type ='charity'
        left outer JOIN organization_tbl o ON o.id = c.organization_id
        LEFT OUTER JOIN entity_tbl etparent ON sut.original_entity_id = etparent.id and sut.status_type='share'
        LEFT OUTER JOIN user_tbl uparent ON uparent.id = etparent.entity_id and etparent.entity_type ='user'
        left outer JOIN user_profile_tbl upparent ON uparent.id = upparent.user_id
        LEFT OUTER JOIN charity_admin_tbl chatt ON chatt.charity_id=etparent.entity_id
        and chatt.date_deleted is NULL and etparent.entity_type ='charity'
        LEFT OUTER JOIN charity_tbl cparent ON cparent.id=chatt.charity_id
        LEFT OUTER JOIN charity_admin_tbl chat ON chat.charity_id=cparent.id
        left outer JOIN organization_tbl oparent ON oparent.id = cparent.organization_id
        where sult.linked_id in (select team_code_id from team_campaigns_tbl where original_code_id=?) and sult.linked_type='code' ORDER BY date_posted  DESC LIMIT 5 OFFSET ?) ]]>
    </sql-query>
    <sql-query id="updateCharityImageForCustom">
        <![CDATA[update organization_tbl ogt inner join charity_tbl ct on 
        ogt.id=ct.organization_id inner join entity_tbl et on et.entity_id=ct.id and et.entity_type='charity' set ogt.profile_pic_url=? where et.id in(?)]]>
    </sql-query>
    <sql-query id="updateMemberCampaignPaymentGateway">
        <![CDATA[ UPDATE code_tbl SET payment_gateway_id=? WHERE individual='yes' AND user_id=?]]>        
    </sql-query>
    <sql-query id="getPrisingModals">
        <![CDATA[ select pt.app_fee from pricing_tbl pt where pt.from= ? and pt.to = ?]]>        
    </sql-query>
</sql-queries>
